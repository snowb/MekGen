{"version":3,"sources":["webpack:///./src/design_components/mek_beam/subcomponents/mek_beam-feature.vue?3abf","webpack:///./src/data_table_modules/mek_beam/mek_beam-feature-data-module.js","webpack:///src/design_components/mek_beam/subcomponents/mek_beam-feature.vue","webpack:///./src/design_components/mek_beam/subcomponents/mek_beam-feature.vue?254b","webpack:///./src/design_components/mek_beam/subcomponents/mek_beam-feature.vue","webpack:///./src/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./src/mixins/alerts_mixin.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","items","filteredFeatureTable","pkey","selected-keys","selected_keys","headers","feature","cost","show-headers","format","flow","name","on","update-selected-data","select_feature","staticRenderFns","raw_feature_data_table","exclusive_anti_missile","exclusive_personnel","filter","_el","undefined","exclusive_personnel_missile","data_table_keys","feature_data_table","data_cached","filter_data_table","_burst_value","_val","cached_validate","partial_validate","feature_validate","_data","has_feature","_pkey","partial_has_feature","get_feature","partial_get_feature","is_exclusive_feature","_exclusive_target","_pkey_value","exclusive_target_array","toLowerCase","JSON","parse","stringify","some","cleaned_feature","_feature_array","hasExclusivemissile","hasExclusivePersonnel","hasExclusivePersonnelmissile","update","key_list","alerts","length","cleaned_array","push","error","temp_selected_feature_array","reduceRight","_cleaned_array","clean_feature","ismissile","isPersonnel","isPersonnelmissile","includes","reverse","mek_beam_featurevue_type_script_lang_js_","props","mixins","alerts_mixin","components","mek-sub-component-table","__webpack_require__","e","then","bind","data","obj","suppressAlerts","selected_feature_array","methods","_selected_feature","new_selected_feature_array","toggleFeature","cleaned_data","forEach","_alert","addAlert","publishAlerts","$set","$emit","[object Object]","_feature","feature_array","remove_feature","computed","burstValue","featureArray","watch","_newval","_oldval","subcomponents_mek_beam_featurevue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","d","partial_cleaned_feature","_data_table","_validation_keys","Array","isArray","valid","_keys","_key","_has_feature","found_feature","_table_val","_validator","_get_feature","_default_data","_name","json_data","_alert_string","$store","commit"],"mappings":"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","file":"js/mek_beam-feature.95a4930b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.filteredFeatureTable,\"pkey\":_vm.pkey,\"selected-keys\":_vm.selected_keys,\"headers\":{feature:'Feature',cost:'Cost'},\"show-headers\":true,\"format\":{cost:'multiplier'},\"flow\":\"pkey-col\",\"name\":\"Features\"},on:{\"update-selected-data\":_vm.select_feature}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature} from \"../universal/mek_partial-function-data-module\";\r\n\r\n//create new feature_data_table\r\nlet raw_feature_data_table=\r\n[\r\n    {feature:\"Mag-Fed\",cost:0.9},\r\n    {feature:\"Anti-Missile\",cost:1,exclusive_anti_missile:true},\r\n    {feature:\"Variable Anti-Missile\",cost:1.8,exclusive_anti_missile:true},\r\n    {feature:\"Anti-Personnel\",cost:1.0,exclusive_personnel:true},\r\n    {feature:\"Variable Anti-Personnel\",cost:1.8,exclusive_personnel:true},\r\n    {feature:\"Anti-Missile & Personnel\",cost:1.6,exclusive_personnel:true,exclusive_anti_missile:true},\r\n    {feature:\"All Purpose\",cost:2.6,exclusive_personnel:true,exclusive_anti_missile:true},\r\n    {feature:\"Fragile\",cost:1},\r\n    {feature:\"Long Range\",cost:1.33},\r\n    {feature:\"Hydro\",cost:0.2},\r\n    {feature:\"Mega-Beam\",cost:10},\r\n    {feature:\"Disruptor\",cost:2},\r\n];\r\nlet exclusive_anti_missile=raw_feature_data_table.filter((_el)=>{return _el.exclusive_anti_missile!==undefined;});\r\nlet exclusive_personnel=raw_feature_data_table.filter((_el)=>{return _el.exclusive_personnel!==undefined;});\r\nlet exclusive_personnel_missile=raw_feature_data_table.filter((_el)=>{return _el.exclusive_personnel!==undefined && _el.exclusive_anti_missile!==undefined;});\r\nlet data_table_keys=[\"feature\",\"cost\",\"exclusive_anti_missile\",\"exclusive_personnel\"];\r\n\r\nlet feature_data_table=raw_feature_data_table;\r\nlet data_cached=false;\r\n\r\nlet filter_data_table=(_burst_value)=>\r\n{\r\n    data_cached=false;\r\n    if(_burst_value>1)\r\n    {\r\n        feature_data_table=raw_feature_data_table;\r\n        return;\r\n    }\r\n    feature_data_table=raw_feature_data_table.filter((_val)=>\r\n    {\r\n        return !_val.exclusive_anti_missile\r\n    });\r\n};\r\n\r\nlet cached_validate=partial_validate(raw_feature_data_table, data_table_keys);\r\n//data validator for feature_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet feature_validate=(_data)=>\r\n{\r\n    if(data_cached)\r\n    {\r\n        return cached_validate(_data);\r\n    }\r\n    data_cached=true;\r\n    cached_validate=partial_validate(feature_data_table, data_table_keys);\r\n    return cached_validate(_data);\r\n}\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=(_pkey,_data)=>\r\n{\r\n    return partial_has_feature(feature_data_table)(_pkey,_data);\r\n}\r\n\r\n//completed function for returning matching data\r\nlet get_feature=(_pkey,_data)=>\r\n{\r\n    return partial_get_feature(feature_data_table, has_feature)(_pkey,_data);\r\n}\r\n\r\nlet is_exclusive_feature=function(_exclusive_target, _pkey, _pkey_value)\r\n{\r\n    let exclusive_target_array=null;\r\n    switch(_exclusive_target.toLowerCase())\r\n    {\r\n        case \"exclusive_anti_missile\":\r\n            exclusive_target_array=JSON.parse(JSON.stringify(exclusive_anti_missile));\r\n            break;\r\n        case \"exclusive_personnel\":\r\n            exclusive_target_array=JSON.parse(JSON.stringify(exclusive_personnel));\r\n            break;\r\n        case \"exclusive_personnel_missile\":\r\n            exclusive_target_array=JSON.parse(JSON.stringify(exclusive_personnel_missile));\r\n            break;\r\n    }\r\n    if(exclusive_target_array===null)\r\n    {\r\n        return false;\r\n    }\r\n    return exclusive_target_array.some((_val)=>\r\n    {\r\n        return _val[_pkey]==_pkey_value;\r\n    });\r\n};\r\n\r\n/*****\r\n * *\r\n * *    likely need to setup create_feature_data_table taking Blast_Radius and Smart as input\r\n * *    so claned_feature will remove invalid features\r\n * *\r\n *****/\r\n\r\n\r\n/*** \r\n * \r\n * find way to switch to partial function\r\n * \r\n * ***/\r\nlet cleaned_feature=function(_feature_array, _pkey)\r\n{//takes feature_array, returns cleaned array removing multiple exclusive values\r\n    let hasExclusivemissile=false;\r\n    let hasExclusivePersonnel=false;\r\n    let hasExclusivePersonnelmissile=false;\r\n    let update=false;\r\n    let key_list=[];\r\n    let alerts=[];\r\n    if(_feature_array.length===0)\r\n    {\r\n        return {cleaned_array:[],update:false,key_list:[],alerts:alerts};\r\n    }\r\n    if(_feature_array===undefined || _pkey===undefined)\r\n    {\r\n        alerts.push(\"Mek_Beam-Feature: \");\r\n        let error=_feature_array===undefined\r\n            ? \"**** Missing feature array. Returning default. ****\"\r\n            : \"**** No primary key provided. Returning default. ****\";\r\n        alerts.push(error);\r\n        return {cleaned_array:[],update:true,key_list:[],alerts:alerts};\r\n    }\r\n    let temp_selected_feature_array=_feature_array.reduceRight((_cleaned_array, _val)=>\r\n    {\r\n        if(_val[_pkey]===undefined)\r\n        {//if feature with pkey doesn't exist in data table, ignore\r\n            alerts.push(\"Mek_Beam-Feature: \"+JSON.stringify(_val));\r\n            alerts.push(\"**** Missing primary key. Ignoring. ****\");\r\n            return _cleaned_array;\r\n        }\r\n        let clean_feature=_val;\r\n        if(!feature_validate(_val))\r\n        {//invalid data\r\n            alerts.push(\"Mek_Beam-Feature: \"+JSON.stringify(_val))\r\n            alerts.push(\"**** Invalid data, attempting to reset. ****\")\r\n            clean_feature=get_feature(_pkey,_val[_pkey]);\r\n            update=true;\r\n            //attempt to set to corrected feature\r\n        }\r\n        if(clean_feature===null)\r\n        {//no matching feature\r\n            alerts.push(\"**** Unable to reset. No matching data. ****\")\r\n            update=true;\r\n            return _cleaned_array;\r\n            //ignore element\r\n        }\r\n        let ismissile=is_exclusive_feature(\"exclusive_anti_missile\",_pkey,_val[_pkey]);\r\n        let isPersonnel=is_exclusive_feature(\"exclusive_personnel\",_pkey,_val[_pkey]);\r\n        let isPersonnelmissile=is_exclusive_feature(\"exclusive_personnel_missile\",_pkey,_val[_pkey]);\r\n\r\n        if(isPersonnelmissile && !hasExclusivePersonnelmissile)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusivePersonnelmissile=true;\r\n            hasExclusivePersonnel=true;\r\n            hasExclusivemissile=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isPersonnelmissile && hasExclusivePersonnelmissile)\r\n        {\r\n            alerts.push(\"Mek_Beam-Feature: \"+_val);\r\n            alerts.push(\"**** Duplicate Exclusive Personnel-Beam data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n        if(ismissile && !hasExclusivemissile)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusivemissile=true;\r\n            hasExclusivePersonnelmissile=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(ismissile && hasExclusivemissile)\r\n        {\r\n            alerts.push(\"Mek_Beam-Feature: \"+_val);\r\n            alerts.push(\"**** Duplicate Exclusive missile data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n        if(isPersonnel && !hasExclusivePersonnel)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusivePersonnel=true;\r\n            hasExclusivePersonnelmissile=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isPersonnel && hasExclusivePersonnel)\r\n        {\r\n            alerts.push(\"Mek_Beam-Feature: \"+_val);\r\n            alerts.push(\"**** Duplicate Exclusive Anti-Personnel data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n        if(!key_list.includes(_val[_pkey]))\r\n        {\r\n            _cleaned_array.push(_val);\r\n            key_list.push(_val[_pkey]);\r\n        }\r\n        return _cleaned_array;\r\n    },[]);\r\n    temp_selected_feature_array=temp_selected_feature_array.reverse();\r\n    if(temp_selected_feature_array.length==0)\r\n    {//empty, reset to default\r\n        temp_selected_feature_array=[];\r\n        update=true;\r\n        key_list=[];\r\n        alerts.push(\"Mek_Beam-Feature: \");\r\n        alerts.push(\"**** Reseting to default ****\");\r\n    }\r\n    return {cleaned_array:temp_selected_feature_array,update:update,key_list:key_list,alerts:alerts};\r\n    //returns an object with the pruned feature array, whether it was updated, and the key_list\r\n};\r\n\r\nexport {feature_data_table, feature_validate, has_feature, get_feature, cleaned_feature, filter_data_table};\r\n","<template>\r\n    <mek-sub-component-table\r\n        :items=\"filteredFeatureTable\" :pkey=\"pkey\" :selected-keys=\"selected_keys\"\r\n        :headers=\"{feature:'Feature',cost:'Cost'}\" :show-headers=\"true\" :format=\"{cost:'multiplier'}\"\r\n        flow=\"pkey-col\" name=\"Features\"\r\n        @update-selected-data=\"select_feature\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport alerts_mixin from \"../../../mixins/alerts_mixin\";\r\n\r\nimport {feature_data_table, cleaned_feature, filter_data_table} \r\n    from \"../../../data_table_modules/mek_beam/mek_beam-feature-data-module.js\";\r\n\r\nexport default \r\n{\r\n    name:\"mek_beam_feature\",\r\n    props:[\"featureArray\",\"burstValue\"],\r\n    mixins:[alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"../../universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.pkey=\"feature\";\r\n        obj.alerts=[];\r\n        obj.suppressAlerts=false;\r\n        obj.selected_feature_array=[];\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_feature:function(_selected_feature)\r\n        {//refactor to external feature array cleaner\r\n            this.suppressAlerts=true;//suppress alerts, for exclusive switching\r\n            let new_selected_feature_array=this.toggleFeature(this.selected_feature_array,_selected_feature);\r\n            let cleaned_data=cleaned_feature(new_selected_feature_array, this.pkey);\r\n            new_selected_feature_array=cleaned_data.cleaned_array;\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            this.$set(this,\"selected_feature_array\",new_selected_feature_array);\r\n            this.$emit(\"update-feature\",new_selected_feature_array);\r\n            this.suppressAlerts=false;\r\n        },\r\n        toggleFeature(_feature_array,_feature)\r\n        {\r\n            let feature_array=JSON.parse(JSON.stringify(_feature_array));\r\n            \r\n            let remove_feature=feature_array.some((_val)=>\r\n            {//if _feature matches already existing feature, flag for deletion\r\n                return _val[this.pkey]==_feature[this.pkey];\r\n            },this);\r\n\r\n            if(remove_feature)\r\n            {//if flagged for removal, filter out\r\n                return feature_array.filter((_val)=>\r\n                {\r\n                    return _val[this.pkey]!=_feature[this.pkey];\r\n                },this);\r\n            }\r\n            feature_array.push(_feature);\r\n            //otherwise add feature and return\r\n            return feature_array;\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        filteredFeatureTable()\r\n        {\r\n            this.suppressAlerts=true;\r\n            filter_data_table(this.burstValue);\r\n            return feature_data_table;\r\n        },\r\n        selected_keys()\r\n        {\r\n            this.burstValue;\r\n            let cleaned_data=cleaned_feature(this.featureArray,this.pkey);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.$emit(\"update-feature\",cleaned_data.cleaned_array);\r\n            }\r\n            this.$set(this,\"selected_feature_array\",cleaned_data.cleaned_array);\r\n            this.suppressAlerts=false;\r\n            return cleaned_data.key_list;\r\n        }\r\n    },\r\n    watch:\r\n    {\r\n        \"burstValue\":function(_newval,_oldval)\r\n        {//must track changes in burstValue to disable alerts for removed features on cleaned_feat\r\n            if(_newval!=_oldval)\r\n            {\r\n                this.suppressAlerts=true;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_beam-feature.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_beam-feature.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_beam-feature.vue?vue&type=template&id=16987bf5&\"\nimport script from \"./mek_beam-feature.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_beam-feature.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return !_validation_keys.some((_keys)=>\r\n        {//returns true on invalid data, Not the return to return True if matching valid value is found\r\n            return _data[_keys]!=_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
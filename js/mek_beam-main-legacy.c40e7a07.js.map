{"version":3,"sources":["webpack:///./src/components/mek_beam/mek_beam-main.vue?0058","webpack:///./src/components/mek_beam/subcomponents/mek_beam-shots.vue?1101","webpack:///./src/components/data_table_modules/mek_beam/mek_beam-shots-data-module.js","webpack:///src/components/mek_beam/subcomponents/mek_beam-shots.vue","webpack:///./src/components/mek_beam/subcomponents/mek_beam-shots.vue?da4c","webpack:///./src/components/mek_beam/subcomponents/mek_beam-shots.vue","webpack:///src/components/mek_beam/mek_beam-main.vue","webpack:///./src/components/mek_beam/mek_beam-main.vue?944d","webpack:///./src/components/mek_beam/mek_beam-main.vue","webpack:///./src/mixins/alerts_mixin.js","webpack:///./src/components/data_table_modules/universal/mek_partial-function-data-module.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","width","attrs","new-component","newComponent","component-name","component_name","beam_name","component-changed","component_changed","on","update-component-name","updateComponentName","damage","selected_damage","update-damage","updateDamage","accuracy","selected_accuracy","update-accuracy","updateAccuracy","burst-value","selected_burst_value","update-burst-value","updateBurstValue","directives","name","rawName","value","expression","shots","selected_shots","mag-fed","mag_fed","update-shots","updateShots","align-self","range-mod","selected_range_mod","anti-missile","anti_missile","base-range","range","update-range-mod","updateRangeMod","warm-up-time","selected_warm_up_time","update-warm-up-time","updateWarmUpTime","_e","wide-angle","selected_wide_angle","update-wide-angle","updateWideAngle","space_efficiency","efficiencies","space","raw_space","update-efficiencies","updateEfficiencies","feature-array","feature_array","burst_value","update-feature","updateFeature","cols","rows","slot","_v","_s","damage_capacity","range_mod","max-width","margin-left","feature_list","round","space_cost","weight","cost","cost_multiplier","font-weight","save-reset-component","componentSaveReset","staticRenderFns","mek_beam_shotsvue_type_template_id_43ed8256_render","items","shots_table","pkey","selected-keys","selected_keys","headers","flow","show-headers","format","update-selected-data","select_shots","mek_beam_shotsvue_type_template_id_43ed8256_staticRenderFns","raw_shots_data_table","shots_data_table","data_cached","filter_shots_data_table","_mag_fed","filter","_val","default_data","has_feature","partial_has_feature","get_feature","partial_get_feature","cleaned_feature","partial_cleaned_feature","shots_validate","data_table_keys","cached_validate","partial_validate","_data","console","error","mek_beam_shotsvue_type_script_lang_js_","props","mixins","alerts_mixin","components","mek-sub-component-table","__webpack_require__","e","then","bind","data","obj","alerts","suppressAlerts","methods","_shots","JSON","parse","stringify_default","$emit","computed","mek_beam_shots_data_module_filter_shots_data_table","magFed","_this","cleaned_data","length","forEach","_alert","addAlert","publishAlerts","update","key_list","watch","_newval","_oldval","subcomponents_mek_beam_shotsvue_type_script_lang_js_","component","Object","componentNormalizer","mek_beam_shots","mek_beam_mainvue_type_script_lang_js_","utility_mixin","component_computed_mixin","component_methods_mixin","mek-beam-damage","mek-beam-accuracy","mek-beam-burst-value","mek-beam-range-mod","mek-beam-shots","mek-beam-warm-up-time","mek-beam-wide-angle","mek-beam-feature","mek-space-efficiency","mek-component-name","mek-save-reset-component","mek-component-stats","mounted","uuid","component_category","component_type","original_component","time","angle","modifier","cost_multipliers","feature","wide_angle","warm_up_time","forceTrue","_name","$set","_damage","_accuracy","_burst_value","_range_mod","_warm_up_time","_wide_angle","_featureArray","reduce","_multi","projectile_name","fragile","_action","action","$store","commit","output_data","ingest_data","return_data","create_uuid","total_cost","final_damage","$nextTick","_data_object","_this2","alertMessage","universal_ingest_data","subtotal_cost","isInfiniteBurst","isBurst","isHydro","isMegaBeam","toLowerCase","trim","replace","some","show_warm_up_time","mek_beam_mek_beam_mainvue_type_script_lang_js_","mek_beam_main_component","__webpack_exports__","_alert_string","push","_data_table","_validation_keys","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_1___default","valid","_keys","_key","undefined","_has_feature","found_feature","_table_val","_validator","_get_feature","_default_data","_pkey","_feature","json_data","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/mek_beam-main-legacy.c40e7a07.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.mounted)?_c('span',{staticClass:\"mek-inline-flex-col\",staticStyle:{\"width\":\"100%\"}},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.beam_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-beam-damage',{attrs:{\"damage\":_vm.selected_damage},on:{\"update-damage\":_vm.updateDamage}}),_c('mek-beam-accuracy',{attrs:{\"accuracy\":_vm.selected_accuracy},on:{\"update-accuracy\":_vm.updateAccuracy}})],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('div',{staticClass:\"mek-flex-col no-margin\"},[_c('mek-beam-burst-value',{attrs:{\"burst-value\":_vm.selected_burst_value},on:{\"update-burst-value\":_vm.updateBurstValue}}),_c('mek-beam-shots',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.forceTrue),expression:\"forceTrue\"}],attrs:{\"shots\":_vm.selected_shots,\"mag-fed\":_vm.mag_fed},on:{\"update-shots\":_vm.updateShots}})],1),_c('mek-beam-range-mod',{staticStyle:{\"align-self\":\"start\"},attrs:{\"range-mod\":_vm.selected_range_mod,\"anti-missile\":_vm.anti_missile,\"base-range\":_vm.selected_damage.range},on:{\"update-range-mod\":_vm.updateRangeMod}}),_c('div',{staticClass:\"mek-inline-flex-col\"},[(_vm.show_warm_up_time)?_c('mek-beam-warm-up-time',{attrs:{\"warm-up-time\":_vm.selected_warm_up_time},on:{\"update-warm-up-time\":_vm.updateWarmUpTime}}):_vm._e(),_c('mek-beam-wide-angle',{attrs:{\"wide-angle\":_vm.selected_wide_angle},on:{\"update-wide-angle\":_vm.updateWideAngle}}),_c('mek-space-efficiency',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"space_efficiency\":_vm.efficiencies.space,\"raw_space\":_vm.raw_space},on:{\"update-efficiencies\":_vm.updateEfficiencies}})],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-beam-feature',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"feature-array\":_vm.feature_array,\"burst-value\":_vm.selected_burst_value.burst_value},on:{\"update-feature\":_vm.updateFeature}})],1)],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":4}},[_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Kills: \"+_vm._s(_vm.selected_damage.damage)+\" K\")]),_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_vm._v(\"Damage Capacity: \"+_vm._s(_vm.damage_capacity)+\" K\")]),(_vm.selected_shots.shots==0)?_c('div',{attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Shutdown: \"+_vm._s(_vm.selected_damage.damage)+\" turns\")]):_vm._e(),_c('div',{attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Final Range: \"+_vm._s(_vm.selected_damage.range * _vm.selected_range_mod.range_mod))]),_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Feature(s):\"),_c('div',{staticStyle:{\"max-width\":\"150px\",\"margin-left\":\"10px\"}},[_vm._v(_vm._s(_vm.feature_list))])]),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.round(_vm.raw_space,2)))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Space: \"+_vm._s(_vm.space_cost))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.round(_vm.weight,2))+\" tons\")]),(_vm.mag_fed)?_c('div',{attrs:{\"slot\":\"col3-row4\"},slot:\"col3-row4\"},[_vm._v(\"E-Mag: +1CP, +1SP\")]):_vm._e(),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.selected_damage.cost))]),_c('div',{attrs:{\"slot\":\"col4-row2\"},slot:\"col4-row2\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.round(_vm.cost_multiplier,2)))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row3\"},slot:\"col4-row3\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.shots_table,\"pkey\":_vm.pkey,\"selected-keys\":_vm.selected_keys,\"headers\":{shots:'Shots',cost:'Cost'},\"name\":\"Shots\",\"flow\":\"pkey-row\",\"show-headers\":true,\"format\":{cost:'multiplier'}},on:{\"update-selected-data\":_vm.select_shots}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature} from \"../universal/mek_partial-function-data-module\";\r\n\r\n//create new shots_data_table\r\nlet raw_shots_data_table=\r\n[\r\n    {shots:0,cost:0.33},\r\n    {shots:1,cost:0.5},\r\n    {shots:2,cost:0.6},\r\n    {shots:3,cost:0.7},\r\n    {shots:5,cost:0.8},\r\n    {shots:10,cost:0.9},\r\n    {shots:\"__INFINITY__\",cost:1},\r\n    {shots:15,cost:1},\r\n];\r\nlet shots_data_table=raw_shots_data_table;\r\nlet data_cached=false;\r\nlet filter_shots_data_table=(_mag_fed)=>\r\n{\r\n    if(!_mag_fed)\r\n    {\r\n        shots_data_table=raw_shots_data_table.filter((_val)=>\r\n        {\r\n            return _val.shots!=15;\r\n        });\r\n        default_data={shots:\"__INFINITY__\",cost:1}\r\n    }\r\n    else\r\n    {\r\n        shots_data_table=raw_shots_data_table.filter((_val)=>\r\n        {\r\n            return _val.shots!=0 && _val.shots!=\"__INFINITY__\";\r\n        });\r\n        default_data={shots:15,cost:1};\r\n    }\r\n    //reset all functions for new table\r\n    has_feature=partial_has_feature(shots_data_table);\r\n    get_feature=partial_get_feature(shots_data_table, has_feature);\r\n    cleaned_feature=\r\n        partial_cleaned_feature(shots_validate, has_feature, get_feature, default_data, \"Mek_Beam-Shots\");\r\n    data_cached=false;\r\n};\r\nfilter_shots_data_table(false);\r\n\r\nlet data_table_keys=[\"shots\",\"cost\"];\r\nlet default_data={shots:\"__INFINITY__\",cost:1};\r\n\r\nlet cached_validate=partial_validate(shots_data_table, data_table_keys);\r\n//data validator for shots_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet shots_validate=(_data)=>\r\n{\r\n    if(data_cached)\r\n    {\r\n        return cached_validate(_data);\r\n    }\r\n    data_cached=true;\r\n    cached_validate=partial_validate(shots_data_table, data_table_keys);\r\n    return cached_validate(_data);\r\n}\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=partial_has_feature(shots_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_feature=partial_get_feature(shots_data_table, has_feature);\r\n\r\n//completed function for returning cleaed data\r\nlet cleaned_feature=\r\n    partial_cleaned_feature(shots_validate, has_feature, get_feature, default_data, \"Mek_Beam-Shots\");\r\n\r\nexport {shots_data_table, shots_validate, has_feature, get_feature, cleaned_feature, filter_shots_data_table};\r\n","<template>\r\n    <mek-sub-component-table\r\n        :items=\"shots_table\" :pkey=\"pkey\" :selected-keys=\"selected_keys\"\r\n        :headers=\"{shots:'Shots',cost:'Cost'}\"\r\n        name=\"Shots\" flow=\"pkey-row\" :show-headers=\"true\"\r\n        :format=\"{cost:'multiplier'}\"\r\n        @update-selected-data=\"select_shots\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n\r\n<script>\r\nimport alerts_mixin from \"../../../mixins/alerts_mixin\";\r\nimport {shots_data_table, cleaned_feature, filter_shots_data_table}\r\n    from \"../../data_table_modules/mek_beam/mek_beam-shots-data-module.js\";\r\n\r\nconsole.error(\"mek_beam-shots.vue importing\")\r\n\r\nexport default \r\n{\r\n    name: \"mek_beam_shots\",\r\n    props:[\"shots\",\"magFed\"],\r\n    mixins:[alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"../../universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={}\r\n        obj.alerts=[];\r\n        obj.pkey=\"shots\";\r\n        obj.suppressAlerts=false;\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_shots:function(_shots)\r\n        {\r\n            let data=JSON.parse(JSON.stringify(_shots));        \r\n            this.$emit(\"update-shots\",data);\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        shots_table()\r\n        {\r\n            filter_shots_data_table(this.magFed);\r\n            return shots_data_table;\r\n        },\r\n        selected_keys()\r\n        {\r\n            this.magFed;\r\n            let cleaned_data=cleaned_feature(this.pkey, this.shots);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.select_shots(cleaned_data.data);\r\n            }\r\n            this.suppressAlerts=false;\r\n            return cleaned_data.key_list;\r\n        }\r\n    },\r\n    watch:\r\n    {\r\n        magFed(_newval,_oldval)\r\n        {\r\n            if(_newval!=_oldval)\r\n            {\r\n                this.suppressAlerts=true;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_beam-shots.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_beam-shots.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_beam-shots.vue?vue&type=template&id=43ed8256&\"\nimport script from \"./mek_beam-shots.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_beam-shots.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n        <span class=\"mek-inline-flex-col\" style=\"width:100%;\" v-if=\"mounted\">\r\n            <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||beam_name\"\r\n                :component-changed=\"component_changed\"\r\n                @update-component-name=\"updateComponentName\"\r\n            ></mek-component-name>\r\n            <div class=\"mek-inline-flex-row\">\r\n                <mek-beam-damage @update-damage=\"updateDamage\" :damage=\"selected_damage\"></mek-beam-damage>\r\n                <mek-beam-accuracy \r\n                    @update-accuracy=\"updateAccuracy\" \r\n                    :accuracy=\"selected_accuracy\"\r\n                ></mek-beam-accuracy>\r\n            </div>\r\n            <div class=\"mek-inline-flex-row\">\r\n                <div class=\"mek-flex-col no-margin\">\r\n                    <mek-beam-burst-value \r\n                        @update-burst-value=\"updateBurstValue\" \r\n                        :burst-value=\"selected_burst_value\"\r\n                    ></mek-beam-burst-value>\r\n                    <mek-beam-shots v-show=\"forceTrue\"\r\n                        @update-shots=\"updateShots\" \r\n                        :shots=\"selected_shots\" :mag-fed=\"mag_fed\"\r\n                    ></mek-beam-shots>\r\n                </div>\r\n                <mek-beam-range-mod style=\"align-self:start;\"\r\n                    @update-range-mod=\"updateRangeMod\"\r\n                    :range-mod=\"selected_range_mod\" :anti-missile=\"anti_missile\"\r\n                    :base-range=\"selected_damage.range\"\r\n                ></mek-beam-range-mod>\r\n                <div class=\"mek-inline-flex-col\">\r\n                    <mek-beam-warm-up-time v-if=\"show_warm_up_time\"\r\n                        @update-warm-up-time=\"updateWarmUpTime\"\r\n                        :warm-up-time=\"selected_warm_up_time\"\r\n                    ></mek-beam-warm-up-time>\r\n                    <mek-beam-wide-angle\r\n                        @update-wide-angle=\"updateWideAngle\"\r\n                        :wide-angle=\"selected_wide_angle\"\r\n                    ></mek-beam-wide-angle>\r\n                    <mek-space-efficiency style=\"align-self:baseline;\"\r\n                        :space_efficiency=\"efficiencies.space\"\r\n                        :raw_space=\"raw_space\"\r\n                        @update-efficiencies=\"updateEfficiencies\"\r\n                    ></mek-space-efficiency>\r\n                </div>\r\n                <div class=\"mek-inline-flex-row\">           \r\n                    <mek-beam-feature style=\"align-self:baseline;\"\r\n                            @update-feature=\"updateFeature\"\r\n                            :feature-array=\"feature_array\"\r\n                            :burst-value=\"selected_burst_value.burst_value\"\r\n                        ></mek-beam-feature>\r\n                </div>\r\n            </div>\r\n            <div class=\"mek-inline-flex-row\">\r\n                <mek-component-stats :cols=\"4\" :rows=\"4\">\r\n                    <div slot=\"col1-row1\">Kills: {{selected_damage.damage}} K</div>\r\n                    <div slot=\"col1-row2\">Damage Capacity: {{damage_capacity}} K</div>\r\n                    <div slot=\"col1-row3\" v-if=\"selected_shots.shots==0\">Shutdown: {{selected_damage.damage}} turns</div>\r\n                    <div slot=\"col1-row3\">Final Range: {{selected_damage.range * selected_range_mod.range_mod}}</div>\r\n\r\n                    <div slot=\"col2-row1\">Feature(s):<div style=\"max-width:150px;margin-left:10px;\">{{feature_list}}</div></div>\r\n\r\n                    <div slot=\"col3-row1\">Base Space: {{round(raw_space,2)}}</div>\r\n                    <div slot=\"col3-row2\">Space: {{space_cost}}</div>\r\n                    <div slot=\"col3-row3\">Weight: {{round(weight,2)}} tons</div>\r\n                    <div slot=\"col3-row4\" v-if=\"mag_fed\">E-Mag: +1CP, +1SP</div>\r\n\r\n                    <div slot=\"col4-row1\">Base Cost: {{selected_damage.cost}}</div>\r\n                    <div slot=\"col4-row2\">Multiplier: x{{round(cost_multiplier,2)}}</div>\r\n                    <div slot=\"col4-row3\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n                </mek-component-stats>\r\n                <mek-save-reset-component @save-reset-component=\"componentSaveReset\"></mek-save-reset-component>\r\n            </div>\r\n        </span>\r\n</template>\r\n\r\n<script>\r\nimport utility_mixin from \"../../mixins/utility_mixin\";\r\nimport component_computed_mixin from \"../../mixins/component_computed_mixin\";\r\nimport component_methods_mixin from \"../../mixins/component_methods_mixin\";\r\n\r\nimport mek_beam_shots from \"./subcomponents/mek_beam-shots.vue\";\r\n\r\n\r\nexport default\r\n{\r\n    name:\"mek_beam\",\r\n    props:[],\r\n    mixins:[utility_mixin, component_computed_mixin, component_methods_mixin],\r\n    components:\r\n    {\r\n        \"mek-beam-damage\":()=>import(/* webpackChunkName: \"mek_beam-damage\" */\"./subcomponents/mek_beam-damage.vue\"),\r\n        \"mek-beam-accuracy\":()=>import(/* webpackChunkName: \"mek_beam-accuracy\" */\"./subcomponents/mek_beam-accuracy.vue\"),\r\n        \"mek-beam-burst-value\":()=>import(/* webpackChunkName: \"mek_beam-burst-value\" */\"./subcomponents/mek_beam-burst-value.vue\"),\r\n        \"mek-beam-range-mod\":()=>import(/* webpackChunkName: \"mek_beam-range-mod\" */\"./subcomponents/mek_beam-range-mod.vue\"),\r\n        //\"mek-beam-shots\":()=>import(/* webpackChunkName: \"mek_beam-shots\" */\"./subcomponents/mek_beam-shots.vue\"),\r\n        \"mek-beam-shots\":mek_beam_shots,\r\n        \"mek-beam-warm-up-time\":()=>import(/* webpackChunkName: \"mek_beam-warm-up-time\" */\"./subcomponents/mek_beam-warm-up-time.vue\"),\r\n        \"mek-beam-wide-angle\":()=>import(/* webpackChunkName: \"mek_beam-wide-angle\" */\"./subcomponents/mek_beam-wide-angle.vue\"),\r\n        \"mek-beam-feature\":()=>import(/* webpackChunkName: \"mek_beam-feature\" */\"./subcomponents/mek_beam-feature.vue\"),\r\n\r\n        \"mek-space-efficiency\":()=>import(/* webpackChunkName: \"mek-space-efficiency\" */\"../universal/mek-space-efficiency.vue\"),\r\n        \"mek-component-name\":()=>import(/* webpackChunkName: \"mek-component-name\" */\"../universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>import(/* webpackChunkName: \"mek-save-reset-component\" */\"../universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>import(/* webpackChunkName: \"mek-component-stats\" */\"../universal/mek_component-stats.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.mounted=false;\r\n\r\n        obj.uuid=null;\r\n        obj.component_name=null;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"beam\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.damage_capacity=1;//varies by equipment\r\n\r\n        obj.selected_damage={damage:1,cost:1.5,range:4};\r\n        obj.selected_burst_value={burst_value:1,cost:1};\r\n        obj.selected_range_mod={range_mod:1,cost:1,range:4};\r\n        obj.selected_accuracy={accuracy:1,cost:1};\r\n        obj.selected_shots={shots:\"__INFINITY__\",cost:1};\r\n        obj.selected_warm_up_time={time:0,cost:1};\r\n        obj.selected_wide_angle={angle:\"__NIL__\",cost:1};\r\n        \r\n        obj.feature_array=[];\r\n\r\n        obj.efficiencies={};\r\n        obj.efficiencies.space={};\r\n        obj.efficiencies.space.cost=0;\r\n        obj.efficiencies.space.modifier=0;\r\n\r\n        obj.cost_multipliers={};\r\n        obj.cost_multipliers.accuracy=1;\r\n        obj.cost_multipliers.feature=1;\r\n        obj.cost_multipliers.shots=1;\r\n        obj.cost_multipliers.wide_angle=1;\r\n        obj.cost_multipliers.warm_up_time=1;\r\n        obj.cost_multipliers.burst_value=1;\r\n\r\n        obj.forceTrue=true;\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        updateComponentName(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        updateEfficiencies(_data)\r\n        {\r\n            this.$set(this.efficiencies,\"space\",_data);\r\n            this.component_changed=true;\r\n        },\r\n        updateDamage(_damage)\r\n        {\r\n            this.$set(this,\"selected_damage\",_damage);\r\n            this.component_changed=true;\r\n            this.damage_capacity=_damage.damage;\r\n        },\r\n        updateAccuracy(_accuracy)\r\n        {\r\n            this.$set(this,\"selected_accuracy\",_accuracy);\r\n            this.cost_multipliers.accuracy=_accuracy.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateBurstValue(_burst_value)\r\n        {\r\n            this.$set(this,\"selected_burst_value\",_burst_value);\r\n            this.cost_multipliers.burst_value=_burst_value.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateRangeMod(_range_mod)\r\n        {\r\n            this.$set(this,\"selected_range_mod\",_range_mod);\r\n            this.cost_multipliers.range_mod=_range_mod.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateShots(_shots)\r\n        {\r\n            this.$set(this,\"selected_shots\",_shots);\r\n            this.cost_multipliers.shots=_shots.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateWarmUpTime(_warm_up_time)\r\n        {\r\n            this.$set(this,\"selected_warm_up_time\",_warm_up_time);\r\n            this.cost_multipliers.warm_up_time=_warm_up_time.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateWideAngle(_wide_angle)\r\n        {\r\n            this.$set(this,\"selected_wide_angle\",_wide_angle);\r\n            this.cost_multipliers.wide_angle=_wide_angle.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateFeature(_featureArray)\r\n        {\r\n            this.$set(this,\"feature_array\",_featureArray);\r\n            this.cost_multipliers.feature=this.feature_array.reduce((_multi,_val)=>{return _multi*=_val.cost},1);\r\n            this.projectile_name;\r\n            this.damage_capacity=this.fragile ? 1 : this.selected_damage.damage;\r\n        },\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"clear\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                    }\r\n                    break;\r\n                case \"clear\":\r\n                    this.uuid=null;\r\n                    this.efficiencies.space.modifier=0;\r\n                    this.component_name=null;\r\n                    this.$set(this,\"feature_array\",[]);\r\n                    this.$set(this,\"selected_damage\",{damage:1,cost:1.5,range:4});\r\n                    this.$set(this,\"selected_burst_value\",{burst_value:1,cost:1});\r\n                    this.$set(this,\"selected_range_mod\",{range_mod:1,cost:1,range:4});\r\n                    this.$set(this,\"selected_accuracy\",{accuracy:1,cost:1});\r\n                    this.$set(this,\"selected_shots\",{shots:\"__INFINITY__\",cost:1});\r\n                    this.$set(this,\"selected_warm_up_time\",{time:0,cost:1});\r\n                    this.$set(this,\"selected_wide_angle\",{angle:\"__NIL__\",cost:1});\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        },\r\n        output_data()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"beam\";//specific equipment type\r\n            return_data.component_name=this.component_name===null?this.beam_name:this.component_name;\r\n\r\n            return_data.cost_multipliers=JSON.parse(JSON.stringify(this.cost_multipliers));\r\n            return_data.efficiencies=JSON.parse(JSON.stringify(this.efficiencies));\r\n\r\n            return_data.selected_damage=JSON.parse(JSON.stringify(this.selected_damage));\r\n            return_data.selected_burst_value=JSON.parse(JSON.stringify(this.selected_burst_value));\r\n            //return_data.selected_burst_value.burst_value=this.selected_burst_value.burst_value===Infinity?\"Infinity\":this.selected_burst_value.burst_value;\r\n            return_data.selected_range_mod=JSON.parse(JSON.stringify(this.selected_range_mod));\r\n            return_data.selected_accuracy=JSON.parse(JSON.stringify(this.selected_accuracy));\r\n            return_data.selected_shots=JSON.parse(JSON.stringify(this.selected_shots));\r\n            return_data.selected_warm_up_time=JSON.parse(JSON.stringify(this.selected_warm_up_time));\r\n            return_data.selected_wide_angle=JSON.parse(JSON.stringify(this.selected_wide_angle));\r\n            return_data.feature_array=JSON.parse(JSON.stringify(this.feature_array));\r\n\r\n            return_data.cost=this.total_cost;\r\n            return_data.cost_multiplier=this.cost_multiplier;\r\n            return_data.weight=this.weight;\r\n            return_data.final_damage=this.final_damage;\r\n            return_data.damage_capacity=this.damage_capacity;\r\n\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return return_data;\r\n        },\r\n        ingest_data(_data_object)\r\n        {\r\n            let alertMessage=\"Beam is not valid, resetting.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(this.component_name==this.beam_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n        },\r\n    },\r\n    computed:\r\n    {\r\n        raw_space()\r\n        {\r\n            //core cost prop\r\n            return this.selected_damage.cost * this.cost_multiplier;\r\n        },\r\n        cost:function()\r\n        {\r\n            let subtotal_cost=this.selected_damage.cost * this.cost_multiplier;\r\n            subtotal_cost += this.efficiencies.space.cost;\r\n            subtotal_cost += this.mag_fed?1:0;\r\n\r\n            return this.round(subtotal_cost,2);\r\n        },\r\n        beam_name()\r\n        {\r\n            let isInfiniteBurst=this.selected_burst_value.burst_value==\"__INFINITY__\";\r\n            let isBurst=this.selected_burst_value.burst_value!=1 && !isInfiniteBurst;\r\n            let beam_name=  isBurst?\"Burst-\"+this.selected_burst_value.burst_value+\" \":\r\n                            isInfiniteBurst?\"Infinite-Burst \":\r\n                            \"\";\r\n            beam_name+=this.selected_wide_angle.angle!=\"__NIL__\"?\"Wide-Angle \":\"\";\r\n\r\n            let isHydro=false;\r\n            let isMegaBeam=false;\r\n            beam_name=this.feature_array.reduce((_name,_val)=>\r\n            {\r\n                switch(_val.feature.toLowerCase())\r\n                {\r\n                    case \"hydro\":\r\n                        isHydro=true;\r\n                        return _name;\r\n                    case \"mega-beam\":\r\n                        isMegaBeam=true;\r\n                        return _name;\r\n                }\r\n                return _name+_val.feature+\" \";\r\n            },beam_name);\r\n\r\n            beam_name+= isHydro?\" Hydro\":\r\n                        isMegaBeam?\" Mega-Beam\":\r\n                        \" Beam\";\r\n            beam_name=beam_name.trim();\r\n            beam_name=beam_name.replace(/\\s+/g,\" \");\r\n\r\n            return beam_name; \r\n        },\r\n        mag_fed()\r\n        {\r\n            return this.feature_array.some(function(_val)\r\n            {\r\n                if(_val.feature.toLowerCase()==\"mag-fed\")\r\n                {\r\n                    return true;\r\n                }\r\n            });\r\n        },\r\n        show_warm_up_time()\r\n        {\r\n            return !this.mag_fed && this.selected_shots.shots==\"__INFINITY__\";\r\n        },\r\n        anti_missile()\r\n        {\r\n            return this.feature_array.some(function(_val)\r\n            {\r\n                if(_val.feature.toLowerCase()==\"anti-missile\")\r\n                {\r\n                    return true;\r\n                }\r\n            });\r\n        },\r\n        fragile()\r\n        {\r\n            return this.feature_array.some(function(_val)\r\n            {\r\n                if(_val.feature.toLowerCase()==\"fragile\")\r\n                {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    },\r\n    mounted()\r\n    {\r\n        this.mounted=true;\r\n    }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_beam-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_beam-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_beam-main.vue?vue&type=template&id=6e342f62&\"\nimport script from \"./mek_beam-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_beam-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return !_validation_keys.some((_keys)=>\r\n        {//returns true on invalid data, Not the return to return True if matching valid value is found\r\n            return _data[_keys]!=_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n"],"sourceRoot":""}
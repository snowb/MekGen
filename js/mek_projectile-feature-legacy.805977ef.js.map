{"version":3,"sources":["webpack:///./src/data_table_modules/mek_projectile/mek_projectile-feature-data-module.js","webpack:///./src/design_components/mek_projectile/subcomponents/mek_projectile-feature.vue?43f8","webpack:///src/design_components/mek_projectile/subcomponents/mek_projectile-feature.vue","webpack:///./src/design_components/mek_projectile/subcomponents/mek_projectile-feature.vue?cc01","webpack:///./src/design_components/mek_projectile/subcomponents/mek_projectile-feature.vue","webpack:///./src/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./src/mixins/alerts_mixin.js"],"names":["raw_feature_data_table","feature","cost","exclusive_phalanx","exclusive_personnel","filter","_el","undefined","exclusive_personnel_phalanx","data_table_keys","feature_data_table","data_cached","filter_data_table","_burst_value","_val","cached_validate","partial_validate","feature_validate","_data","has_feature","_pkey","partial_has_feature","get_feature","partial_get_feature","is_exclusive_feature","_exclusive_target","_pkey_value","exclusive_target_array","toLowerCase","JSON","parse","stringify","some","cleaned_feature","_feature_array","hasExclusivePhalanx","hasExclusivePersonnel","hasExclusivePersonnelPhalanx","update","key_list","alerts","length","cleaned_array","push","error","temp_selected_feature_array","reduceRight","_cleaned_array","clean_feature","isPhalanx","isPersonnel","isPersonnelPhalanx","includes","reverse","render","_vm","this","_h","$createElement","_c","_self","attrs","items","filteredFeatureTable","pkey","selected-keys","selected_keys","headers","show-headers","format","flow","name","on","update-selected-data","select_feature","staticRenderFns","mek_projectile_featurevue_type_script_lang_js_","props","mixins","alerts_mixin","components","mek-sub-component-table","__webpack_require__","e","then","bind","data","obj","suppressAlerts","selected_feature_array","methods","_selected_feature","_this","new_selected_feature_array","toggleFeature","cleaned_data","Object","mek_projectile_feature_data_module","forEach","_alert","addAlert","publishAlerts","$set","$emit","_feature","_this2","feature_array","remove_feature","computed","burstValue","_this3","featureArray","watch","_newval","_oldval","subcomponents_mek_projectile_featurevue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","_data_table","_validation_keys","Array","isArray","valid","every","_keys","_key","_has_feature","found_feature","_table_val","partial_cleaned_feature","_validator","_get_feature","_default_data","_name","json_data","_alert_string","$store","commit"],"mappings":"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","file":"js/mek_projectile-feature-legacy.805977ef.js","sourcesContent":["//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature} \r\n    from \"@/data_table_modules/universal/mek_partial-function-data-module\";\r\n\r\n//create new feature_data_table\r\nlet raw_feature_data_table=\r\n[\r\n    {feature:\"Long Range\",cost:1.33},\r\n    {feature:\"Hypervelocity\",cost:1.25},\r\n    {feature:\"Phalanx\",cost:0.5,exclusive_phalanx:true},\r\n    {feature:\"Variable Phalanx\",cost:1.4,exclusive_phalanx:true},\r\n    {feature:\"Anti-Personnel\",cost:1.0,exclusive_personnel:true},\r\n    {feature:\"Variable Anti-Personnel\",cost:1.8,exclusive_personnel:true},\r\n    {feature:\"Anti-Personnel Phalanx\",cost:1.6,exclusive_personnel:true,exclusive_phalanx:true},\r\n    {feature:\"All Purpose\",cost:2.6,exclusive_personnel:true,exclusive_phalanx:true}\r\n];\r\nlet exclusive_phalanx=raw_feature_data_table.filter((_el)=>{return _el.exclusive_phalanx!==undefined;});\r\nlet exclusive_personnel=raw_feature_data_table.filter((_el)=>{return _el.exclusive_personnel!==undefined;});\r\nlet exclusive_personnel_phalanx=raw_feature_data_table.filter((_el)=>{return _el.exclusive_personnel!==undefined && _el.exclusive_phalanx!==undefined;});\r\nlet data_table_keys=[\"feature\",\"cost\",\"exclusive_phalanx\",\"exclusive_personnel\"];\r\n\r\nlet feature_data_table=raw_feature_data_table;\r\nlet data_cached=false;\r\n\r\nlet filter_data_table=(_burst_value)=>\r\n{\r\n    data_cached=false;\r\n    if(_burst_value>1)\r\n    {\r\n        feature_data_table=raw_feature_data_table;\r\n        return;\r\n    }\r\n    feature_data_table=raw_feature_data_table.filter((_val)=>\r\n    {\r\n        return !_val.exclusive_phalanx\r\n    });\r\n};\r\n\r\nlet cached_validate=partial_validate(raw_feature_data_table, data_table_keys);\r\n//data validator for feature_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet feature_validate=(_data)=>\r\n{\r\n    if(data_cached)\r\n    {\r\n        return cached_validate(_data);\r\n    }\r\n    data_cached=true;\r\n    cached_validate=partial_validate(feature_data_table, data_table_keys);\r\n    return cached_validate(_data);\r\n}\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=(_pkey,_data)=>\r\n{\r\n    return partial_has_feature(feature_data_table)(_pkey,_data);\r\n}\r\n\r\n//completed function for returning matching data\r\nlet get_feature=(_pkey,_data)=>\r\n{\r\n    return partial_get_feature(feature_data_table, has_feature)(_pkey,_data);\r\n}\r\n\r\nlet is_exclusive_feature=function(_exclusive_target, _pkey, _pkey_value)\r\n{\r\n    let exclusive_target_array=null;\r\n    switch(_exclusive_target.toLowerCase())\r\n    {\r\n        case \"exclusive_phalanx\":\r\n            exclusive_target_array=JSON.parse(JSON.stringify(exclusive_phalanx));\r\n            break;\r\n        case \"exclusive_personnel\":\r\n            exclusive_target_array=JSON.parse(JSON.stringify(exclusive_personnel));\r\n            break;\r\n        case \"exclusive_personnel_phalanx\":\r\n            exclusive_target_array=JSON.parse(JSON.stringify(exclusive_personnel_phalanx));\r\n            break;\r\n    }\r\n    if(exclusive_target_array===null)\r\n    {\r\n        return false;\r\n    }\r\n    return exclusive_target_array.some((_val)=>\r\n    {\r\n        return _val[_pkey]==_pkey_value;\r\n    });\r\n};\r\n\r\n/*****\r\n * *\r\n * *    likely need to setup create_feature_data_table taking Blast_Radius and Smart as input\r\n * *    so claned_feature will remove invalid features\r\n * *\r\n *****/\r\n\r\n\r\n/*** \r\n * \r\n * find way to switch to partial function\r\n * \r\n * ***/\r\nlet cleaned_feature=function(_feature_array, _pkey)\r\n{//takes feature_array, returns cleaned array removing multiple exclusive values\r\n    let hasExclusivePhalanx=false;\r\n    let hasExclusivePersonnel=false;\r\n    let hasExclusivePersonnelPhalanx=false;\r\n    let update=false;\r\n    let key_list=[];\r\n    let alerts=[];\r\n    if(_feature_array.length===0)\r\n    {\r\n        return {cleaned_array:[],update:false,key_list:[],alerts:alerts};\r\n    }\r\n    if(_feature_array===undefined || _pkey===undefined)\r\n    {\r\n        alerts.push(\"Mek_Projectile-Feature: \");\r\n        let error=_feature_array===undefined\r\n            ? \"**** Missing feature array. Returning default. ****\"\r\n            : \"**** No primary key provided. Returning default. ****\";\r\n        alerts.push(error);\r\n        return {cleaned_array:[],update:true,key_list:[],alerts:alerts};\r\n    }\r\n    let temp_selected_feature_array=_feature_array.reduceRight((_cleaned_array, _val)=>\r\n    {\r\n        if(_val[_pkey]===undefined)\r\n        {//if feature with pkey doesn't exist in data table, ignore\r\n            alerts.push(\"Mek_Projectile-Feature: \"+JSON.stringify(_val));\r\n            alerts.push(\"**** Missing primary key. Ignoring. ****\");\r\n            return _cleaned_array;\r\n        }\r\n        let clean_feature=_val;\r\n        if(!feature_validate(_val))\r\n        {//invalid data\r\n            alerts.push(\"Mek_Projectile-Feature: \"+JSON.stringify(_val))\r\n            alerts.push(\"**** Invalid data, attempting to reset. ****\")\r\n            clean_feature=get_feature(_pkey,_val[_pkey]);\r\n            _val=clean_feature;//replace current value with correct value\r\n            update=true;\r\n            //attempt to set to corrected feature\r\n        }\r\n        if(clean_feature===null)\r\n        {//no matching feature\r\n            alerts.push(\"**** Unable to reset. No matching data. ****\")\r\n            update=true;\r\n            return _cleaned_array;\r\n            //ignore element\r\n        }\r\n        let isPhalanx=is_exclusive_feature(\"exclusive_phalanx\",_pkey,_val[_pkey]);\r\n        let isPersonnel=is_exclusive_feature(\"exclusive_personnel\",_pkey,_val[_pkey]);\r\n        let isPersonnelPhalanx=is_exclusive_feature(\"exclusive_personnel_phalanx\",_pkey,_val[_pkey]);\r\n\r\n        if(isPersonnelPhalanx && !hasExclusivePersonnelPhalanx)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusivePersonnelPhalanx=true;\r\n            hasExclusivePersonnel=true;\r\n            hasExclusivePhalanx=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isPersonnelPhalanx && hasExclusivePersonnelPhalanx)\r\n        {\r\n            alerts.push(\"Mek_Projectile-Feature: \"+_val);\r\n            alerts.push(\"**** Duplicate Exclusive Personnel-Phalanx data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n        if(isPhalanx && !hasExclusivePhalanx)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusivePhalanx=true;\r\n            hasExclusivePersonnelPhalanx=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isPhalanx && hasExclusivePhalanx)\r\n        {\r\n            alerts.push(\"Mek_Projectile-Feature: \"+_val);\r\n            alerts.push(\"**** Duplicate Exclusive Phalanx data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n        if(isPersonnel && !hasExclusivePersonnel)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusivePersonnel=true;\r\n            hasExclusivePersonnelPhalanx=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isPersonnel && hasExclusivePersonnel)\r\n        {\r\n            alerts.push(\"Mek_Projectile-Feature: \"+_val);\r\n            alerts.push(\"**** Duplicate Exclusive Anti-Personnel data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n        if(!key_list.includes(_val[_pkey]))\r\n        {\r\n            _cleaned_array.push(_val);\r\n            key_list.push(_val[_pkey]);\r\n        }\r\n        return _cleaned_array;\r\n    },[]);\r\n    temp_selected_feature_array=temp_selected_feature_array.reverse();\r\n    if(temp_selected_feature_array.length==0)\r\n    {//empty, reset to default\r\n        temp_selected_feature_array=[];\r\n        update=true;\r\n        key_list=[];\r\n        alerts.push(\"Mek_Projectile-Feature: \");\r\n        alerts.push(\"**** Reseting to default ****\");\r\n    }\r\n    return {cleaned_array:temp_selected_feature_array,update:update,key_list:key_list,alerts:alerts};\r\n    //returns an object with the pruned feature array, whether it was updated, and the key_list\r\n};\r\n\r\nexport {feature_data_table, feature_validate, has_feature, get_feature, cleaned_feature, filter_data_table};\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.filteredFeatureTable,\"pkey\":_vm.pkey,\"selected-keys\":_vm.selected_keys,\"headers\":{feature:'Feature',cost:'Cost'},\"show-headers\":true,\"format\":{cost:'multiplier'},\"flow\":\"pkey-col\",\"name\":\"Features\"},on:{\"update-selected-data\":_vm.select_feature}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <mek-sub-component-table\r\n        :items=\"filteredFeatureTable\" :pkey=\"pkey\" :selected-keys=\"selected_keys\"\r\n        :headers=\"{feature:'Feature',cost:'Cost'}\" :show-headers=\"true\" :format=\"{cost:'multiplier'}\"\r\n        flow=\"pkey-col\" name=\"Features\"\r\n        @update-selected-data=\"select_feature\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport alerts_mixin from \"@/mixins/alerts_mixin\";\r\n\r\nimport {feature_data_table, cleaned_feature, filter_data_table} \r\n    from \"@/data_table_modules/mek_projectile/mek_projectile-feature-data-module.js\";\r\n\r\nexport default \r\n{\r\n    name:\"mek_projectile_feature\",\r\n    props:[\"featureArray\",\"burstValue\"],\r\n    mixins:[alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"@/design_components/universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.pkey=\"feature\";\r\n        obj.alerts=[];\r\n        obj.suppressAlerts=false;\r\n        obj.selected_feature_array=[];\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_feature:function(_selected_feature)\r\n        {//refactor to external feature array cleaner\r\n            this.suppressAlerts=true;//suppress alerts, for exclusive switching\r\n            let new_selected_feature_array=this.toggleFeature(this.selected_feature_array,_selected_feature);\r\n            let cleaned_data=cleaned_feature(new_selected_feature_array, this.pkey);\r\n            new_selected_feature_array=cleaned_data.cleaned_array;\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            this.$set(this,\"selected_feature_array\",new_selected_feature_array);\r\n            this.$emit(\"update-feature\",new_selected_feature_array);\r\n            this.suppressAlerts=false;\r\n        },\r\n        toggleFeature(_feature_array,_feature)\r\n        {\r\n            let feature_array=JSON.parse(JSON.stringify(_feature_array));\r\n            \r\n            let remove_feature=feature_array.some((_val)=>\r\n            {//if _feature matches already existing feature, flag for deletion\r\n                return _val[this.pkey]==_feature[this.pkey];\r\n            },this);\r\n\r\n            if(remove_feature)\r\n            {//if flagged for removal, filter out\r\n                return feature_array.filter((_val)=>\r\n                {\r\n                    return _val[this.pkey]!=_feature[this.pkey];\r\n                },this);\r\n            }\r\n            feature_array.push(_feature);\r\n            //otherwise add feature and return\r\n            return feature_array;\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        filteredFeatureTable()\r\n        {\r\n            filter_data_table(this.burstValue);\r\n            return feature_data_table;\r\n        },\r\n        selected_keys()\r\n        {\r\n            this.burstValue;\r\n            let cleaned_data=cleaned_feature(this.featureArray,this.pkey);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.$emit(\"alert-generated\",true);\r\n                this.$emit(\"update-feature\",cleaned_data.cleaned_array);\r\n            }\r\n            this.$set(this,\"selected_feature_array\",cleaned_data.cleaned_array);\r\n            return cleaned_data.key_list;\r\n        }\r\n    },\r\n    watch:\r\n    {\r\n        \"burstValue\":function(_newval,_oldval)\r\n        {//must track changes in burstValue to disable alerts for removed features on cleaned_feat\r\n            if(_newval!=_oldval)\r\n            {\r\n                this.suppressAlerts=true;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_projectile-feature.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_projectile-feature.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_projectile-feature.vue?vue&type=template&id=412ef5a2&\"\nimport script from \"./mek_projectile-feature.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_projectile-feature.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return _validation_keys.every((_keys)=>\r\n        {//return true if all validation_keys in _data match an element in _data_table\r\n            return _data[_keys]==_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["mek_magazine-ammo-list"],{6724:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"47c91943-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/design_components/mek_magazine/subcomponents/mek_magazine-ammo-list.vue?vue&type=template&id=ba39dc8a&scoped=true&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'mek-sub-component-table\',{attrs:{"items":_vm.filteredAmmoArray,"selected-keys":_vm.selected_keys,"pkey":_vm.pkey,"headers":{type:\'Type\',cost:\'Cost\',effect:\'Effect\'},"show-headers":true,"format":{cost:\'multiplier\'},"name":"Ammo Table","flow":"pkey-col"},on:{"update-selected-data":_vm.select_ammo}})}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./src/design_components/mek_magazine/subcomponents/mek_magazine-ammo-list.vue?vue&type=template&id=ba39dc8a&scoped=true&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js\nvar web_dom_iterable = __webpack_require__("ac6a");\n\n// EXTERNAL MODULE: ./src/mixins/alerts_mixin.js\nvar alerts_mixin = __webpack_require__("d866");\n\n// EXTERNAL MODULE: ./src/data_table_modules/mek_magazine/mek_ammo-list-data-module.js\nvar mek_ammo_list_data_module = __webpack_require__("f155");\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/design_components/mek_magazine/subcomponents/mek_magazine-ammo-list.vue?vue&type=script&lang=js&\n\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ var mek_magazine_ammo_listvue_type_script_lang_js_ = ({\n  name: "mek_magazine_ammo_list",\n  props: ["ammoArray", "hasBlast"],\n  mixins: [alerts_mixin["a" /* default */]],\n  components: {\n    "mek-sub-component-table": function mekSubComponentTable() {\n      return __webpack_require__.e(/* import() | mek_sub-component-table */ "mek_sub-component-table").then(__webpack_require__.bind(null, "a949"));\n    }\n  },\n  data: function data() {\n    var obj = {};\n    obj.selected_ammo_array = [];\n    obj.pkey = "type";\n    obj.alerts = [];\n    obj.suppressAlerts = false;\n    return obj;\n  },\n  methods: {\n    select_ammo: function select_ammo(_selected_ammo) {\n      var _this = this;\n\n      //refactor to external ammo array cleaner\n      this.suppressAlerts = true; //suppress alerts, for exclusive switching\n\n      var new_selected_ammo_array = this.toggleFeature(this.selected_ammo_array, _selected_ammo);\n      var cleaned_data = Object(mek_ammo_list_data_module["cleaned_feature"])(new_selected_ammo_array, this.pkey);\n      new_selected_ammo_array = cleaned_data.cleaned_array;\n\n      if (cleaned_data.alerts.length > 0 && !this.suppressAlerts) {\n        cleaned_data.alerts.forEach(function (_alert) {\n          _this.addAlert(_alert);\n        });\n        this.publishAlerts();\n      }\n\n      this.$set(this, "selected_ammo_array", new_selected_ammo_array);\n      this.$emit("update-ammo", new_selected_ammo_array);\n      this.suppressAlerts = false;\n    },\n    toggleFeature: function toggleFeature(_feature_array, _feature) {\n      var _this2 = this;\n\n      var feature_array = JSON.parse(JSON.stringify(_feature_array));\n      var remove_feature = feature_array.some(function (_val) {\n        //if _feature matches already existing feature, flag for deletion\n        return _val[_this2.pkey] == _feature[_this2.pkey];\n      }, this);\n\n      if (remove_feature) {\n        //if flagged for removal, filter out\n        return feature_array.filter(function (_val) {\n          return _val[_this2.pkey] != _feature[_this2.pkey];\n        }, this);\n      }\n\n      feature_array.push(_feature); //otherwise add feature and return\n\n      return feature_array;\n    }\n  },\n  computed: {\n    filteredAmmoArray: function filteredAmmoArray() {\n      Object(mek_ammo_list_data_module["filter_data_table"])(this.hasBlast);\n      return mek_ammo_list_data_module["feature_data_table"];\n    },\n    selected_keys: function selected_keys() {\n      var _this3 = this;\n\n      var cleaned_data = Object(mek_ammo_list_data_module["cleaned_feature"])(this.ammoArray, this.pkey);\n\n      if (cleaned_data.alerts.length > 0 && !this.suppressAlerts) {\n        cleaned_data.alerts.forEach(function (_alert) {\n          _this3.addAlert(_alert);\n        });\n        this.publishAlerts();\n      }\n\n      if (cleaned_data.update) {\n        this.$emit("alert-generated", true);\n        this.$emit("update-ammo", cleaned_data.cleaned_array);\n      }\n\n      this.$set(this, "selected_ammo_array", cleaned_data.cleaned_array);\n      return cleaned_data.key_list;\n    }\n  },\n  watch: {\n    "hasBlast": function hasBlast(_newval, _oldval) {\n      //must track changes in hasBlast to disable alerts for removed features on cleaned_feat\n      if (_newval != _oldval) {\n        this.suppressAlerts = true;\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/design_components/mek_magazine/subcomponents/mek_magazine-ammo-list.vue?vue&type=script&lang=js&\n /* harmony default export */ var subcomponents_mek_magazine_ammo_listvue_type_script_lang_js_ = (mek_magazine_ammo_listvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__("2877");\n\n// CONCATENATED MODULE: ./src/design_components/mek_magazine/subcomponents/mek_magazine-ammo-list.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  subcomponents_mek_magazine_ammo_listvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "ba39dc8a",\n  null\n  \n)\n\n/* harmony default export */ var mek_magazine_ammo_list = __webpack_exports__["default"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6724\n')},"706d":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return partial_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return partial_has_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return partial_get_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return partial_cleaned_feature; });\nvar _this = undefined;\n\n//data table module, raw data output for re-use in non-vue-component formats\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \n//          neutral and reusable across all data modules\n//partial data validator\n//called with data_table and validation_keys in data-module\nvar partial_validate = function partial_validate(_data_table, _validation_keys) {\n  return function (_data) {\n    //_data_table: Array, array of data to validate against\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\n    //_data: Object, data to be compared to data table \n    if (typeof _data === "undefined" || !Array.isArray(_validation_keys) || _validation_keys.length == 0) {\n      return false;\n    }\n\n    var valid = _data_table.some(function (_val) {\n      return _validation_keys.every(function (_keys) {\n        //return true if all validation_keys in _data match an element in _data_table\n        return _data[_keys] == _val[_keys];\n      });\n    });\n\n    return valid;\n  };\n}; //partial_has_feature, determine if provided data table has matching element with provided key and val\n//called in data module to generate full function with local data\n\n\nvar partial_has_feature = function partial_has_feature(_data_table) {\n  return function (_key, _val) {\n    return _data_table.some(function (_data) {\n      return _data[_key] !== undefined && _data[_key] == _val;\n    });\n  };\n}; //partial get_feature, returns full function for data module\n//requires data_table (array) and module\'s has_feature function\n//returns full matching element in provided data table\n//has_feature must exist in data table module\n\n\nvar partial_get_feature = function partial_get_feature(_data_table, _has_feature) {\n  return function (_key, _val) {\n    var found_feature = null;\n\n    if (_has_feature(_key, _val)) {\n      _data_table.some(function (_table_val) {\n        if (_table_val[_key] == _val) {\n          found_feature = _table_val;\n          return true;\n        }\n      }, _this);\n    }\n\n    return found_feature;\n  };\n};\n\nvar partial_cleaned_feature = function partial_cleaned_feature(_validator, _has_feature, _get_feature, _default_data, _name) {\n  return function (_pkey, _feature) {\n    //input: primary key, selected feature, filtered data table\n    var data = undefined;\n    var key_list = [];\n    var update = false;\n    var alerts = [];\n    var json_data = JSON.stringify(_feature);\n\n    if (_feature === undefined || !_has_feature(_pkey, _feature[_pkey])) {\n      data = _default_data;\n      key_list = [data[_pkey]];\n      update = true;\n      alerts.push(_name + ": " + json_data);\n      alerts.push("**** Invalid data. Reseting to default. ****");\n    } else if (!_validator(_feature)) {\n      data = JSON.parse(JSON.stringify(_get_feature(_pkey, _feature[_pkey])));\n      key_list = [data[_pkey]];\n      update = true;\n      alerts.push(_name + ": " + json_data);\n      alerts.push("**** Invalid data. Reseting. ****");\n    } else {\n      data = JSON.parse(JSON.stringify(_feature));\n      key_list = [data[_pkey]];\n      update = false;\n    }\n\n    return {\n      data: data,\n      key_list: key_list,\n      update: update,\n      alerts: alerts\n    };\n  };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///706d\n')},d866:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony default export */ __webpack_exports__["a"] = ({\n  methods: {\n    addAlert: function addAlert(_alert_string) {\n      this.alerts.push(_alert_string);\n    },\n    publishAlerts: function publishAlerts() {\n      if (this.alerts.length > 0) {\n        this.$store.commit("alertMessage", this.alerts);\n      }\n\n      this.$set(this, "alerts", []);\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWl4aW5zL2FsZXJ0c19taXhpbi5qcz9kODY2Il0sIm5hbWVzIjpbIm1ldGhvZHMiLCJhZGRBbGVydCIsIl9hbGVydF9zdHJpbmciLCJhbGVydHMiLCJwdXNoIiwicHVibGlzaEFsZXJ0cyIsImxlbmd0aCIsIiRzdG9yZSIsImNvbW1pdCIsIiRzZXQiXSwibWFwcGluZ3MiOiJBQUNBO0FBQ0lBLFNBQU8sRUFDUDtBQUNJQyxZQURKLG9CQUNhQyxhQURiLEVBRUk7QUFDSSxXQUFLQyxNQUFMLENBQVlDLElBQVosQ0FBaUJGLGFBQWpCO0FBQ0gsS0FKTDtBQUtJRyxpQkFMSiwyQkFNSTtBQUNJLFVBQUcsS0FBS0YsTUFBTCxDQUFZRyxNQUFaLEdBQW1CLENBQXRCLEVBQ0E7QUFDSSxhQUFLQyxNQUFMLENBQVlDLE1BQVosQ0FBbUIsY0FBbkIsRUFBa0MsS0FBS0wsTUFBdkM7QUFDSDs7QUFDRCxXQUFLTSxJQUFMLENBQVUsSUFBVixFQUFlLFFBQWYsRUFBd0IsRUFBeEI7QUFDSDtBQVpMO0FBRkosQ0FEQSIsImZpbGUiOiJkODY2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHRcclxue1xyXG4gICAgbWV0aG9kczpcclxuICAgIHtcclxuICAgICAgICBhZGRBbGVydChfYWxlcnRfc3RyaW5nKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5hbGVydHMucHVzaChfYWxlcnRfc3RyaW5nKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHB1Ymxpc2hBbGVydHMoKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWYodGhpcy5hbGVydHMubGVuZ3RoPjApXHJcbiAgICAgICAgICAgIHsgICBcclxuICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdChcImFsZXJ0TWVzc2FnZVwiLHRoaXMuYWxlcnRzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLiRzZXQodGhpcyxcImFsZXJ0c1wiLFtdKTtcclxuICAgICAgICB9LFxyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///d866\n')},f155:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "feature_data_table", function() { return feature_data_table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "feature_validate", function() { return feature_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has_feature", function() { return has_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_feature", function() { return get_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shock_exclusive", function() { return shock_exclusive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blast_exclusive", function() { return blast_exclusive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cleaned_feature", function() { return cleaned_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filter_data_table", function() { return filter_data_table; });\n/* harmony import */ var core_js_modules_es7_array_includes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("6762");\n/* harmony import */ var core_js_modules_es7_array_includes__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_array_includes__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es6_string_includes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("2fdb");\n/* harmony import */ var core_js_modules_es6_string_includes__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_string_includes__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("706d");\n\n\n//data table module, raw data output for re-use in non-vue-component formats\n //create new ammo_data_table\n\nvar raw_feature_data_table = [{\n  type: "Paintball",\n  cost: 0.5,\n  effect: "Practice Rounds"\n}, {\n  type: "Foam",\n  cost: 0.5,\n  effect: "Firefighting"\n}, {\n  type: "High-Ex",\n  cost: 1,\n  effect: "Standard"\n}, {\n  type: "Tracer",\n  cost: 3,\n  effect: "+1 to WA"\n}, {\n  type: "Kinetic",\n  cost: 3,\n  effect: "More Knockback"\n}, {\n  type: "Tangler",\n  cost: 3,\n  effect: "Grappling Attack"\n}, {\n  type: "Armor Piercing",\n  cost: 4,\n  effect: "1/2 SP vs Armor"\n}, {\n  type: "Disruptor",\n  cost: 4,\n  effect: "1/2 SP vs Energy"\n}, {\n  type: "Incendiary",\n  cost: 4,\n  effect: "Flamethrower"\n}, {\n  type: "Shock (only)",\n  cost: 4,\n  effect: "Stun Effect",\n  shock_exclusive: true\n}, {\n  type: "Shock (add)",\n  cost: 6,\n  effect: "Stun & Damage",\n  shock_exclusive: true\n}, {\n  type: "Scattershot",\n  cost: 5,\n  effect: "Shotgun Effect"\n}, {\n  type: "Blast I",\n  cost: 6,\n  effect: "1-Hex Radius",\n  blast_exclusive: true\n}, {\n  type: "Blast II",\n  cost: 8,\n  effect: "2-Hex Radius",\n  blast_exclusive: true\n}, {\n  type: "Blast III",\n  cost: 10,\n  effect: "3-Hex Radius",\n  blast_exclusive: true\n}, {\n  type: "Blast IV",\n  cost: 12,\n  effect: "4-Hex Radius",\n  blast_exclusive: true\n}, {\n  type: "Blast V",\n  cost: 14,\n  effect: "5-Hex Radius",\n  blast_exclusive: true\n}, {\n  type: "Nuclear",\n  cost: 1000,\n  effect: "Atomic Ammo"\n}];\nvar shock_exclusive = raw_feature_data_table.filter(function (_el) {\n  return typeof _el.shock_exclusive !== "undefined";\n});\nvar blast_exclusive = raw_feature_data_table.filter(function (_el) {\n  return typeof _el.blast_exclusive !== "undefined";\n});\nvar data_table_keys = ["type", "cost", "effect", "shock_exclusive", "blast_exclusive"];\nvar default_data = {\n  type: "High-Ex",\n  cost: 1,\n  effect: "Standard"\n};\nvar feature_data_table = raw_feature_data_table;\nvar data_cached = false;\n\nvar filter_data_table = function filter_data_table(_has_blast_radius) {\n  data_cached = false;\n\n  if (!_has_blast_radius) {\n    feature_data_table = raw_feature_data_table.filter(function (_val) {\n      return _val.type != "Nuclear";\n    });\n  } else {\n    feature_data_table = raw_feature_data_table;\n  }\n};\n\nvar cached_validate = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_2__[/* partial_validate */ "d"])(raw_feature_data_table, data_table_keys); //data validator for feature_data_table\n//call partial_validate with appropriate data for full validate\n\nvar feature_validate = function feature_validate(_data) {\n  if (data_cached) {\n    return cached_validate(_data);\n  }\n\n  data_cached = true;\n  cached_validate = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_2__[/* partial_validate */ "d"])(feature_data_table, data_table_keys);\n  return cached_validate(_data);\n}; //completed function for checking if data has data\n\n\nvar has_feature = function has_feature(_pkey, _data) {\n  return Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_2__[/* partial_has_feature */ "c"])(feature_data_table)(_pkey, _data);\n}; //completed function for returning matching data\n\n\nvar get_feature = function get_feature(_pkey, _data) {\n  return Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_2__[/* partial_get_feature */ "b"])(feature_data_table, has_feature)(_pkey, _data);\n};\n\nvar is_exclusive_feature = function is_exclusive_feature(_exclusive_target, _pkey, _pkey_value) {\n  var exclusive_target_array = null;\n\n  switch (_exclusive_target.toLowerCase()) {\n    case "shock_exclusive":\n      exclusive_target_array = shock_exclusive;\n      break;\n\n    case "blast_exclusive":\n      exclusive_target_array = blast_exclusive;\n      break;\n  }\n\n  if (exclusive_target_array === null) {\n    return false;\n  }\n\n  return exclusive_target_array.some(function (_val) {\n    return _val[_pkey] == _pkey_value;\n  });\n};\n/*** \r\n * \r\n * create cleaned_feat function for features\r\n * \r\n *  ***/\n\n\nvar cleaned_feature = function cleaned_feature(_feature_array, _pkey) {\n  //takes feature_array, returns cleaned array removing multiple exclusive values\n  var hasExclusiveShock = false;\n  var hasExclusiveBlast = false;\n  var update = false;\n  var key_list = [];\n  var alerts = [];\n\n  if (_feature_array === undefined || _pkey === undefined) {\n    alerts.push("Mek_Magazine-Ammo-List: ");\n    var error = _feature_array === undefined ? "**** Missing feature array. Returning default. ****" : "**** No primary key provided. Returning default. ****";\n    alerts.push(error);\n    return {\n      cleaned_array: [default_data],\n      update: true,\n      key_list: ["High-Ex"],\n      alerts: alerts\n    };\n  }\n\n  var temp_selected_feature_array = _feature_array.reduceRight(function (_cleaned_array, _val) {\n    if (_val[_pkey] === undefined) {\n      //if feature with pkey doesn\'t exist in data table, ignore\n      alerts.push("Mek_Magazine-Ammo-List: " + JSON.stringify(_val));\n      alerts.push("**** Missing primary key. Ignoring. ****");\n      return _cleaned_array;\n    }\n\n    var clean_feature = _val;\n\n    if (!feature_validate(_val)) {\n      //invalid data\n      alerts.push("Mek_Magazine-Ammo-List: " + JSON.stringify(_val));\n      alerts.push("**** Invalid data, attempting to reset. ****");\n      clean_feature = get_feature(_pkey, _val[_pkey]);\n      _val = clean_feature; //replace current value with correct value\n\n      update = true; //attempt to set to corrected feature\n    }\n\n    if (clean_feature === null) {\n      //no matching feature\n      alerts.push("**** Unable to reset. No matching data. ****");\n      update = true;\n      return _cleaned_array; //ignore element\n    }\n\n    var isShock = is_exclusive_feature("shock_exclusive", _pkey, _val[_pkey]);\n    var isBlast = is_exclusive_feature("blast_exclusive", _pkey, _val[_pkey]);\n\n    if (isShock && !hasExclusiveShock) {\n      _cleaned_array.push(_val);\n\n      hasExclusiveShock = true;\n      key_list.push(_val[_pkey]);\n      return _cleaned_array;\n    } else if (isShock && hasExclusiveShock) {\n      alerts.push("Mek_Magazine-Ammo-List: " + _val);\n      alerts.push("**** Duplicate exclusive shock data. Ignoring. ****");\n      update = true;\n      return _cleaned_array;\n    }\n\n    if (isBlast && !hasExclusiveBlast) {\n      _cleaned_array.push(_val);\n\n      hasExclusiveBlast = true;\n      key_list.push(_val[_pkey]);\n      return _cleaned_array;\n    } else if (isBlast && hasExclusiveBlast) {\n      alerts.push("Mek_Magazine-Ammo-List: " + _val);\n      alerts.push("**** Duplicate exclusive blast radius data. Ignoring. ****");\n      update = true;\n      return _cleaned_array;\n    }\n\n    if (!key_list.includes(_val[_pkey])) {\n      _cleaned_array.push(_val);\n\n      key_list.push(_val[_pkey]);\n    }\n\n    return _cleaned_array;\n  }, []);\n\n  temp_selected_feature_array = temp_selected_feature_array.filter(function (_val) {\n    return _val[_pkey].toLowerCase() != "nuclear" || hasExclusiveBlast && _val[_pkey].toLowerCase() == "nuclear"; //filter out nuclear if blast-radius isn\'t a feature\n  }).reverse();\n\n  if (temp_selected_feature_array.length == 0) {\n    //empty, reset to default\n    temp_selected_feature_array = [JSON.parse(JSON.stringify(default_data))];\n    update = true;\n    key_list = ["High-Ex"];\n    alerts.push("Mek_Magazine-Ammo-List: ");\n    alerts.push("**** Reseting to default ****");\n  }\n\n  return {\n    cleaned_array: temp_selected_feature_array,\n    update: update,\n    key_list: key_list,\n    alerts: alerts\n  }; //returns an object with the pruned feature array, whether it was updated, and the key_list\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///f155\n')}}]);
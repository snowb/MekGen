{"version":3,"sources":["webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/core-js/library/fn/object/assign.js","webpack:///./node_modules/core-js/library/modules/_object-assign.js","webpack:///./node_modules/core-js/library/modules/es6.object.assign.js","webpack:///./src/components/mek_shield/subcomponents/mek_shield-weakness.vue?d83b","webpack:///src/components/mek_shield/subcomponents/mek_shield-weakness.vue","webpack:///./src/components/mek_shield/subcomponents/mek_shield-weakness.vue?8a6f","webpack:///./src/components/mek_shield/subcomponents/mek_shield-weakness.vue"],"names":["module","exports","__webpack_require__","Object","assign","getKeys","gOPS","pIE","toObject","IObject","$assign","A","B","S","Symbol","K","split","forEach","k","keys","join","target","source","T","aLen","arguments","length","index","getSymbols","f","isEnum","key","concat","j","call","$export","F","render","_vm","this","_h","$createElement","_c","_self","attrs","items","weakness_table","headers","weakness","monicker","cost","name","flow","show-headers","format","selected-indices","selected_weakness_index_array","on","update-selected-indices","select_weakness","staticRenderFns","mek_shield_weaknessvue_type_script_lang_js_","props","mixins","selected_item_mixin","utility_mixin","components","mek-sub-component-table","e","then","bind","data","obj","exclusive","exclusive_weaknesses","filter","_el","selected_weakness_array","methods","_selected_weakness","select_weakness_name","isAllWeakness","toLowerCase","currentIsAll","weakness_index","find_weakness_index","weaknessClone","assign_default","$set","isExclusive","is_exclusive_weakness","temp_selected_weakness_array","_val","togglefeature","some","_elem","push","allIndex","$emit","_weakness","found_index","_index","exclusive_indices","foundIndices","reduce","_indices","is_all_weakness_index","computed","indices","weaknessArray","hasExclusive","self","weakness_list","reduceRight","_prev","includes","flat_weakness_array","_array","flat_monicker_array","subcomponents_mek_shield_weaknessvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/mek-shield-weakness-legacy.ca7f07d0.js","sourcesContent":["module.exports = require(\"core-js/library/fn/object/assign\");","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.weakness_table,\"headers\":{weakness:'Weakness',monicker:'Monicker',cost:'Cost'},\"name\":\"Weakness\",\"flow\":\"col\",\"show-headers\":true,\"format\":{cost:'multiplier'},\"selected-indices\":_vm.selected_weakness_index_array},on:{\"update-selected-indices\":_vm.select_weakness}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <mek-sub-component-table\r\n        :items=\"weakness_table\"\r\n        :headers=\"{weakness:'Weakness',monicker:'Monicker',cost:'Cost'}\"\r\n        name=\"Weakness\" flow=\"col\" :show-headers=\"true\"\r\n        :format=\"{cost:'multiplier'}\"\r\n        :selected-indices=\"selected_weakness_index_array\"\r\n        @update-selected-indices=\"select_weakness\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport selected_item_mixin from \"../../../mixins/selected_item_mixin\";\r\nimport utility_mixin from \"../../../mixins/utility_mixin\";\r\n\r\nexport default \r\n{\r\n    name:\"mek_shield_weakness\",\r\n    props:[\"weaknessArray\"],\r\n    mixins:[selected_item_mixin, utility_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"../../universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.weakness_table=\r\n            [\r\n                {weakness:\"All\",monicker:\"Shield\",cost:1.0},\r\n                {weakness:\"Ablative\",monicker:\"Screen\",cost:1.0},\r\n                {weakness:\"Energy Only\",monicker:\"Interference\",cost:0.75,exclusive:true},\r\n                {weakness:\"Matter Only\",monicker:\"Kinetic\",cost:0.75,exclusive:true},\r\n                {weakness:\"Ranged Only\",monicker:\"Swashbuckling\",cost:0.75,exclusive:true},\r\n                {weakness:\"Enclosing\",monicker:\"Mirror\",cost:0.5},\r\n                {weakness:\"Surge\",monicker:\"Surge\",cost:2.5}\r\n            ];\r\n \r\n        obj.exclusive_weaknesses=obj.weakness_table.filter((_el)=>{return typeof _el.exclusive!==\"undefined\"});\r\n\r\n        obj.selected_weakness_array=[{weakness:\"All\",monicker:\"Shield\",cost:1.0}];\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_weakness:function(_selected_weakness)\r\n        {\r\n            let select_weakness_name=this.weakness_table[_selected_weakness].weakness;\r\n            let isAllWeakness=select_weakness_name.toLowerCase()==\"all\";\r\n            let currentIsAll=this.selected_weakness_array[0].weakness.toLowerCase()==\"all\";\r\n            let weakness_index=this.find_weakness_index(select_weakness_name);\r\n            let weaknessClone=Object.assign({},this.weakness_table[weakness_index]);\r\n            if(isAllWeakness || currentIsAll)\r\n            {\r\n                this.$set(this,\"selected_weakness_array\",[weaknessClone]);\r\n            }\r\n            else\r\n            {\r\n                let isExclusive=this.is_exclusive_weakness(select_weakness_name);\r\n\r\n                let temp_selected_weakness_array=this.selected_weakness_array.filter((_val)=>\r\n                {//filter out matching weaknesses (toggle)\r\n                    return _val.weakness.toLowerCase()!=select_weakness_name.toLowerCase();\r\n                });\r\n\r\n                let togglefeature=this.selected_weakness_array.some((_elem)=>\r\n                {\r\n                    return _elem.weakness.toLowerCase()==select_weakness_name.toLowerCase();\r\n                },this);\r\n\r\n                temp_selected_weakness_array=isExclusive ? temp_selected_weakness_array.filter((_val)=>{return typeof _val.exclusive===\"undefined\"}) : temp_selected_weakness_array;\r\n                //if selected weakness is exclusive, filter out other exclusives\r\n\r\n                this.$set(this,\"selected_weakness_array\",temp_selected_weakness_array);\r\n\r\n                if(!togglefeature)\r\n                {\r\n                    this.selected_weakness_array.push(weaknessClone);\r\n                }\r\n                if(temp_selected_weakness_array.length==0)\r\n                {\r\n                    let allIndex=this.find_weakness_index(\"All\");\r\n                    weaknessClone=Object.assign({},this.weakness_table[allIndex]);\r\n                    this.$set(this,\"selected_weakness_array\",[weaknessClone]);\r\n                }\r\n            }\r\n            this.$emit(\"update-weakness\",this.selected_weakness_array);\r\n        },\r\n        find_weakness_index:function(_weakness)\r\n        {\r\n            let found_index;\r\n            this.weakness_table.some(function(_val, _index)\r\n            {\r\n                if(_val.weakness.toLowerCase() == _weakness.toLowerCase())\r\n                {\r\n                    found_index=_index;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n\r\n            return found_index;\r\n        },\r\n        is_exclusive_weakness:function(_weakness)\r\n        {\r\n            return this.exclusive_weaknesses.some(function(_val)\r\n            {\r\n                if(_val.weakness.toLowerCase() == _weakness.toLowerCase())\r\n                {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n        },\r\n        exclusive_indices:function()\r\n        {\r\n            let foundIndices=this.selected_weakness_array.reduce(function(_indices,_val,_index)\r\n            {\r\n                if(_val.exclusive)\r\n                {\r\n                    _indices.push(_index);\r\n                }\r\n                return _indices;\r\n            },[]);\r\n            return foundIndices;\r\n        },\r\n        is_all_weakness_index:function(_index)\r\n        {\r\n            return this.weakness_table[_index].weakness.toLowerCase()==\"all\";\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        selected_weakness_index_array:function()\r\n        {\r\n            let indices=[];\r\n\r\n            if(this.weaknessArray.length==1)\r\n            {\r\n                this.selected_weakness_array=[this.weakness_table[this.find_weakness_index(this.weaknessArray[0].weakness)]];\r\n                return [this.find_weakness_index(this.weaknessArray[0].weakness)];\r\n            }\r\n            \r\n            let hasExclusive=false;\r\n            let self=this;\r\n            let weakness_list=[];\r\n            this.selected_weakness_array=this.weaknessArray.reduceRight(function(_prev, _val)\r\n            {\r\n                if(_val.weakness.toLowerCase()==\"all\")\r\n                {\r\n                    return [_val];\r\n                }\r\n                if(self.is_exclusive_weakness(_val.weakness))\r\n                {\r\n                    if(!hasExclusive)\r\n                    {\r\n                        _prev.push(_val);\r\n                        hasExclusive=true;\r\n                        weakness_list.push(_val.weakness.toLowerCase());\r\n                    }\r\n                }\r\n                else if(!weakness_list.includes(_val.weakness.toLowerCase()))\r\n                {\r\n                    _prev.push(_val);\r\n                    weakness_list.push(_val.weakness.toLowerCase());\r\n                }\r\n                return _prev;\r\n            },[]);\r\n\r\n            indices=this.selected_weakness_array.reduce(function(_indices,_val)\r\n            {\r\n                _indices.push(self.find_weakness_index(_val.weakness));\r\n                return _indices;\r\n            },[]);\r\n            if(this.weaknessArray.length!=this.selected_weakness_array.length)\r\n            {\r\n                this.$emit(\"update-weakness\",this.selected_weakness_array);\r\n            }\r\n\r\n            return indices;\r\n        },\r\n        flat_weakness_array:function()\r\n        {\r\n            return this.weakness_table.reduce(function(_array, _el)\r\n            {\r\n                _array.push(_el.weakness);\r\n                return _array;\r\n            },[]);\r\n        },\r\n        flat_monicker_array:function()\r\n        {\r\n            return this.weakness_table.reduce(function(_array, _el)\r\n            {\r\n                _array.push(_el.monicker);\r\n                return _array;\r\n            },[]);\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_shield-weakness.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_shield-weakness.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_shield-weakness.vue?vue&type=template&id=54fa0a69&\"\nimport script from \"./mek_shield-weakness.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_shield-weakness.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.array.includes.js","webpack:///./src/data_table_modules/mek_melee/mek_melee-feature-data-module.js","webpack:///./src/data_table_modules/universal/mek_partial-function-data-module.js"],"names":["$export","__webpack_require__","$includes","P","includes","el","this","arguments","length","undefined","feature_data_table","feature","cost","name","throw_exclusive","shock_exclusive","filter","_el","data_table_keys","feature_validate","partial_validate","has_feature","partial_has_feature","get_feature","partial_get_feature","is_exclusive_feature","_exclusive_target","_pkey","_pkey_value","exclusive_target_array","toLowerCase","some","_val","cleaned_feature","_feature_array","hasExclusiveShock","hasExclusiveThrow","update","key_list","alerts","push","error","cleaned_array","temp_selected_feature_array","reduceRight","_cleaned_array","JSON","stringify","clean_feature","isShock","isThrow","reverse","_data_table","_validation_keys","_data","Array","isArray","valid","every","_keys","_key","_has_feature","found_feature","_table_val","_this","partial_cleaned_feature","_validator","_get_feature","_default_data","_name","_feature","data","json_data","parse"],"mappings":"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","file":"js/mek_melee-feature-data-module-legacy.2bf9451e.js","sourcesContent":["'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature} \r\n    from \"@/data_table_modules/universal/mek_partial-function-data-module\";\r\n\r\n//create new feature_data_table\r\nlet feature_data_table=\r\n[\r\n    {feature:\"Handy\",cost:1.5,name:\"Handy\"},\r\n    {feature:\"Quick\",cost:2,name:\"Quick\"},\r\n    {feature:\"Clumsy\",cost:0.5,name:\"Clumsy\"},\r\n    {feature:\"Armor Piercing\",cost:2,name:\"AP\"},\r\n    {feature:\"Entangle\",cost:1.25,name:\"Entangling\"},\r\n    {feature:\"Thrown\",cost:1.2,throw_exclusive:true,name:\"Thrown\"},\r\n    {feature:\"Returning\",cost:1.5,throw_exclusive:true,name:\"Returning\"},\r\n    {feature:\"Disruptor\",cost:2,name:\"Disrupting\"},\r\n    {feature:\"Shock (only)\",cost:2,shock_exclusive:true,name:\"Shock\"},\r\n    {feature:\"Shock (added)\",cost:3,shock_exclusive:true,name:\"Shocking\"},\r\n];\r\nlet shock_exclusive=feature_data_table.filter((_el)=>{return typeof _el.shock_exclusive!==\"undefined\";});\r\nlet throw_exclusive=feature_data_table.filter((_el)=>{return typeof _el.throw_exclusive!==\"undefined\";});\r\nlet data_table_keys=[\"feature\",\"cost\",\"name\",\"throw_exclusive\",\"shock_exclusive\"];\r\n\r\n//data validator for feature_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet feature_validate=partial_validate(feature_data_table, data_table_keys);\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=partial_has_feature(feature_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_feature=partial_get_feature(feature_data_table, has_feature);\r\n\r\nlet is_exclusive_feature=function(_exclusive_target, _pkey, _pkey_value)\r\n{\r\n    let exclusive_target_array=null;\r\n    switch(_exclusive_target.toLowerCase())\r\n    {\r\n        case \"shock_exclusive\":\r\n            exclusive_target_array=shock_exclusive;\r\n            break;\r\n        case \"throw_exclusive\":\r\n            exclusive_target_array=throw_exclusive;\r\n            break;\r\n    }\r\n    if(exclusive_target_array===null)\r\n    {\r\n        return false;\r\n    }\r\n    return exclusive_target_array.some((_val)=>\r\n    {\r\n        return _val[_pkey]==_pkey_value;\r\n    });\r\n};\r\n\r\n/***  \r\n * \r\n * need feature partial function\r\n * \r\n * ***/\r\nlet cleaned_feature=function(_feature_array, _pkey)\r\n{//takes feature_array, returns cleaned array removing multiple exclusive values\r\n    let hasExclusiveShock=false;\r\n    let hasExclusiveThrow=false;\r\n    let update=false;\r\n    let key_list=[];\r\n    let alerts=[];\r\n\r\n    if(_feature_array===undefined || _pkey===undefined)\r\n    {\r\n        alerts.push(\"Mek_Melee-Feature: \");\r\n        let error=_feature_array===undefined\r\n            ? \"**** Missing feature array. Returning blank. ****\"\r\n            : \"**** No primary key provided. Returning blank. ****\";\r\n        alerts.push(error);\r\n        return {cleaned_array:[],update:true,key_list:[],alerts:alerts};\r\n    }\r\n\r\n    let temp_selected_feature_array=_feature_array.reduceRight((_cleaned_array, _val)=>\r\n    {\r\n        if(_val[_pkey]===undefined)\r\n        {//if feature with pkey doesn't exist in data table, ignore\r\n            alerts.push(\"Mek_Melee-Feature: \"+JSON.stringify(_val));\r\n            alerts.push(\"**** Missing primary key. Ignoring. ****\");\r\n            return _cleaned_array;\r\n        }\r\n        let clean_feature=_val;\r\n        if(!feature_validate(_val))\r\n        {//invalid data\r\n            alerts.push(\"Mek_Melee-Feature: \"+JSON.stringify(_val))\r\n            alerts.push(\"**** Invalid data, attempting to reset. ****\")\r\n            clean_feature=get_feature(_pkey,_val[_pkey]);\r\n            update=true;\r\n            //attempt to set to corrected feature\r\n        }\r\n        if(clean_feature===null)\r\n        {//no matching feature\r\n            alerts.push(\"**** Unable to reset. No matching data. ****\")\r\n            update=true;\r\n            return _cleaned_array;\r\n            //ignore element\r\n        }\r\n        let isShock=is_exclusive_feature(\"shock_exclusive\",_pkey,_val[_pkey]);\r\n        let isThrow=is_exclusive_feature(\"throw_exclusive\",_pkey,_val[_pkey]);\r\n\r\n        if(isShock && !hasExclusiveShock)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusiveShock=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isShock && hasExclusiveShock)\r\n        {\r\n            alerts.push(\"Mek_Melee-Feature: \"+_val);\r\n            alerts.push(\"**** Duplicate exclusive Shock data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n\r\n        if(isThrow && !hasExclusiveThrow)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusiveThrow=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isThrow && hasExclusiveThrow)\r\n        {\r\n            alerts.push(\"Mek_Melee-Feature: \"+_val);\r\n            alerts.push(\"**** Duplicate exclusive Throw data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n\r\n        if(!key_list.includes(_val[_pkey]))\r\n        {\r\n            _cleaned_array.push(_val);\r\n            key_list.push(_val[_pkey]);\r\n        }\r\n        return _cleaned_array;\r\n    },[]);\r\n    temp_selected_feature_array.reverse();\r\n\r\n    return {cleaned_array:temp_selected_feature_array,update:update,key_list:key_list,alerts:alerts};\r\n    //returns an object with the pruned feature array, whether it was updated, and the key_list\r\n}\r\n\r\nexport {feature_data_table, feature_validate, has_feature, get_feature, shock_exclusive, throw_exclusive, cleaned_feature};\r\n","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return _validation_keys.every((_keys)=>\r\n        {//return true if all validation_keys in _data match an element in _data_table\r\n            return _data[_keys]==_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./src/mixins/alerts_mixin.js","webpack:///./src/design_components/mek_shield/subcomponents/mek_shield-reset-time.vue?cea1","webpack:///./src/data_table_modules/mek_shield/mek_shield-reset-time-data-module.js","webpack:///src/design_components/mek_shield/subcomponents/mek_shield-reset-time.vue","webpack:///./src/design_components/mek_shield/subcomponents/mek_shield-reset-time.vue?5400","webpack:///./src/design_components/mek_shield/subcomponents/mek_shield-reset-time.vue"],"names":["__webpack_require__","d","__webpack_exports__","partial_validate","partial_has_feature","partial_get_feature","partial_cleaned_feature","_data_table","_validation_keys","_data","Array","isArray","length","valid","some","_val","_keys","_key","undefined","_has_feature","found_feature","_table_val","_validator","_get_feature","_default_data","_name","_pkey","_feature","data","key_list","update","alerts","json_data","JSON","stringify","parse","push","methods","addAlert","_alert_string","this","publishAlerts","$store","commit","$set","render","_vm","_h","$createElement","_c","_self","attrs","items","reset_table","pkey","selected-keys","selected_keys","headers","time","cost","name","flow","show-headers","format","on","update-selected-data","select_reset","staticRenderFns","reset_data_table","data_table_keys","default_data","reset_validate","has_feature","get_feature","cleaned_feature","mek_shield_reset_timevue_type_script_lang_js_","props","mixins","alerts_mixin","components","mek-sub-component-table","e","then","bind","obj","suppressAlerts","_selected_reset_obj","$emit","computed","[object Object]","cleaned_data","resetTime","forEach","_alert","subcomponents_mek_shield_reset_timevue_type_script_lang_js_","component","Object","componentNormalizer"],"mappings":"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","file":"js/mek-shield-reset-time.c3f9c45d.js","sourcesContent":["//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return !_validation_keys.some((_keys)=>\r\n        {//returns true on invalid data, Not the return to return True if matching valid value is found\r\n            return _data[_keys]!=_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.reset_table,\"pkey\":_vm.pkey,\"selected-keys\":_vm.selected_keys,\"headers\":{time:'Rounds',cost:'Cost'},\"name\":\"Reset Time\",\"flow\":\"pkey-row\",\"show-headers\":true,\"format\":{cost:'multiplier'}},on:{\"update-selected-data\":_vm.select_reset}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature} from \"../universal/mek_partial-function-data-module\";\r\n\r\n//create new reset_data_table\r\nlet reset_data_table=\r\n[\r\n    {time:\"__NIL__\",cost:0.5},\r\n    {time:3,cost:0.75},\r\n    {time:2,cost:1.0},\r\n    {time:1,cost:1.5},\r\n    {time:0,cost:2.0}\r\n];\r\nlet data_table_keys=[\"time\",\"cost\"];\r\nlet default_data={time:2,cost:1.0};\r\n\r\n//data validator for reset_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet reset_validate=partial_validate(reset_data_table, data_table_keys);\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=partial_has_feature(reset_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_feature=partial_get_feature(reset_data_table, has_feature);\r\n\r\n//completed function for returning cleaed data\r\nlet cleaned_feature=\r\n    partial_cleaned_feature(reset_validate, has_feature, get_feature, default_data, \"Mek_Shield-Reset-Time\");\r\n\r\nexport {reset_data_table, reset_validate, has_feature, get_feature, cleaned_feature};\r\n","<template>\r\n    <mek-sub-component-table\r\n        :items=\"reset_table\" :pkey=\"pkey\" :selected-keys=\"selected_keys\"\r\n        :headers=\"{time:'Rounds',cost:'Cost'}\"\r\n        name=\"Reset Time\" flow=\"pkey-row\" :show-headers=\"true\"\r\n        :format=\"{cost:'multiplier'}\"\r\n        @update-selected-data=\"select_reset\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport alerts_mixin from \"../../../mixins/alerts_mixin.js\";\r\nimport { reset_data_table, cleaned_feature } \r\n    from \"../../../data_table_modules/mek_shield/mek_shield-reset-time-data-module\";\r\n\r\nexport default \r\n{\r\n    name:\"mek_shield_reset_time\",\r\n    props:[\"resetTime\"],\r\n    mixins:[alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"../../universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.pkey=\"time\";\r\n        obj.alerts=[];\r\n        obj.suppressAlerts=false;\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_reset:function(_selected_reset_obj)\r\n        {\r\n            let data=JSON.parse(JSON.stringify(_selected_reset_obj))\r\n            this.$emit(\"update-reset-time\",data);\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        reset_table()\r\n        {\r\n            return reset_data_table;\r\n        },\r\n        selected_keys()\r\n        {\r\n            let cleaned_data=cleaned_feature(this.pkey, this.resetTime);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.select_reset(cleaned_data.data);\r\n            }\r\n            return cleaned_data.key_list;\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_shield-reset-time.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_shield-reset-time.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_shield-reset-time.vue?vue&type=template&id=0e76848a&\"\nimport script from \"./mek_shield-reset-time.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_shield-reset-time.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
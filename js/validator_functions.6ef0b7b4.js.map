{"version":3,"sources":["webpack:///./src/store/modules/validators/validator_functions.js"],"names":["loopValidators","_validators","_component","cleanedComponent","alerts","forEach","_val","validatedData","runValidator","component_prop","cleaned_array","data","concat","loopAlerts","_validator_data","validatorInstance","validator","pkeyInstance","pkey","propInstance","includes","updateMultipliers","_updateList","_name","component","cost_multipliers","component_type","undefined","armor","rootPropName","length","_component_prop","feature_array_cost_multiplier","reduce","_cm","_feat","cost","push","round","_number","_decimals","Math","multiplier"],"mappings":"yQAAA,IAAIA,EAAe,CAACC,EAAaC,KAE7B,IAAIC,EAAiBD,EACjBE,EAAO,GAYX,OAXAH,EAAYI,QAASC,IAEjB,IAAIC,EAAcC,EAAaF,EAAMH,GACrCA,EAAiBG,EAAKG,gBAAqC,iBAArBH,EAAKG,eAC7BF,EAAcG,cACO,kBAArBJ,EAAKG,eACLF,EAAcG,cACdH,EAAcI,KAC5BP,EAAOA,EAAOQ,OAAOL,EAAcH,UAGhC,CAACD,iBAAiBA,EAAkBU,WAAWT,IAGtDI,EAAa,CAACM,EAAiBZ,KAG/B,IAAIa,EAAkBD,EAAgBE,UAClCC,EAAaH,EAAgBI,KAC7BC,EAAajB,EAAWY,EAAgBL,gBAE5C,MAAG,CAAC,gBAAgB,kBAAkBW,SAASN,EAAgBL,gBAEpDM,EAAkBI,EAAcF,GAEpCF,EAAkBE,EAAcE,IAGvCE,EAAkB,CAACC,EAAapB,EAAYqB,KAE5C,IAAIC,EAAUtB,EACVE,EAAO,GAEXoB,EAAUC,iBAAiBD,EAAUC,kBAAoB,GAC3B,SAA3BvB,EAAWwB,qBAA8DC,IAAnCH,EAAUC,iBAAiBG,QAEhEJ,EAAUC,iBAAiBG,MAAM,IAErC,IAAIjB,EAAKa,EAAUC,iBAAiBG,OAAUJ,EAAUC,iBACpDI,EAAaL,EAAUC,iBAAiBG,MAAQ,0BAA4B,oBAChF,OAAuB,GAApBN,EAAYQ,OAEJ,CAACnB,KAAKA,EAAMP,OAAOA,IAE9BkB,EAAYjB,QAAS0B,IAEjB,GAAG,CAAC,gBAAgB,kBAAkBX,SAASW,GAC/C,CACI,IAAIC,EAA8BR,EAAUO,GAAiBE,OAAO,CAACC,EAAKC,KAEtE,OAAOD,EAAMC,EAAMC,MACrB,GACCZ,EAAUC,iBAAiBM,IAAkBC,IAE5C5B,EAAOiC,KAAKd,EAAM,KAAKM,EAAaE,GACpC3B,EAAOiC,KAAK,gCAAgCN,EAAgB,uBAC5DpB,EAAKoB,GAAiBC,QAKvBrB,EAAKoB,IAAkBP,EAAUO,GAAiBK,OAEjDhC,EAAOiC,KAAKd,EAAM,KAAKM,EAAaE,GACpC3B,EAAOiC,KAAK,gCAAgCN,EAAgB,uBAC5DpB,EAAKoB,GAAiBP,EAAUO,GAAiBK,QAItD,CAACzB,KAAKA,EAAMP,OAAOA,KAG1BkC,EAAM,CAACC,EAASC,KAEhB,GAAsB,qBAAZA,GAAuC,IAAXA,EAElC,OAAOC,KAAKH,OAAOC,GAEvB,IAAIG,EAAW,KAAOF,EACtB,OAAOC,KAAKH,OAAOC,EAAUG,GAAYA","file":"js/validator_functions.6ef0b7b4.js","sourcesContent":["let loopValidators=(_validators, _component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let alerts=[];\r\n    _validators.forEach((_val)=>\r\n    {\r\n        let validatedData=runValidator(_val, cleanedComponent);\r\n        cleanedComponent[_val.component_prop]=_val.component_prop==\"feature_array\"\r\n                    ? validatedData.cleaned_array\r\n                    : _val.component_prop==\"weakness_array\"\r\n                    ? validatedData.cleaned_array\r\n                    : validatedData.data;\r\n        alerts=alerts.concat(validatedData.alerts);\r\n    });\r\n\r\n    return {cleanedComponent:cleanedComponent, loopAlerts:alerts};\r\n};\r\n\r\nlet runValidator=(_validator_data, _component)=>\r\n{\r\n    //let validatorInstance=validators[_validator_data.validator];\r\n    let validatorInstance=_validator_data.validator;\r\n    let pkeyInstance=_validator_data.pkey;\r\n    let propInstance=_component[_validator_data.component_prop];\r\n\r\n    if([\"feature_array\",\"weakness_array\"].includes(_validator_data.component_prop))\r\n    {\r\n        return validatorInstance(propInstance, pkeyInstance); \r\n    }\r\n    return validatorInstance(pkeyInstance, propInstance);\r\n};\r\n\r\nlet updateMultipliers=(_updateList, _component, _name)=>\r\n{\r\n    let component=_component;\r\n    let alerts=[];\r\n    //let data=_component.cost_multipliers;\r\n    component.cost_multipliers=component.cost_multipliers || {};\r\n    if(_component.component_type==\"servo\" && component.cost_multipliers.armor===undefined)\r\n    {\r\n        component.cost_multipliers.armor={};\r\n    }\r\n    let data=component.cost_multipliers.armor ||  component.cost_multipliers;\r\n    let rootPropName=component.cost_multipliers.armor ? \"cost_multipliers.armor.\" : \"cost_multipliers.\";\r\n    if(_updateList.length==0)\r\n    {\r\n        return {data:data, alerts:alerts};\r\n    }\r\n    _updateList.forEach((_component_prop)=>\r\n    {\r\n        if([\"feature_array\",\"weakness_array\"].includes(_component_prop))\r\n        {\r\n            let feature_array_cost_multiplier=component[_component_prop].reduce((_cm, _feat)=>\r\n            {\r\n                return _cm * _feat.cost;\r\n            },1);\r\n            if(component.cost_multipliers[_component_prop]!=feature_array_cost_multiplier)\r\n            {\r\n                alerts.push(_name+\": \"+rootPropName+_component_prop);\r\n                alerts.push(\"**** Invalid Cost Multiplier[\"+_component_prop+\"]. Correcting. ****\");\r\n                data[_component_prop]=feature_array_cost_multiplier;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(data[_component_prop]!=component[_component_prop].cost)\r\n            {\r\n                alerts.push(_name+\": \"+rootPropName+_component_prop);\r\n                alerts.push(\"**** Invalid Cost Multiplier[\"+_component_prop+\"]. Correcting. ****\");\r\n                data[_component_prop]=component[_component_prop].cost;\r\n            }   \r\n        }\r\n    });\r\n    return {data:data, alerts:alerts};\r\n};\r\n\r\nlet round=(_number, _decimals)=>\r\n{\r\n    if(typeof _decimals===\"undefined\" || +_decimals==0)\r\n    {\r\n        return Math.round(+_number)\r\n    }\r\n    let multiplier=10 ** +_decimals;\r\n    return Math.round(+_number * multiplier)/multiplier;\r\n};\r\n\r\nexport {loopValidators, updateMultipliers, round};"],"sourceRoot":""}
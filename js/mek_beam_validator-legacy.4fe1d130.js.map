{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./src/store/modules/validators/mek_beam_validator.js","webpack:///./node_modules/core-js/modules/es7.object.entries.js"],"names":["DESCRIPTORS","__webpack_require__","getKeys","toIObject","isEnum","f","module","exports","isEntries","it","key","O","keys","length","i","result","call","push","loopValidators","updateMultipliers","round","validators","e","then","bind","_module","accuracy","cleaned_feature","burst_value","damage","filter_feature","filter_data_table","feature","update_range_mod","create_range_mod_data_table","range_mod","update_shots","filter_shots_data_table","shots","warm_up","wide_angle","space_efficiency","validate_efficiency","derived","_component","validatedData","cleanedComponent","alerts","updateList","cost_multipliers","data","concat","cost_multiplier","Object","entries","reduce","_multi","_val","newDamageCapacity","selected_damage","damage_capacity","isFragile","feature_array","some","newWeight","weight","magFed","newCost","cost","efficiencies","space","validateComponent","loopAlerts","componentsToValidate","validator","pkey","component_prop","_loopValidators","range","selected_burst_value","_loopValidators2","base_cost","$export","$entries","S"],"mappings":"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","file":"js/mek_beam_validator-legacy.4fe1d130.js","sourcesContent":["var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","let validators={};\r\n\r\nimport(/* webpackChunkName: \"mek_beam-accuracy-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-accuracy-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.accuracy=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_beam-burst-value-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-burst-value-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.burst_value=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_beam-damage-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-damage-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.damage=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_beam-feature-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-feature-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.filter_feature=_module.filter_data_table;//filter based on burst_value\r\n    validators.feature=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_beam-range-mod-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-range-mod-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.update_range_mod=_module.create_range_mod_data_table;//filter based on base_range\r\n    validators.range_mod=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_beam-shots-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-shots-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.update_shots=_module.filter_shots_data_table;//update based on magfed feature\r\n    validators.shots=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_beam-warm-up-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-warm-up-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.warm_up=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_beam-wide-angle-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-wide-angle-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.wide_angle=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_space-efficiency-data-module\" */\"@/data_table_modules/universal/mek_space-efficiency-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.space_efficiency=_module.validate_efficiency;\r\n});\r\n\r\nlet loopValidators, updateMultipliers, round;\r\nimport(/* webpackChunkName: \"validator_functions\" */\"./validator_functions\")\r\n.then((_module)=>\r\n{\r\n    ({loopValidators, updateMultipliers, round} = _module);\r\n});\r\n\r\nvalidators.derived=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let alerts=[];\r\n    let validatedData;\r\n    let updateList=[\"selected_burst_value\",\"selected_accuracy\",\"selected_warm_up_time\",\"selected_wide_angle\",\"selected_range_mod\",\"feature_array\",\"selected_shots\"];\r\n    //update cost_multipliers for components needing update\r\n    validatedData=updateMultipliers(updateList,cleanedComponent,\"Mek-Beam\");\r\n    cleanedComponent.cost_multipliers=validatedData.data;\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    //update cost_multiplier\r\n    let cost_multiplier=Object.entries(cleanedComponent.cost_multipliers).reduce((_multi, _val)=>\r\n    {//calc new cost_multiplier\r\n        return _multi*_val[1];\r\n    },1);\r\n    cost_multiplier=round(cost_multiplier,2);\r\n    if(cleanedComponent.cost_multiplier!=cost_multiplier)\r\n    {\r\n        alerts.push(\"Mek-Beam: cost_multiplier\");\r\n        alerts.push(\"**** Invalid Cost Multiplier. Correcting. ****\");\r\n        cleanedComponent.cost_multiplier=round(cost_multiplier,2);\r\n    }\r\n    let newDamageCapacity=cleanedComponent.selected_damage.damage;\r\n    if(cleanedComponent.damage_capacity!=newDamageCapacity)\r\n    {\r\n        alerts.push(\"Mek-Beam: damage_capacity\");\r\n        alerts.push(\"**** Invalid Damage Capacity. Correcting. ****\");\r\n        cleanedComponent.damage_capacity=newDamageCapacity;\r\n    }\r\n    let isFragile=cleanedComponent.feature_array.some((_val)=>\r\n    {\r\n        return _val.feature==\"Fragile\";\r\n    });\r\n    let newWeight=isFragile ? 1 : newDamageCapacity/2;\r\n    if(cleanedComponent.weight!=newWeight)\r\n    {\r\n        alerts.push(\"Mek-Beam: weight\");\r\n        alerts.push(\"**** Invalid Weight. Correcting. ****\");\r\n        cleanedComponent.weight=newWeight;\r\n    }\r\n    let magFed=cleanedComponent.feature_array.some((_val)=>\r\n    {\r\n        return _val.feature==\"Mag-Fed\";\r\n    });\r\n    magFed=magFed ? 1 : 0;\r\n    let newCost=(cleanedComponent.selected_damage.cost * cost_multiplier) + cleanedComponent.efficiencies.space.cost + magFed;\r\n    newCost=round(newCost,2);\r\n    if(cleanedComponent.cost!=newCost)\r\n    {\r\n        alerts.push(\"Mek-Beam: cost\");\r\n        alerts.push(\"**** Invalid Cost. Correcting. ****\");\r\n        cleanedComponent.cost=newCost;\r\n    }\r\n\r\n    return {data:cleanedComponent, alerts:alerts};\r\n};\r\n\r\nlet validateComponent=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let validatedData;\r\n    let loopAlerts;\r\n    let alerts=[];\r\n    //loop thru independent validations\r\n    let componentsToValidate=\r\n    [\r\n        {validator:validators.damage,pkey:\"damage\",component_prop:\"selected_damage\"},\r\n        {validator:validators.burst_value,pkey:\"burst_value\",component_prop:\"selected_burst_value\"},\r\n        {validator:validators.accuracy,pkey:\"accuracy\",component_prop:'selected_accuracy'},\r\n        {validator:validators.warm_up,pkey:\"time\",component_prop:'selected_warm_up_time'},\r\n        {validator:validators.wide_angle,pkey:\"angle\",component_prop:'selected_wide_angle'},\r\n    ];\r\n    ({cleanedComponent, loopAlerts} = loopValidators(componentsToValidate, cleanedComponent));\r\n    alerts=alerts.concat(loopAlerts)\r\n    //update range_mod table\r\n    validators.update_range_mod(cleanedComponent.selected_damage.range);\r\n    //update feature table\r\n    validators.filter_feature(cleanedComponent.selected_burst_value.burst_value);\r\n    //extract if Mag-Fed\r\n    let magFed=cleanedComponent.feature_array.some(_val=>_val.feature==\"Mag-Fed\");\r\n    //update shots table\r\n    validators.update_shots(magFed);\r\n    //loop thru dependent validations\r\n\r\n    componentsToValidate=\r\n    [\r\n        {validator:validators.range_mod,pkey:\"range_mod\",component_prop:\"selected_range_mod\"},\r\n        {validator:validators.feature,pkey:\"feature\",component_prop:\"feature_array\"},\r\n        {validator:validators.shots,pkey:\"shots\",component_prop:'selected_shots'},\r\n    ];\r\n    ({cleanedComponent, loopAlerts} = loopValidators(componentsToValidate, cleanedComponent));\r\n    alerts=alerts.concat(loopAlerts);\r\n\r\n    //update derived values, and cost_multi\r\n    validatedData=validators.derived(cleanedComponent);\r\n    cleanedComponent=validatedData.data;\r\n    alerts=alerts.concat(validatedData.alerts);   \r\n    let base_cost=cleanedComponent.selected_damage.cost * cleanedComponent.cost_multiplier;\r\n    //validate space efficiency\r\n    validatedData=validators.space_efficiency(cleanedComponent.efficiencies.space, base_cost, \"Mek-Beam\");\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.efficiencies.space=validatedData.data;\r\n\r\n    return {data:cleanedComponent, alerts:alerts};\r\n};\r\n\r\nexport {validateComponent};","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n"],"sourceRoot":""}
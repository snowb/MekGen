{"version":3,"sources":["webpack:///./src/design_components/mek_energy_pool/subcomponents/mek_energy_pool-feature.vue?339d","webpack:///src/design_components/mek_energy_pool/subcomponents/mek_energy_pool-feature.vue","webpack:///./src/design_components/mek_energy_pool/subcomponents/mek_energy_pool-feature.vue?0b76","webpack:///./src/design_components/mek_energy_pool/subcomponents/mek_energy_pool-feature.vue","webpack:///./src/data_table_modules/mek_energy_pool/mek_energy_pool-feature-data-module.js","webpack:///./src/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./src/mixins/alerts_mixin.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","items","feature_table","pkey","selected-keys","selected_keys","headers","feature","cost","show-headers","format","name","flow","on","update-selected-data","select_feature","staticRenderFns","mek_energy_pool_featurevue_type_script_lang_js_","props","mixins","alerts_mixin","components","mek-sub-component-table","__webpack_require__","e","then","bind","data","obj","selected_feature_array","alerts","suppressAlerts","methods","_selected_feature","new_selected_feature_array","toggleFeature","cleaned_data","Object","mek_energy_pool_feature_data_module","cleaned_array","length","forEach","_alert","addAlert","publishAlerts","$set","$emit","[object Object]","_feature_array","_feature","feature_array","JSON","parse","stringify","remove_feature","some","_val","filter","push","computed","featureArray","update","key_list","subcomponents_mek_energy_pool_featurevue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","r","d","feature_data_table","feature_validate","has_feature","get_feature","cleaned_feature","_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__","data_table_keys","partial_validate","partial_has_feature","partial_get_feature","_pkey","json_data","undefined","error","temp_selected_feature_array","reduceRight","_cleaned_array","clean_feature","includes","reverse","partial_cleaned_feature","_data_table","_validation_keys","_data","Array","isArray","valid","every","_keys","_key","_has_feature","found_feature","_table_val","_validator","_get_feature","_default_data","_name","_alert_string","$store","commit"],"mappings":"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","file":"js/mek_energy_pool-feature.7457e966.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.feature_table,\"pkey\":_vm.pkey,\"selected-keys\":_vm.selected_keys,\"headers\":{feature:'Feature',cost:'Cost'},\"show-headers\":true,\"format\":{cost:'multiplier'},\"name\":\"Features\",\"flow\":\"pkey-col\"},on:{\"update-selected-data\":_vm.select_feature}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <mek-sub-component-table\r\n        :items=\"feature_table\" :pkey=\"pkey\" :selected-keys=\"selected_keys\"\r\n        :headers=\"{feature:'Feature',cost:'Cost'}\"\r\n        :show-headers=\"true\" :format=\"{cost:'multiplier'}\"\r\n        @update-selected-data=\"select_feature\"\r\n        name=\"Features\" flow=\"pkey-col\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport alerts_mixin from \"@/mixins/alerts_mixin\";\r\n\r\nimport {feature_data_table, cleaned_feature}\r\n    from \"@/data_table_modules/mek_energy_pool/mek_energy_pool-feature-data-module\";\r\n\r\nexport default \r\n{\r\n    name:\"mek_energy_pool_feature\",\r\n    props:[\"featureArray\"],\r\n    mixins:[alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"@/design_components/universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.selected_feature_array=[];\r\n        obj.pkey=\"feature\";\r\n        obj.alerts=[];\r\n        obj.suppressAlerts=false;\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_feature:function(_selected_feature)\r\n        {\r\n            this.suppressAlerts=true;//suppress alerts, for exclusive switching\r\n            let new_selected_feature_array=this.toggleFeature(this.selected_feature_array,_selected_feature);\r\n            let cleaned_data=cleaned_feature(new_selected_feature_array, this.pkey);\r\n            new_selected_feature_array=cleaned_data.cleaned_array;\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            this.$set(this,\"selected_feature_array\",new_selected_feature_array);\r\n            this.$emit(\"update-feature\",new_selected_feature_array);\r\n            this.suppressAlerts=false;\r\n        },\r\n        toggleFeature(_feature_array,_feature)\r\n        {\r\n            let feature_array=JSON.parse(JSON.stringify(_feature_array));\r\n            \r\n            let remove_feature=feature_array.some((_val)=>\r\n            {//if _feature matches already existing feature, flag for deletion\r\n                return _val[this.pkey]==_feature[this.pkey];\r\n            },this);\r\n            if(remove_feature)\r\n            {//if flagged for removal, filter out\r\n                return feature_array.filter((_val)=>\r\n                {\r\n                    return _val[this.pkey]!=_feature[this.pkey];\r\n                },this);\r\n            }\r\n            feature_array.push(_feature);\r\n            //otherwise add feature and return\r\n            return feature_array;\r\n        },\r\n    },\r\n    computed:\r\n    {\r\n        feature_table()\r\n        {\r\n            return feature_data_table;\r\n        },\r\n        selected_keys()\r\n        {\r\n            let cleaned_data=cleaned_feature(this.featureArray,this.pkey);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.$emit(\"alert-generated\",true);\r\n                this.$emit(\"update-feature\",cleaned_data.cleaned_array);\r\n            }\r\n            this.$set(this,\"selected_feature_array\",cleaned_data.cleaned_array);\r\n            return cleaned_data.key_list;\r\n        }\r\n    },\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_energy_pool-feature.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_energy_pool-feature.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_energy_pool-feature.vue?vue&type=template&id=396f3cd9&\"\nimport script from \"./mek_energy_pool-feature.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_energy_pool-feature.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature}\r\n    from \"@/data_table_modules/universal/mek_partial-function-data-module\";\r\n\r\n//create new feature_data_table\r\nlet feature_data_table=\r\n[\r\n    {feature:\"Morphable\",cost:1.25},\r\n    {feature:\"Fragile\",cost:1},\r\n];\r\nlet data_table_keys=[\"feature\",\"cost\"];\r\n\r\n//data validator for feature_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet feature_validate=partial_validate(feature_data_table, data_table_keys);\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=partial_has_feature(feature_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_feature=partial_get_feature(feature_data_table, has_feature);\r\n\r\n/*** \r\n * \r\n * find way to switch to partial function\r\n * \r\n * ***/\r\nlet cleaned_feature=function(_feature_array, _pkey)\r\n{\r\n    let update=false;\r\n    let key_list=[];\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature_array);\r\n    if(_feature_array===undefined || _pkey===undefined)\r\n    {\r\n        alerts.push(\"Mek_Energy_Pool-Feature: \");\r\n        let error=_feature_array===undefined\r\n            ? \"**** Missing feature array. Returning blank. ****\"\r\n            : \"**** No primary key provided. Returning blank. ****\";\r\n        alerts.push(error);\r\n        return {cleaned_array:[],update:true,key_list:key_list,alerts:alerts};\r\n    }\r\n\r\n    if(_feature_array.length==0)\r\n    {//no feature selected, return empty\r\n        return {cleaned_array:[],update:update,key_list:key_list,alerts:alerts};\r\n    }    \r\n\r\n    let temp_selected_feature_array=_feature_array.reduceRight((_cleaned_array, _val)=>\r\n    {\r\n        if(_val[_pkey]===undefined)\r\n        {//if feature with pkey doesn't exist in data table, ignore\r\n            alerts.push(\"Mek_Energy_Pool-Feature: \"+json_data);\r\n            alerts.push(\"**** Missing primary key. Ignoring. ****\");\r\n            return _cleaned_array;\r\n        }\r\n        let clean_feature=_val;\r\n        if(!feature_validate(_val))\r\n        {//invalid data\r\n            alerts.push(\"Mek_Energy_Pool-Feature: \"+json_data);\r\n            alerts.push(\"**** Invalid data, attempting to reset. ****\")\r\n            clean_feature=get_feature(_pkey,_val[_pkey]);\r\n            _val=clean_feature;//replace current value with correct value\r\n            update=true;\r\n            //attempt to set to corrected feature\r\n        }\r\n        if(clean_feature===null)\r\n        {//no matching feature\r\n            alerts.push(\"**** Unable to reset. No matching data. ****\")\r\n            update=true;\r\n            return _cleaned_array;\r\n            //ignore element\r\n        }\r\n        if(!key_list.includes(_val[_pkey]))\r\n        {\r\n            _cleaned_array.push(_val);\r\n            key_list.push(_val[_pkey]);\r\n        }\r\n        return _cleaned_array;\r\n    },[]);\r\n    temp_selected_feature_array=temp_selected_feature_array.reverse();\r\n    return {cleaned_array:temp_selected_feature_array,update:update,key_list:key_list,alerts:alerts};\r\n    //returns an object with the pruned feature array, whether it was updated, and the key_list\r\n};\r\n\r\nexport {feature_data_table, feature_validate, has_feature, get_feature, cleaned_feature};\r\n","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return _validation_keys.every((_keys)=>\r\n        {//return true if all validation_keys in _data match an element in _data_table\r\n            return _data[_keys]==_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
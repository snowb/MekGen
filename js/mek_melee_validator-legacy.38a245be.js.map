{"version":3,"sources":["webpack:///./src/store/modules/validators/mek_melee_validator.js","webpack:///./node_modules/core-js/library/modules/_object-to-array.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/entries.js","webpack:///./node_modules/core-js/library/modules/es7.object.entries.js","webpack:///./node_modules/core-js/library/fn/object/entries.js"],"names":["loopValidators","updateMultipliers","round","validators","__webpack_require__","e","then","bind","_module","accuracy","cleaned_feature","damage","feature","entangle","space_efficiency","validate_efficiency","derived","_component","validatedData","cleanedComponent","alerts","updateList","cost_multipliers","data","concat","cost_multiplier","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_entries__WEBPACK_IMPORTED_MODULE_0___default","reduce","_multi","_val","push","newDamageCapacity","selected_damage","damage_capacity","newWeight","weight","newCost","cost","efficiencies","space","isEntangle","feature_array","some","base_damage","range_mod","range_modifier","damage_mod","damage_modifier","cleanedEntangle","final_damage","undefined","validateComponent","loopAlerts","componentsToValidate","validator","pkey","component_prop","_loopValidators","base_cost","getKeys","toIObject","isEnum","f","module","exports","isEntries","it","key","O","keys","length","i","result","call","$export","$entries","S","entries","Object"],"mappings":"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","file":"js/mek_melee_validator-legacy.38a245be.js","sourcesContent":["let validators={};\r\n\r\nimport(/* webpackChunkName: \"mek_melee-accuracy-data-module\" */\"@/data_table_modules/mek_melee/mek_melee-accuracy-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.accuracy=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_melee-damage-data-module\" */\"@/data_table_modules/mek_melee/mek_melee-damage-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.damage=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_melee-feature-data-module\" */\"@/data_table_modules/mek_melee/mek_melee-feature-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.feature=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_melee-entangle-range-data-module\" */\"@/data_table_modules/mek_melee/mek_melee-entangle-range-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.entangle=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_space-efficiency-data-module\" */\"@/data_table_modules/universal/mek_space-efficiency-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.space_efficiency=_module.validate_efficiency;\r\n});\r\n\r\nlet loopValidators, updateMultipliers, round;\r\nimport(/* webpackChunkName: \"validator_functions\" */\"./validator_functions\")\r\n.then((_module)=>\r\n{\r\n    ({loopValidators, updateMultipliers, round} = _module);\r\n});\r\n\r\nvalidators.derived=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let alerts=[];\r\n    let validatedData;\r\n    let updateList=[\"selected_accuracy\",\"feature_array\"];\r\n    //update cost_multipliers for components needing update\r\n    validatedData=updateMultipliers(updateList,cleanedComponent,\"Mek-Melee\");\r\n    cleanedComponent.cost_multipliers=validatedData.data;\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    //update cost_multiplier\r\n    let cost_multiplier=Object.entries(cleanedComponent.cost_multipliers).reduce((_multi, _val)=>\r\n    {//calc new cost_multiplier\r\n        return _multi*_val[1];\r\n    },1);\r\n    cost_multiplier=round(cost_multiplier,2);\r\n    if(cleanedComponent.cost_multiplier!=cost_multiplier)\r\n    {\r\n        alerts.push(\"Mek-Melee: cost_multiplier\");\r\n        alerts.push(\"**** Invalid Cost Multiplier. Correcting. ****\");\r\n        cleanedComponent.cost_multiplier=round(cost_multiplier,2);\r\n    }\r\n    let newDamageCapacity=cleanedComponent.selected_damage.damage;\r\n    if(cleanedComponent.damage_capacity!=newDamageCapacity)\r\n    {\r\n        alerts.push(\"Mek-Melee: damage_capacity\");\r\n        alerts.push(\"**** Invalid Damage Capacity. Correcting. ****\");\r\n        cleanedComponent.damage_capacity=newDamageCapacity;\r\n    }\r\n    let newWeight=newDamageCapacity/2;\r\n    if(cleanedComponent.weight!=newWeight)\r\n    {\r\n        alerts.push(\"Mek-Melee: weight\");\r\n        alerts.push(\"**** Invalid Weight. Correcting. ****\");\r\n        cleanedComponent.weight=newWeight;\r\n    }\r\n    let newCost=(cleanedComponent.selected_damage.cost * cost_multiplier) + cleanedComponent.efficiencies.space.cost;\r\n    newCost=round(newCost,2);\r\n    if(cleanedComponent.cost!=newCost)\r\n    {\r\n        alerts.push(\"Mek-Melee: cost\");\r\n        alerts.push(\"**** Invalid Cost. Correcting. ****\");\r\n        cleanedComponent.cost=newCost;\r\n    }\r\n\r\n    //check and update entangle-range trade values\r\n    let isEntangle=cleanedComponent.feature_array.some((_val)=>\r\n    {\r\n        return _val.feature==\"Entangle\";\r\n    });\r\n    if(isEntangle)\r\n    {\r\n        let base_damage=cleanedComponent.selected_damage.damage;\r\n        let range_mod=cleanedComponent.entangle.range_modifier;\r\n        let damage_mod=cleanedComponent.entangle.damage_modifier;\r\n        let cleanedEntangle=validators.entangle(base_damage, range_mod, damage_mod);\r\n        cleanedComponent.entangle={range_modifier:cleanedEntangle.range_mod, damage_modifier:cleanedEntangle.damage_mod};\r\n        alerts=alerts.concat(cleanedEntangle.alerts);\r\n        if(cleanedComponent.final_damage!=cleanedEntangle.damage)\r\n        {\r\n            alerts.push(\"Mek-Melee: final_damage\");\r\n            alerts.push(\"**** Invalid Final Damage. Correcting. ****\");\r\n            cleanedComponent.final_damage=cleanedEntangle.damage;\r\n        }\r\n    }\r\n    else if(cleanedComponent.entangle!==undefined)\r\n    {\r\n        alerts.push(\"Mek-Melee: entangle\");\r\n        alerts.push(\"**** Invalid Entangle. Correcting. ****\");\r\n        cleanedComponent.entangle={range_mod:0,damage_mod:0};\r\n        if(cleanedComponent.final_damage!=cleanedComponent.selected_damage.damage)\r\n        {\r\n            alerts.push(\"Mek-Melee: final_damage\");\r\n            alerts.push(\"**** Invalid Final Damage. Correcting. ****\");\r\n        }\r\n    }\r\n    return {data:cleanedComponent, alerts:alerts};\r\n};\r\n\r\nlet validateComponent=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let validatedData;\r\n    let loopAlerts;\r\n    let alerts=[];\r\n    //loop thru independent validations\r\n    let componentsToValidate=\r\n    [\r\n        {validator:validators.damage,pkey:\"damage\",component_prop:\"selected_damage\"},\r\n        {validator:validators.accuracy,pkey:\"accuracy\",component_prop:'selected_accuracy'},\r\n        {validator:validators.feature,pkey:\"feature\",component_prop:'feature_array'},\r\n    ];\r\n    ({cleanedComponent, loopAlerts} = loopValidators(componentsToValidate, cleanedComponent));\r\n    alerts=alerts.concat(loopAlerts)\r\n\r\n    //update cost_multipliers for components needing update\r\n    validatedData=validators.derived(cleanedComponent);\r\n    cleanedComponent=validatedData.data;\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    //validate space efficienc\r\n    let base_cost=cleanedComponent.selected_damage.cost * cleanedComponent.cost_multiplier;\r\n    validatedData=validators.space_efficiency(cleanedComponent.efficiencies.space, base_cost, \"Mek-Melee\");\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.efficiencies.space=validatedData.data;\r\n\r\n    return {data:cleanedComponent, alerts:alerts};\r\n};\r\n\r\nexport {validateComponent};","var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n","module.exports = require(\"core-js/library/fn/object/entries\");","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n"],"sourceRoot":""}
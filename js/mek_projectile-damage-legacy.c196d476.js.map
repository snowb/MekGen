{"version":3,"sources":["webpack:///./src/design_components/mek_projectile/subcomponents/mek_projectile-damage.vue?b1d5","webpack:///src/design_components/mek_projectile/subcomponents/mek_projectile-damage.vue","webpack:///./src/design_components/mek_projectile/subcomponents/mek_projectile-damage.vue?0547","webpack:///./src/design_components/mek_projectile/subcomponents/mek_projectile-damage.vue","webpack:///./src/data_table_modules/mek_projectile/mek_projectile-damage-data-module.js","webpack:///./src/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./src/mixins/alerts_mixin.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","items","damage_table","pkey","selected-keys","selected_keys","headers","damage","cost","range","name","flow","show-headers","on","update-selected-data","select_damage","staticRenderFns","mek_projectile_damagevue_type_script_lang_js_","props","mixins","alerts_mixin","components","mek-sub-component-table","__webpack_require__","e","then","bind","data","obj","alerts","suppressAlerts","methods","_damage","JSON","parse","stringify","$emit","computed","mek_projectile_damage_data_module","_this","cleaned_data","Object","length","forEach","_alert","addAlert","publishAlerts","update","key_list","subcomponents_mek_projectile_damagevue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","r","d","damage_data_table","damage_validate","has_feature","get_feature","cleaned_feature","_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__","Array","apply","map","_el","_index","Math","round","sqrt","data_table_keys","default_data","partial_validate","partial_has_feature","partial_get_feature","partial_cleaned_feature","_data_table","_validation_keys","_data","isArray","valid","some","_val","every","_keys","_key","undefined","_has_feature","found_feature","_table_val","_validator","_get_feature","_default_data","_name","_pkey","_feature","json_data","push","_alert_string","$store","commit","$set"],"mappings":"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","file":"js/mek_projectile-damage-legacy.c196d476.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.damage_table,\"pkey\":_vm.pkey,\"selected-keys\":_vm.selected_keys,\"headers\":{damage:'Damage',cost:'Cost',range:'Range'},\"name\":\"Damage\",\"flow\":\"pkey-row\",\"show-headers\":true},on:{\"update-selected-data\":_vm.select_damage}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <mek-sub-component-table\r\n        :items=\"damage_table\" :pkey=\"pkey\" :selected-keys=\"selected_keys\"\r\n        :headers=\"{damage:'Damage',cost:'Cost',range:'Range'}\"\r\n        name=\"Damage\" flow=\"pkey-row\" :show-headers=\"true\"\r\n        @update-selected-data=\"select_damage\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport alerts_mixin from \"@/mixins/alerts_mixin\";\r\n\r\nimport {damage_data_table, cleaned_feature}\r\n    from \"@/data_table_modules/mek_projectile/mek_projectile-damage-data-module.js\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_projectile_damage\",\r\n    props:[\"damage\"],\r\n    mixins:[alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"@/design_components/universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.alerts=[];\r\n        obj.pkey=\"damage\";\r\n        obj.suppressAlerts=false;\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_damage:function(_damage)\r\n        {\r\n            let data=JSON.parse(JSON.stringify(_damage));\r\n            this.$emit(\"update-damage\",data);\r\n        },\r\n    },\r\n    computed:\r\n    {\r\n        damage_table()\r\n        {\r\n            return damage_data_table;\r\n        },\r\n        selected_keys()\r\n        {\r\n            let cleaned_data=cleaned_feature(this.pkey, this.damage);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.$emit(\"alert-generated\",true);\r\n                this.select_damage(cleaned_data.data);\r\n            }\r\n            return cleaned_data.key_list;\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_projectile-damage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_projectile-damage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_projectile-damage.vue?vue&type=template&id=5bb17b57&\"\nimport script from \"./mek_projectile-damage.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_projectile-damage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature} \r\n    from \"@/data_table_modules/universal/mek_partial-function-data-module\";\r\n\r\n//create new damage_data_table\r\nlet damage_data_table=Array.apply({}, Array(20)).map((_el,_index)=>\r\n{\r\n    let damage=_index+1;\r\n    let cost=damage;\r\n    let range=Math.round(Math.sqrt(damage)*3);\r\n    return {damage:damage,cost:cost,range:range};\r\n});\r\nlet data_table_keys=[\"damage\",\"cost\",\"range\"];\r\nlet default_data={damage:1,cost:1,range:3};\r\n\r\n//data validator for damage_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet damage_validate=partial_validate(damage_data_table, data_table_keys);\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=partial_has_feature(damage_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_feature=partial_get_feature(damage_data_table, has_feature);\r\n\r\n//completed function for returning cleaed data\r\nlet cleaned_feature=\r\n    partial_cleaned_feature(damage_validate, has_feature, get_feature, default_data, \"Mek_Projectile-Damage\");\r\n\r\nexport {damage_data_table, damage_validate, has_feature, get_feature, cleaned_feature};\r\n","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return _validation_keys.every((_keys)=>\r\n        {//return true if all validation_keys in _data match an element in _data_table\r\n            return _data[_keys]==_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/mek_magazine/subcomponents/mek_magazine-ammo-list.vue?86f9","webpack:///./src/components/data_table_modules/mek_magazine/mek_ammo-list-data-module.js","webpack:///src/components/mek_magazine/subcomponents/mek_magazine-ammo-list.vue","webpack:///./src/components/mek_magazine/subcomponents/mek_magazine-ammo-list.vue?70d4","webpack:///./src/components/mek_magazine/subcomponents/mek_magazine-ammo-list.vue","webpack:///./src/mixins/alerts_mixin.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","items","filteredAmmoArray","selected-keys","selected_keys","pkey","headers","type","cost","effect","show-headers","format","name","flow","on","update-selected-data","select_ammo","staticRenderFns","ammo_data_table","shock_exclusive","blast_exclusive","filter","_el","ammo_validate","_data","valid","some","_val","has_feature","_key","undefined","get_feature","found_feature","_table_val","mek_ammo_list_data_module_this","mek_magazine_ammo_listvue_type_script_lang_js_","props","mixins","selected_item_mixin","utility_mixin","alerts_mixin","components","mek-sub-component-table","__webpack_require__","e","then","bind","data","obj","selected_ammo_array","alerts","methods","_selected_ammo","suppress_alerts","new_selected_ammo_array","toggleFeature","cleanFeatureArray","cleaned_array","publishAlerts","$set","$emit","_feature_array","_suppress_alerts","_this","hasExclusiveShock","hasExclusiveBlast","self","update","key_list","temp_selected_feature_array","reduceRight","_cleaned_array","addAlert","stringify_default","clean_feature","isShock","is_exclusive_feature","isBlast","push","includes","toLowerCase","reverse","length","JSON","parse","_feature","_this2","feature_array","remove_feature","_target_array","computed","hasBlast","_elem","mek_ammo_list_data_module_shock_exclusive","mek_ammo_list_data_module_blast_exclusive","ammoArray","subcomponents_mek_magazine_ammo_listvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","_alert_string","$store","commit"],"mappings":"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","file":"js/mek-magazine-ammo-list-legacy.fa0bd2d0.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.filteredAmmoArray,\"selected-keys\":_vm.selected_keys,\"pkey\":_vm.pkey,\"headers\":{type:'Type',cost:'Cost',effect:'Effect'},\"show-headers\":true,\"format\":{cost:'multiplier'},\"name\":\"Ammo Table\",\"flow\":\"pkey-col\"},on:{\"update-selected-data\":_vm.select_ammo}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//create new ammo_data_table\r\nlet ammo_data_table=\r\n[\r\n    {type:\"Paintball\",cost:0.5,effect:\"Practice Rounds\"},\r\n    {type:\"Foam\",cost:0.5,effect:\"Firefighting\"},\r\n    {type:\"High-Ex\",cost:1,effect:\"Standard\"},\r\n    {type:\"Tracer\",cost:3,effect:\"+1 to WA\"},\r\n    {type:\"Kinetic\",cost:3,effect:\"More Knockback\"},\r\n    {type:\"Tangler\",cost:3,effect:\"Grappling Attack\"},\r\n    {type:\"Armor Piercing\",cost:4,effect:\"1/2 SP vs Armor\"},\r\n    {type:\"Disruptor\",cost:4,effect:\"1/2 SP vs Energy\"},\r\n    {type:\"Incendiary\",cost:4,effect:\"Flamethrower\"},\r\n    {type:\"Shock (only)\",cost:4,effect:\"Stun Effect\",shock_exclusive:true},\r\n    {type:\"Shock (add)\",cost:6,effect:\"Stun & Damage\",shock_exclusive:true},\r\n    {type:\"Scattershot\",cost:5,effect:\"Shotgun Effect\"},\r\n    {type:\"Blast I\",cost:6,effect:\"1-Hex Radius\",blast_exclusive:true},\r\n    {type:\"Blast II\",cost:8,effect:\"2-Hex Radius\",blast_exclusive:true},\r\n    {type:\"Blast III\",cost:10,effect:\"3-Hex Radius\",blast_exclusive:true},\r\n    {type:\"Blast IV\",cost:12,effect:\"4-Hex Radius\",blast_exclusive:true},\r\n    {type:\"Blast V\",cost:14,effect:\"5-Hex Radius\",blast_exclusive:true},\r\n    {type:\"Nuclear\",cost:1000,effect:\"Atomic Ammo\"},\r\n];\r\nlet shock_exclusive=ammo_data_table.filter((_el)=>{return typeof _el.shock_exclusive!==\"undefined\";});\r\nlet blast_exclusive=ammo_data_table.filter((_el)=>{return typeof _el.blast_exclusive!==\"undefined\";})\r\n\r\n//data validator for ammo_data_table\r\nlet ammo_validate=(_data)=>\r\n{\r\n    if(typeof _data===\"undefined\")\r\n    {\r\n        return false;\r\n    }\r\n    let valid=ammo_data_table.some((_val)=>\r\n    {\r\n        return _val.type==_data.type\r\n                && _val.cost==_data.cost\r\n                && _val.shock_exclusive==_data.shock_exclusive\r\n                && _val.blast_exclusive==_data.blast_exclusive;\r\n    });\r\n    return valid;\r\n}\r\n\r\nlet has_feature=(_key, _val)=>\r\n{\r\n    return ammo_data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\nlet get_feature=(_key, _val)=>\r\n{\r\n    if(has_feature(_key,_val))\r\n    {\r\n        let found_feature=null;\r\n        ammo_data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n        return found_feature;\r\n    }\r\n}\r\n\r\nexport {ammo_data_table, ammo_validate, has_feature, get_feature, shock_exclusive, blast_exclusive};\r\n","<template>\r\n    <mek-sub-component-table\r\n        :items=\"filteredAmmoArray\" :selected-keys=\"selected_keys\" :pkey=\"pkey\"\r\n        :headers=\"{type:'Type',cost:'Cost',effect:'Effect'}\" :show-headers=\"true\"\r\n        :format=\"{cost:'multiplier'}\" name=\"Ammo Table\" flow=\"pkey-col\"\r\n        @update-selected-data=\"select_ammo\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport selected_item_mixin from \"../../../mixins/selected_item_mixin\";\r\nimport utility_mixin from \"../../../mixins/utility_mixin\";\r\nimport alerts_mixin from \"../../../mixins/alerts_mixin\";\r\n\r\nimport {ammo_data_table, ammo_validate, get_feature, shock_exclusive, blast_exclusive} \r\n    from \"../../data_table_modules/mek_magazine/mek_ammo-list-data-module.js\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_magazine_ammo_list\",\r\n    props:[\"ammoArray\",\"hasBlast\"],\r\n    mixins:[selected_item_mixin,utility_mixin, alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"../../universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.selected_ammo_array=[];\r\n        obj.pkey=\"type\";\r\n        obj.alerts=[];\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_ammo:function(_selected_ammo)\r\n        {//refactor to external ammo array cleaner\r\n            let suppress_alerts=true;//suppress alerts for exclusives\r\n            let new_selected_ammo_array=this.toggleFeature(this.selected_ammo_array,_selected_ammo);\r\n            new_selected_ammo_array=this.cleanFeatureArray(new_selected_ammo_array, suppress_alerts).cleaned_array;\r\n            this.publishAlerts();\r\n            this.$set(this,\"selected_ammo_array\",new_selected_ammo_array);\r\n            this.$emit(\"update-ammo\",new_selected_ammo_array);\r\n        },\r\n        cleanFeatureArray(_feature_array,_suppress_alerts)\r\n        {//takes feature_array, returns cleaned array removing multiple exclusive values\r\n            let hasExclusiveShock=false;\r\n            let hasExclusiveBlast=false;\r\n            let self=this;\r\n            let update=false;\r\n            let key_list=[];\r\n\r\n            let temp_selected_feature_array=_feature_array.reduceRight((_cleaned_array, _val)=>\r\n            {\r\n                if(_val[self.pkey]===undefined)\r\n                {//if feature with pkey doesn't exist in data table, ignore\r\n                    self.addAlert(\"Mek_Magazine-Ammo-List: \"+JSON.stringify(_val));\r\n                    self.addAlert(\"**** Missing primary key. Ignoring. ****\");\r\n                    return _cleaned_array;\r\n                }\r\n                let clean_feature=_val;\r\n                if(!ammo_validate(_val))\r\n                {//invalid data\r\n                    self.addAlert(\"Mek_Magazine-Ammo-List: \"+JSON.stringify(_val))\r\n                    self.addAlert(\"**** Invalid data, attempting to reset. ****\")\r\n                    clean_feature=get_feature(self.pkey,_val[self.pkey]);\r\n                    update=true;\r\n                    //attempt to set to corrected feature\r\n                }\r\n                if(clean_feature===null)\r\n                {//no matching feature\r\n                    self.addAlert(\"**** Unable to reset. No matching data. ****\")\r\n                    update=true;\r\n                    return _cleaned_array;\r\n                    //ignore element\r\n                }\r\n                let isShock=self.is_exclusive_feature(\"shock_exclusive\",_val[self.pkey]);\r\n                let isBlast=self.is_exclusive_feature(\"blast_exclusive\",_val[self.pkey]);\r\n\r\n                if(isShock && !hasExclusiveShock)\r\n                {\r\n                    _cleaned_array.push(_val);\r\n                    hasExclusiveShock=true;\r\n                    key_list.push(_val[self.pkey]);\r\n                    return _cleaned_array;\r\n                }\r\n                else if(isShock && hasExclusiveShock)\r\n                {\r\n                    if(!_suppress_alerts)\r\n                    {\r\n                        self.addAlert(\"Mek_Magazine-Ammo-List: \"+_val);\r\n                        self.addAlert(\"**** Duplicate exclusive shock data. Ignoring. ****\");\r\n                    }\r\n                    update=true;\r\n                    return _cleaned_array;\r\n                }\r\n\r\n                if(isBlast && !hasExclusiveBlast)\r\n                {\r\n                    _cleaned_array.push(_val);\r\n                    hasExclusiveBlast=true;\r\n                    key_list.push(_val[self.pkey]);\r\n                    return _cleaned_array;\r\n                }\r\n                else if(isBlast && hasExclusiveBlast)\r\n                {\r\n                    if(!_suppress_alerts)\r\n                    {\r\n                        self.addAlert(\"Mek_Magazine-Ammo-List: \"+_val);\r\n                        self.addAlert(\"**** Duplicate exclusive blast radius data. Ignoring. ****\");\r\n                    }\r\n                    update=true;\r\n                    return _cleaned_array;\r\n                }\r\n\r\n                if(!key_list.includes(_val[self.pkey]))\r\n                {\r\n                    _cleaned_array.push(_val);\r\n                    key_list.push(_val[self.pkey]);\r\n                }\r\n                return _cleaned_array;\r\n            },[]);\r\n            temp_selected_feature_array=temp_selected_feature_array.filter((_val)=>\r\n            {\r\n                return _val[this.pkey].toLowerCase()!=\"nuclear\" \r\n                    || (hasExclusiveBlast && _val[this.pkey].toLowerCase()==\"nuclear\");\r\n                //filter out nuclear if blast-radius isn't a feature\r\n            },this).reverse();\r\n            if(temp_selected_feature_array.length==0)\r\n            {//empty, reset to default\r\n                temp_selected_feature_array=[JSON.parse(JSON.stringify(get_feature(this.pkey,\"High-Ex\")))];\r\n                update=true;\r\n                key_list=[\"High-Ex\"];\r\n                this.addAlert(\"Mek_Magazine-Ammo-List: \");\r\n                this.addAlert(\"**** Reseting to default ****\");\r\n            }\r\n            return {cleaned_array:temp_selected_feature_array,update:update,key_list:key_list};\r\n            //returns an object with the pruned feature array, whether it was updated, and the key_list\r\n        },\r\n        toggleFeature(_feature_array,_feature)\r\n        {\r\n            let feature_array=JSON.parse(JSON.stringify(_feature_array));\r\n            \r\n            let remove_feature=feature_array.some((_val)=>\r\n            {//if _feature matches already existing feature, flag for deletion\r\n                return _val[this.pkey]==_feature[this.pkey];\r\n            },this);\r\n\r\n            if(remove_feature)\r\n            {//if flagged for removal, filter out\r\n                return feature_array.filter((_val)=>\r\n                {\r\n                    return _val[this.pkey]!=_feature[this.pkey];\r\n                },this);\r\n            }\r\n            feature_array.push(_feature);\r\n            //otherwise add feature and return\r\n            return feature_array;\r\n        },\r\n        is_exclusive_feature:function(_target_array,_feature)\r\n        {\r\n            return this[_target_array].some(function(_val)\r\n            {\r\n                if(_val[this.pkey].toLowerCase() == _feature.toLowerCase())\r\n                {\r\n                    return true;\r\n                }\r\n                return false;\r\n            },this);\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        filteredAmmoArray()\r\n        {\r\n            if(this.hasBlast)\r\n            {\r\n                return ammo_data_table;\r\n            }\r\n            return ammo_data_table.filter((_elem)=>\r\n            {\r\n                return _elem.type.toLowerCase()!=\"nuclear\";\r\n            });\r\n        },\r\n        shock_exclusive(){return shock_exclusive;},\r\n        blast_exclusive(){return blast_exclusive;},\r\n        selected_keys()\r\n        {\r\n            let cleaned_array=this.cleanFeatureArray(this.ammoArray);\r\n            this.publishAlerts();\r\n\r\n            if(cleaned_array.update)\r\n            {\r\n                this.$emit(\"update-ammo\",cleaned_array.cleaned_array);\r\n            }\r\n            this.$set(this,\"selected_ammo_array\",cleaned_array.cleaned_array);\r\n            return cleaned_array.key_list;\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_magazine-ammo-list.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_magazine-ammo-list.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_magazine-ammo-list.vue?vue&type=template&id=3b6ce413&scoped=true&\"\nimport script from \"./mek_magazine-ammo-list.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_magazine-ammo-list.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3b6ce413\",\n  null\n  \n)\n\nexport default component.exports","export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
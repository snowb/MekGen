{"version":3,"sources":["webpack:///./src/components/mek_beam/mek_beam-main.vue?2058","webpack:///src/components/mek_beam/mek_beam-main.vue","webpack:///./src/components/mek_beam/mek_beam-main.vue?944d","webpack:///./src/components/mek_beam/mek_beam-main.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","width","attrs","new-component","newComponent","component-name","component_name","beam_name","component-changed","component_changed","on","update-component-name","updateComponentName","damage","selected_damage","update-damage","updateDamage","accuracy","selected_accuracy","update-accuracy","updateAccuracy","burst-value","selected_burst_value","update-burst-value","updateBurstValue","align-self","range-mod","selected_range_mod","anti-missile","anti_missile","base-range","range","update-range-mod","updateRangeMod","warm-up-time","selected_warm_up_time","update-warm-up-time","updateWarmUpTime","_e","wide-angle","selected_wide_angle","update-wide-angle","updateWideAngle","space_efficiency","efficiencies","space","raw_space","update-efficiencies","updateEfficiencies","feature-array","feature_array","burst_value","update-feature","updateFeature","cols","rows","slot","_v","_s","damage_capacity","selected_shots","shots","range_mod","max-width","margin-left","feature_list","round","space_cost","weight","cost","cost_multiplier","font-weight","save-reset-component","componentSaveReset","staticRenderFns","__webpack_require__","e","then","bind","module","console","log","mek_beam_mainvue_type_script_lang_js_","name","props","mixins","utility_mixin","component_computed_mixin","component_methods_mixin","components","mek-beam-damage","mek-beam-accuracy","mek-beam-burst-value","mek-beam-range-mod","mek-beam-warm-up-time","mek-beam-wide-angle","mek-beam-feature","mek-space-efficiency","mek-component-name","mek-save-reset-component","mek-component-stats","data","obj","mounted","uuid","component_category","component_type","original_component","time","angle","modifier","cost_multipliers","feature","wide_angle","warm_up_time","forceTrue","methods","_name","_data","$set","_damage","_accuracy","_burst_value","_range_mod","updateShots","_shots","_warm_up_time","_wide_angle","_featureArray","reduce","_multi","_val","projectile_name","fragile","_action","action","$store","commit","output_data","ingest_data","JSON","parse","_this","return_data","create_uuid","stringify_default","total_cost","final_damage","$nextTick","_data_object","_this2","alertMessage","universal_ingest_data","computed","subtotal_cost","mag_fed","isInfiniteBurst","isBurst","isHydro","isMegaBeam","toLowerCase","trim","replace","some","show_warm_up_time","mek_beam_mek_beam_mainvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/mek_beam-main-legacy.ea3bea65.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.mounted)?_c('span',{staticClass:\"mek-inline-flex-col\",staticStyle:{\"width\":\"100%\"}},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.beam_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-beam-damage',{attrs:{\"damage\":_vm.selected_damage},on:{\"update-damage\":_vm.updateDamage}}),_c('mek-beam-accuracy',{attrs:{\"accuracy\":_vm.selected_accuracy},on:{\"update-accuracy\":_vm.updateAccuracy}})],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('div',{staticClass:\"mek-flex-col no-margin\"},[_c('mek-beam-burst-value',{attrs:{\"burst-value\":_vm.selected_burst_value},on:{\"update-burst-value\":_vm.updateBurstValue}})],1),_c('mek-beam-range-mod',{staticStyle:{\"align-self\":\"start\"},attrs:{\"range-mod\":_vm.selected_range_mod,\"anti-missile\":_vm.anti_missile,\"base-range\":_vm.selected_damage.range},on:{\"update-range-mod\":_vm.updateRangeMod}}),_c('div',{staticClass:\"mek-inline-flex-col\"},[(_vm.show_warm_up_time)?_c('mek-beam-warm-up-time',{attrs:{\"warm-up-time\":_vm.selected_warm_up_time},on:{\"update-warm-up-time\":_vm.updateWarmUpTime}}):_vm._e(),_c('mek-beam-wide-angle',{attrs:{\"wide-angle\":_vm.selected_wide_angle},on:{\"update-wide-angle\":_vm.updateWideAngle}}),_c('mek-space-efficiency',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"space_efficiency\":_vm.efficiencies.space,\"raw_space\":_vm.raw_space},on:{\"update-efficiencies\":_vm.updateEfficiencies}})],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-beam-feature',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"feature-array\":_vm.feature_array,\"burst-value\":_vm.selected_burst_value.burst_value},on:{\"update-feature\":_vm.updateFeature}})],1)],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":4}},[_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Kills: \"+_vm._s(_vm.selected_damage.damage)+\" K\")]),_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_vm._v(\"Damage Capacity: \"+_vm._s(_vm.damage_capacity)+\" K\")]),(_vm.selected_shots.shots==0)?_c('div',{attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Shutdown: \"+_vm._s(_vm.selected_damage.damage)+\" turns\")]):_vm._e(),_c('div',{attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Final Range: \"+_vm._s(_vm.selected_damage.range * _vm.selected_range_mod.range_mod))]),_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Feature(s):\"),_c('div',{staticStyle:{\"max-width\":\"150px\",\"margin-left\":\"10px\"}},[_vm._v(_vm._s(_vm.feature_list))])]),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.round(_vm.raw_space,2)))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Space: \"+_vm._s(_vm.space_cost))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.round(_vm.weight,2))+\" tons\")]),(_vm.mag_fed)?_c('div',{attrs:{\"slot\":\"col3-row4\"},slot:\"col3-row4\"},[_vm._v(\"E-Mag: +1CP, +1SP\")]):_vm._e(),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.selected_damage.cost))]),_c('div',{attrs:{\"slot\":\"col4-row2\"},slot:\"col4-row2\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.round(_vm.cost_multiplier,2)))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row3\"},slot:\"col4-row3\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n        <span class=\"mek-inline-flex-col\" style=\"width:100%;\" v-if=\"mounted\">\r\n            <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||beam_name\"\r\n                :component-changed=\"component_changed\"\r\n                @update-component-name=\"updateComponentName\"\r\n            ></mek-component-name>\r\n            <div class=\"mek-inline-flex-row\">\r\n                <mek-beam-damage @update-damage=\"updateDamage\" :damage=\"selected_damage\"></mek-beam-damage>\r\n                <mek-beam-accuracy \r\n                    @update-accuracy=\"updateAccuracy\" \r\n                    :accuracy=\"selected_accuracy\"\r\n                ></mek-beam-accuracy>\r\n            </div>\r\n            <div class=\"mek-inline-flex-row\">\r\n                <div class=\"mek-flex-col no-margin\">\r\n                    <mek-beam-burst-value \r\n                        @update-burst-value=\"updateBurstValue\" \r\n                        :burst-value=\"selected_burst_value\"\r\n                    ></mek-beam-burst-value>\r\n                    <!--mek-beam-shots v-show=\"forceTrue\"\r\n                        @update-shots=\"updateShots\" \r\n                        :shots=\"selected_shots\" :mag-fed=\"mag_fed\"\r\n                    ></mek-beam-shots-->\r\n                </div>\r\n                <mek-beam-range-mod style=\"align-self:start;\"\r\n                    @update-range-mod=\"updateRangeMod\"\r\n                    :range-mod=\"selected_range_mod\" :anti-missile=\"anti_missile\"\r\n                    :base-range=\"selected_damage.range\"\r\n                ></mek-beam-range-mod>\r\n                <div class=\"mek-inline-flex-col\">\r\n                    <mek-beam-warm-up-time v-if=\"show_warm_up_time\"\r\n                        @update-warm-up-time=\"updateWarmUpTime\"\r\n                        :warm-up-time=\"selected_warm_up_time\"\r\n                    ></mek-beam-warm-up-time>\r\n                    <mek-beam-wide-angle\r\n                        @update-wide-angle=\"updateWideAngle\"\r\n                        :wide-angle=\"selected_wide_angle\"\r\n                    ></mek-beam-wide-angle>\r\n                    <mek-space-efficiency style=\"align-self:baseline;\"\r\n                        :space_efficiency=\"efficiencies.space\"\r\n                        :raw_space=\"raw_space\"\r\n                        @update-efficiencies=\"updateEfficiencies\"\r\n                    ></mek-space-efficiency>\r\n                </div>\r\n                <div class=\"mek-inline-flex-row\">           \r\n                    <mek-beam-feature style=\"align-self:baseline;\"\r\n                            @update-feature=\"updateFeature\"\r\n                            :feature-array=\"feature_array\"\r\n                            :burst-value=\"selected_burst_value.burst_value\"\r\n                        ></mek-beam-feature>\r\n                </div>\r\n            </div>\r\n            <div class=\"mek-inline-flex-row\">\r\n                <mek-component-stats :cols=\"4\" :rows=\"4\">\r\n                    <div slot=\"col1-row1\">Kills: {{selected_damage.damage}} K</div>\r\n                    <div slot=\"col1-row2\">Damage Capacity: {{damage_capacity}} K</div>\r\n                    <div slot=\"col1-row3\" v-if=\"selected_shots.shots==0\">Shutdown: {{selected_damage.damage}} turns</div>\r\n                    <div slot=\"col1-row3\">Final Range: {{selected_damage.range * selected_range_mod.range_mod}}</div>\r\n\r\n                    <div slot=\"col2-row1\">Feature(s):<div style=\"max-width:150px;margin-left:10px;\">{{feature_list}}</div></div>\r\n\r\n                    <div slot=\"col3-row1\">Base Space: {{round(raw_space,2)}}</div>\r\n                    <div slot=\"col3-row2\">Space: {{space_cost}}</div>\r\n                    <div slot=\"col3-row3\">Weight: {{round(weight,2)}} tons</div>\r\n                    <div slot=\"col3-row4\" v-if=\"mag_fed\">E-Mag: +1CP, +1SP</div>\r\n\r\n                    <div slot=\"col4-row1\">Base Cost: {{selected_damage.cost}}</div>\r\n                    <div slot=\"col4-row2\">Multiplier: x{{round(cost_multiplier,2)}}</div>\r\n                    <div slot=\"col4-row3\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n                </mek-component-stats>\r\n                <mek-save-reset-component @save-reset-component=\"componentSaveReset\"></mek-save-reset-component>\r\n            </div>\r\n        </span>\r\n</template>\r\n\r\n<script>\r\nimport utility_mixin from \"../../mixins/utility_mixin\";\r\nimport component_computed_mixin from \"../../mixins/component_computed_mixin\";\r\nimport component_methods_mixin from \"../../mixins/component_methods_mixin\";\r\n\r\nimport(/* webpackChunkName: \"mek_beam-shots\" */\"./subcomponents/mek_beam-shots.vue\")\r\n    .then(module=>console.log(module));\r\n\r\n\r\nexport default\r\n{\r\n    name:\"mek_beam\",\r\n    props:[],\r\n    mixins:[utility_mixin, component_computed_mixin, component_methods_mixin],\r\n    components:\r\n    {\r\n        \"mek-beam-damage\":()=>import(/* webpackChunkName: \"mek_beam-damage\" */\"./subcomponents/mek_beam-damage.vue\"),\r\n        \"mek-beam-accuracy\":()=>import(/* webpackChunkName: \"mek_beam-accuracy\" */\"./subcomponents/mek_beam-accuracy.vue\"),\r\n        \"mek-beam-burst-value\":()=>import(/* webpackChunkName: \"mek_beam-burst-value\" */\"./subcomponents/mek_beam-burst-value.vue\"),\r\n        \"mek-beam-range-mod\":()=>import(/* webpackChunkName: \"mek_beam-range-mod\" */\"./subcomponents/mek_beam-range-mod.vue\"),\r\n        //\"mek-beam-shots\":()=>import(/* webpackChunkName: \"mek_beam-shots\" */\"./subcomponents/mek_beam-shots.vue\"),\r\n        \"mek-beam-warm-up-time\":()=>import(/* webpackChunkName: \"mek_beam-warm-up-time\" */\"./subcomponents/mek_beam-warm-up-time.vue\"),\r\n        \"mek-beam-wide-angle\":()=>import(/* webpackChunkName: \"mek_beam-wide-angle\" */\"./subcomponents/mek_beam-wide-angle.vue\"),\r\n        \"mek-beam-feature\":()=>import(/* webpackChunkName: \"mek_beam-feature\" */\"./subcomponents/mek_beam-feature.vue\"),\r\n\r\n        \"mek-space-efficiency\":()=>import(/* webpackChunkName: \"mek-space-efficiency\" */\"../universal/mek-space-efficiency.vue\"),\r\n        \"mek-component-name\":()=>import(/* webpackChunkName: \"mek-component-name\" */\"../universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>import(/* webpackChunkName: \"mek-save-reset-component\" */\"../universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>import(/* webpackChunkName: \"mek-component-stats\" */\"../universal/mek_component-stats.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.mounted=false;\r\n\r\n        obj.uuid=null;\r\n        obj.component_name=null;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"beam\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.damage_capacity=1;//varies by equipment\r\n\r\n        obj.selected_damage={damage:1,cost:1.5,range:4};\r\n        obj.selected_burst_value={burst_value:1,cost:1};\r\n        obj.selected_range_mod={range_mod:1,cost:1,range:4};\r\n        obj.selected_accuracy={accuracy:1,cost:1};\r\n        obj.selected_shots={shots:\"__INFINITY__\",cost:1};\r\n        obj.selected_warm_up_time={time:0,cost:1};\r\n        obj.selected_wide_angle={angle:\"__NIL__\",cost:1};\r\n        \r\n        obj.feature_array=[];\r\n\r\n        obj.efficiencies={};\r\n        obj.efficiencies.space={};\r\n        obj.efficiencies.space.cost=0;\r\n        obj.efficiencies.space.modifier=0;\r\n\r\n        obj.cost_multipliers={};\r\n        obj.cost_multipliers.accuracy=1;\r\n        obj.cost_multipliers.feature=1;\r\n        obj.cost_multipliers.shots=1;\r\n        obj.cost_multipliers.wide_angle=1;\r\n        obj.cost_multipliers.warm_up_time=1;\r\n        obj.cost_multipliers.burst_value=1;\r\n\r\n        obj.forceTrue=true;\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        updateComponentName(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        updateEfficiencies(_data)\r\n        {\r\n            this.$set(this.efficiencies,\"space\",_data);\r\n            this.component_changed=true;\r\n        },\r\n        updateDamage(_damage)\r\n        {\r\n            this.$set(this,\"selected_damage\",_damage);\r\n            this.component_changed=true;\r\n            this.damage_capacity=_damage.damage;\r\n        },\r\n        updateAccuracy(_accuracy)\r\n        {\r\n            this.$set(this,\"selected_accuracy\",_accuracy);\r\n            this.cost_multipliers.accuracy=_accuracy.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateBurstValue(_burst_value)\r\n        {\r\n            this.$set(this,\"selected_burst_value\",_burst_value);\r\n            this.cost_multipliers.burst_value=_burst_value.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateRangeMod(_range_mod)\r\n        {\r\n            this.$set(this,\"selected_range_mod\",_range_mod);\r\n            this.cost_multipliers.range_mod=_range_mod.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateShots(_shots)\r\n        {\r\n            this.$set(this,\"selected_shots\",_shots);\r\n            this.cost_multipliers.shots=_shots.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateWarmUpTime(_warm_up_time)\r\n        {\r\n            this.$set(this,\"selected_warm_up_time\",_warm_up_time);\r\n            this.cost_multipliers.warm_up_time=_warm_up_time.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateWideAngle(_wide_angle)\r\n        {\r\n            this.$set(this,\"selected_wide_angle\",_wide_angle);\r\n            this.cost_multipliers.wide_angle=_wide_angle.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateFeature(_featureArray)\r\n        {\r\n            this.$set(this,\"feature_array\",_featureArray);\r\n            this.cost_multipliers.feature=this.feature_array.reduce((_multi,_val)=>{return _multi*=_val.cost},1);\r\n            this.projectile_name;\r\n            this.damage_capacity=this.fragile ? 1 : this.selected_damage.damage;\r\n        },\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"clear\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                    }\r\n                    break;\r\n                case \"clear\":\r\n                    this.uuid=null;\r\n                    this.efficiencies.space.modifier=0;\r\n                    this.component_name=null;\r\n                    this.$set(this,\"feature_array\",[]);\r\n                    this.$set(this,\"selected_damage\",{damage:1,cost:1.5,range:4});\r\n                    this.$set(this,\"selected_burst_value\",{burst_value:1,cost:1});\r\n                    this.$set(this,\"selected_range_mod\",{range_mod:1,cost:1,range:4});\r\n                    this.$set(this,\"selected_accuracy\",{accuracy:1,cost:1});\r\n                    this.$set(this,\"selected_shots\",{shots:\"__INFINITY__\",cost:1});\r\n                    this.$set(this,\"selected_warm_up_time\",{time:0,cost:1});\r\n                    this.$set(this,\"selected_wide_angle\",{angle:\"__NIL__\",cost:1});\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        },\r\n        output_data()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"beam\";//specific equipment type\r\n            return_data.component_name=this.component_name===null?this.beam_name:this.component_name;\r\n\r\n            return_data.cost_multipliers=JSON.parse(JSON.stringify(this.cost_multipliers));\r\n            return_data.efficiencies=JSON.parse(JSON.stringify(this.efficiencies));\r\n\r\n            return_data.selected_damage=JSON.parse(JSON.stringify(this.selected_damage));\r\n            return_data.selected_burst_value=JSON.parse(JSON.stringify(this.selected_burst_value));\r\n            //return_data.selected_burst_value.burst_value=this.selected_burst_value.burst_value===Infinity?\"Infinity\":this.selected_burst_value.burst_value;\r\n            return_data.selected_range_mod=JSON.parse(JSON.stringify(this.selected_range_mod));\r\n            return_data.selected_accuracy=JSON.parse(JSON.stringify(this.selected_accuracy));\r\n            return_data.selected_shots=JSON.parse(JSON.stringify(this.selected_shots));\r\n            return_data.selected_warm_up_time=JSON.parse(JSON.stringify(this.selected_warm_up_time));\r\n            return_data.selected_wide_angle=JSON.parse(JSON.stringify(this.selected_wide_angle));\r\n            return_data.feature_array=JSON.parse(JSON.stringify(this.feature_array));\r\n\r\n            return_data.cost=this.total_cost;\r\n            return_data.cost_multiplier=this.cost_multiplier;\r\n            return_data.weight=this.weight;\r\n            return_data.final_damage=this.final_damage;\r\n            return_data.damage_capacity=this.damage_capacity;\r\n\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return return_data;\r\n        },\r\n        ingest_data(_data_object)\r\n        {\r\n            let alertMessage=\"Beam is not valid, resetting.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(this.component_name==this.beam_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n        },\r\n    },\r\n    computed:\r\n    {\r\n        raw_space()\r\n        {\r\n            //core cost prop\r\n            return this.selected_damage.cost * this.cost_multiplier;\r\n        },\r\n        cost:function()\r\n        {\r\n            let subtotal_cost=this.selected_damage.cost * this.cost_multiplier;\r\n            subtotal_cost += this.efficiencies.space.cost;\r\n            subtotal_cost += this.mag_fed?1:0;\r\n\r\n            return this.round(subtotal_cost,2);\r\n        },\r\n        beam_name()\r\n        {\r\n            let isInfiniteBurst=this.selected_burst_value.burst_value==\"__INFINITY__\";\r\n            let isBurst=this.selected_burst_value.burst_value!=1 && !isInfiniteBurst;\r\n            let beam_name=  isBurst?\"Burst-\"+this.selected_burst_value.burst_value+\" \":\r\n                            isInfiniteBurst?\"Infinite-Burst \":\r\n                            \"\";\r\n            beam_name+=this.selected_wide_angle.angle!=\"__NIL__\"?\"Wide-Angle \":\"\";\r\n\r\n            let isHydro=false;\r\n            let isMegaBeam=false;\r\n            beam_name=this.feature_array.reduce((_name,_val)=>\r\n            {\r\n                switch(_val.feature.toLowerCase())\r\n                {\r\n                    case \"hydro\":\r\n                        isHydro=true;\r\n                        return _name;\r\n                    case \"mega-beam\":\r\n                        isMegaBeam=true;\r\n                        return _name;\r\n                }\r\n                return _name+_val.feature+\" \";\r\n            },beam_name);\r\n\r\n            beam_name+= isHydro?\" Hydro\":\r\n                        isMegaBeam?\" Mega-Beam\":\r\n                        \" Beam\";\r\n            beam_name=beam_name.trim();\r\n            beam_name=beam_name.replace(/\\s+/g,\" \");\r\n\r\n            return beam_name; \r\n        },\r\n        mag_fed()\r\n        {\r\n            return this.feature_array.some(function(_val)\r\n            {\r\n                if(_val.feature.toLowerCase()==\"mag-fed\")\r\n                {\r\n                    return true;\r\n                }\r\n            });\r\n        },\r\n        show_warm_up_time()\r\n        {\r\n            return !this.mag_fed && this.selected_shots.shots==\"__INFINITY__\";\r\n        },\r\n        anti_missile()\r\n        {\r\n            return this.feature_array.some(function(_val)\r\n            {\r\n                if(_val.feature.toLowerCase()==\"anti-missile\")\r\n                {\r\n                    return true;\r\n                }\r\n            });\r\n        },\r\n        fragile()\r\n        {\r\n            return this.feature_array.some(function(_val)\r\n            {\r\n                if(_val.feature.toLowerCase()==\"fragile\")\r\n                {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    },\r\n    mounted()\r\n    {\r\n        this.mounted=true;\r\n    }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_beam-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_beam-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_beam-main.vue?vue&type=template&id=ecc03524&\"\nimport script from \"./mek_beam-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_beam-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
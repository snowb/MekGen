{"version":3,"sources":["webpack:///./src/store/modules/validators/mek_melee_validator.js","webpack:///./node_modules/core-js/library/modules/_object-to-array.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/entries.js","webpack:///./node_modules/core-js/library/modules/es7.object.entries.js","webpack:///./node_modules/core-js/library/fn/object/entries.js"],"names":["loopValidators","updateMultipliers","round","validators","__webpack_require__","e","then","bind","_module","accuracy","cleaned_feature","damage","feature","entangle","space_efficiency","validate_efficiency","validateComponent","_component","validatedData","loopAlerts","cleanedComponent","updateList","alerts","componentsToValidate","validator","pkey","component_prop","_loopValidators","concat","cost_multipliers","data","cost_multiplier","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_entries__WEBPACK_IMPORTED_MODULE_0___default","reduce","_multi","_val","total_cost","selected_damage","cost","efficiencies","space","damage_capacity","weight","isEntangle","feature_array","some","base_damage","range_mod","damage_mod","cleanedEntangle","final_damage","undefined","getKeys","toIObject","isEnum","f","module","exports","isEntries","it","key","O","keys","length","i","result","call","push","$export","$entries","S","entries","Object"],"mappings":"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","file":"js/mek_melee_validator-legacy.f8625886.js","sourcesContent":["let validators={};\r\n\r\nimport(/* webpackChunkName: \"mek_melee-accuracy-data-module\" */\"@/data_table_modules/mek_melee/mek_melee-accuracy-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.accuracy=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_melee-damage-data-module\" */\"@/data_table_modules/mek_melee/mek_melee-damage-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.damage=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_melee-feature-data-module\" */\"@/data_table_modules/mek_melee/mek_melee-feature-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.feature=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_melee-entangle-range-data-module\" */\"@/data_table_modules/mek_melee/mek_melee-entangle-range-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.entangle=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_space-efficiency-data-module\" */\"@/data_table_modules/universal/mek_space-efficiency-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.space_efficiency=_module.validate_efficiency;\r\n});\r\n\r\nlet loopValidators, updateMultipliers, round;\r\nimport(/* webpackChunkName: \"validator_functions\" */\"./validator_functions\")\r\n.then((_module)=>\r\n{\r\n    ({loopValidators, updateMultipliers, round} = _module);\r\n});\r\n\r\nlet validateComponent=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let validatedData;\r\n    let updateList=[\"selected_accuracy\",\"feature_array\"];\r\n    let loopAlerts;\r\n    let alerts=[];\r\n    //loop thru independent validations\r\n    let componentsToValidate=\r\n    [\r\n        {validator:validators.damage,pkey:\"damage\",component_prop:\"selected_damage\"},\r\n        {validator:validators.accuracy,pkey:\"accuracy\",component_prop:'selected_accuracy'},\r\n        {validator:validators.feature,pkey:\"feature\",component_prop:'feature_array'},\r\n    ];\r\n    ({cleanedComponent, loopAlerts} = loopValidators(componentsToValidate, cleanedComponent));\r\n    alerts=alerts.concat(loopAlerts)\r\n\r\n    //update cost_multipliers for components needing update\r\n    validatedData=updateMultipliers(updateList,cleanedComponent,\"Mek-Melee\");\r\n    cleanedComponent.cost_multipliers=validatedData.data;\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    //validate space efficiency\r\n    let cost_multiplier=Object.entries(cleanedComponent.cost_multipliers).reduce((_multi, _val)=>\r\n    {//calc new cost_mulitplier\r\n        return _multi*_val[1];\r\n    },1);\r\n    cleanedComponent.cost_multiplier=round(cost_multiplier,2);\r\n\r\n    let total_cost=cleanedComponent.selected_damage.cost * cleanedComponent.cost_multiplier;\r\n    validatedData=validators.space_efficiency(cleanedComponent.efficiencies.space, total_cost, \"Mek-Melee\");\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.efficiencies.space=validatedData.data;\r\n    //update static values\r\n    cleanedComponent.damage_capacity=cleanedComponent.selected_damage.damage;\r\n    cleanedComponent.weight=cleanedComponent.damage_capacity/2;\r\n\r\n    //check and update entangle-range trade values\r\n    let isEntangle=cleanedComponent.feature_array.some((_val)=>\r\n    {\r\n        return _val.feature==\"Entangle\";\r\n    });\r\n    if(isEntangle)\r\n    {\r\n        let base_damage=cleanedComponent.selected_damage.damage;\r\n        let range_mod=cleanedComponent.entangle.range_mod;\r\n        let damage_mod=cleanedComponent.entangle.damage_mod;\r\n        let cleanedEntangle=validators.entangle(base_damage, range_mod, damage_mod);\r\n        cleanedComponent.entangle={range_mod:cleanedEntangle.range_mod, damage_mod:cleanedEntangle.damage_mod};\r\n        cleanedComponent.final_damage=cleanedEntangle.damage;\r\n        alerts=alerts.concat(cleanedEntangle.alerts);\r\n    }\r\n    else if(cleanedComponent.entangle!==undefined)\r\n    {\r\n        cleanedComponent.entangle={range_mod:0,damage_mod:0};\r\n        cleanedComponent.final_damage=cleanedComponent.selected_damage.damage;\r\n    }\r\n\r\n    return {data:cleanedComponent, alerts:alerts};\r\n};\r\n\r\nexport {validateComponent};","var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n","module.exports = require(\"core-js/library/fn/object/entries\");","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.string.includes.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/core-js/modules/es7.array.includes.js","webpack:///./src/mixins/component_computed_mixin.js","webpack:///./src/mixins/utility_mixin.js","webpack:///./src/design_components/mek_servo/mek_servo-main.vue?efac","webpack:///src/design_components/mek_servo/mek_servo-main.vue","webpack:///./src/design_components/mek_servo/mek_servo-main.vue?5fed","webpack:///./src/design_components/mek_servo/mek_servo-main.vue","webpack:///./node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/core-js/modules/_string-context.js","webpack:///./src/mixins/component_methods_mixin.js"],"names":["$export","__webpack_require__","context","INCLUDES","P","F","includes","searchString","this","indexOf","arguments","length","undefined","MATCH","module","exports","KEY","re","e","f","$includes","el","__webpack_exports__","computed","space_cost","round","raw_space","efficiencies","space","modifier","cost_multiplier","multi","cost_multipliers","Object","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__","submulti","weight","damage_capacity","feature_list","feature_array","reduce","_string","_val","_index","feature","newComponent","selectedComponent","JSON","parse","stringify","$store","getters","uuid","component_category","component_type","ingest_data","methods","_number","_decimals","Math","multiplier","pow","floor","ceiling","decimalPad","toPrecision","create_uuid","replace","c","crypto","getRandomValues","Uint8Array","toString","create_short_uuid","invisible_pad","_array_of_items","longestString","forEach","_element","isNumeric","_input","isNaN","parseFloat","isFinite","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","width","attrs","new-component","component-name","component_name","servo_name","component-changed","component_changed","on","update-component-name","updateComponentName","align-self","servo-type","selected_servo_type","update-servo-type","updateServoType","alert-generated","handleAlert","base_kills","selected_servo_class","kills","kills_modifier","kills_space_trade","space_modifier","base_space","update-extra-space","updateExtraSpace","type","servo-class","update-servo-class","updateServoClass","armor","selected_armor","max-armor","code","update-armor","updateArmor","cost","armor-type","selected_armor_type","update-armor-type","updateArmorType","_e","absorption","selected_absorption","update-absorption","updateAbsorption","cols","rows","slot","_v","_s","total_kills","stopping_power","final_stopping_power","padding-left","damage_coefficient","is_arm","is_leg","damage_bonus","throw_range","available_space","base_cost","armor_cost_multiplier","font-weight","active-buttons","save-reset-component","componentSaveReset","staticRenderFns","mek_servo_mainvue_type_script_lang_js_","name","props","mixins","utility_mixin","component_methods_mixin","component_computed_mixin","components","mek-servo-type","then","bind","mek-servo-class","mek-servo-kills-space-trade","mek-component-name","mek-save-reset-component","mek-component-stats","mek-armor","mek-armor-type","mek-armor-ram","data","obj","custom_component_name","original_component","id","armor_penalty","hasAlert","_name","_servo_type","$set","_servo_class","_armor","_armor_type","_absorption","_kills_space_trade","_data_object","_this","alertMessage","universal_ingest_data","$nextTick","output_data","_this2","return_data","_action","action","commit","armor_type","_alert_status","servo_class","reinforced","absorbing","additional","trim","servo_kills","kills_space_trade_sp_loss","toLowerCase","mek_servo_mek_servo_mainvue_type_script_lang_js_","component","componentNormalizer","isObject","cof","it","isRegExp","defined","that","NAME","TypeError","String","_alertMessage","data_object","_property","keys","_computedWatchers","Array","isArray","_sub_property","$forceUpdate","addAlert","_alert_string","alerts","push","publishAlerts"],"mappings":"kHAEA,IAAAA,EAAcC,EAAQ,QACtBC,EAAcD,EAAQ,QACtBE,EAAA,WAEAH,IAAAI,EAAAJ,EAAAK,EAAgCJ,EAAQ,OAARA,CAA4BE,GAAA,UAC5DG,SAAA,SAAAC,GACA,SAAAL,EAAAM,KAAAD,EAAAJ,GACAM,QAAAF,EAAAG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,4BCTA,IAAAC,EAAYZ,EAAQ,OAARA,CAAgB,SAC5Ba,EAAAC,QAAA,SAAAC,GACA,IAAAC,EAAA,IACA,IACA,MAAAD,GAAAC,GACG,MAAAC,GACH,IAEA,OADAD,EAAAJ,IAAA,GACA,MAAAG,GAAAC,GACK,MAAAE,KACF,6CCRH,IAAAnB,EAAcC,EAAQ,QACtBmB,EAAgBnB,EAAQ,OAARA,EAA2B,GAE3CD,IAAAI,EAAA,SACAE,SAAA,SAAAe,GACA,OAAAD,EAAAZ,KAAAa,EAAAX,UAAAC,OAAA,EAAAD,UAAA,QAAAE,MAIAX,EAAQ,OAARA,CAA+B,iECV/BqB,EAAA,MACIC,SACA,CACIC,WADJ,WAGQ,OAAOhB,KAAKiB,MAAMjB,KAAKkB,UAAYlB,KAAKmB,aAAaC,MAAMC,SAAS,IAExEC,gBALJ,WAOQ,IAAIA,EAAgB,EACpB,IAAI,IAAIC,KAASvB,KAAKwB,iBAElB,GAAyC,WAAtCC,OAAAC,EAAA,KAAAD,CAAOzB,KAAKwB,iBAAiBD,IAE5B,IAAI,IAAII,KAAY3B,KAAKwB,iBAAiBD,GAEtCD,GAAiBtB,KAAKwB,iBAAiBD,GAAOI,QAKlDL,GAAiBtB,KAAKwB,iBAAiBD,GAG/C,OAAOvB,KAAKiB,MAAMK,EAAgB,IAEtCM,OAxBJ,WA0BQ,OAAO5B,KAAKiB,MAAOjB,KAAK6B,gBAAkB,EAAG,IAEjDC,aA5BJ,WA8BQ,MAA+B,qBAArB9B,KAAK+B,cAEJ,GAEJ/B,KAAK+B,cAAcC,OAAO,SAASC,EAASC,EAAMC,GAIrD,OAFAF,GAASE,EAAO,EAAI,KAAO,GAC3BF,GAASC,EAAKE,QACPH,GACT,KAENI,aAzCJ,WA2CQ,IAAIC,EAAkBC,KAAKC,MAAMD,KAAKE,UAAUzC,KAAK0C,OAAOC,QAAQL,oBAEpE,MAA8B,qBAApBA,GAAuD,OAApBA,IAEtCA,EAAkBM,OAAO5C,KAAK4C,MAC1BN,EAAkBO,oBAAoB7C,KAAK6C,oBAC3CP,EAAkBQ,gBAAgB9C,KAAK8C,gBAE1C9C,KAAK+C,YAAYT,IAEd,mFCvDvBxB,EAAA,MACIkC,QACA,CACI/B,MAAM,SAASgC,EAASC,GAEpB,GAAsB,qBAAZA,GAAuC,IAAXA,EAElC,OAAOC,KAAKlC,OAAOgC,GAEvB,IAAIG,EAAUD,KAAAE,IAAC,IAAOH,GACtB,OAAOC,KAAKlC,OAAOgC,EAAUG,GAAYA,GAE7CE,MAAM,SAASL,GAEX,OAAOE,KAAKG,OAAOL,IAEvBM,QAAQ,SAASN,GAEb,OAAOE,KAAKI,SAASN,IAEzBO,WAlBJ,SAkBeP,GAEP,OAAQA,EAAQ,IAAI,EAAIA,EAAQQ,YAAY,GAAKR,GAErDS,YAAY,WAER,OAAQ,CAAC,MAAM,KAAK,KAAK,KAAK,MAAMC,QAAQ,SAAU,SAAAC,GAAC,OAClDA,EAAIC,OAAOC,gBAAgB,IAAIC,WAAW,IAAI,GAAK,IAAMH,EAAI,GAAGI,SAAS,OAGlFC,kBAAkB,WAEd,OAAQ,CAAC,MAAM,KAAKN,QAAQ,SAAU,SAAAC,GAAC,OAClCA,EAAIC,OAAOC,gBAAgB,IAAIC,WAAW,IAAI,GAAK,IAAMH,EAAI,GAAGI,SAAS,OAGlFE,cAAc,SAASC,GAEnB,IAAIC,EAAc,GAQlB,OAPAD,EAAgBE,QAAQ,SAASC,GAE1BA,EAASnE,OAASiE,EAAcjE,SAE/BiE,EAAcE,IAEpB,GACKF,EAAc,MAEzBG,UAAU,SAAmBC,GAEzB,MAAuB,qBAATA,IAAyBC,MAAMC,WAAWF,KAAYG,SAASH,kDCnDzF,IAAAI,EAAA,WAA0B,IAAAC,EAAA7E,KAAa8E,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,QAAkBE,YAAA,sBAAAC,YAAA,CAA+CC,MAAA,SAAgB,CAAAJ,EAAA,sBAA2BK,MAAA,CAAOC,gBAAAT,EAAAxC,aAAAkD,iBAAAV,EAAAW,gBAAAX,EAAAY,WAAAC,oBAAAb,EAAAc,mBAA+HC,GAAA,CAAKC,wBAAAhB,EAAAiB,uBAAiDd,EAAA,QAAaE,YAAA,uBAAkC,CAAAF,EAAA,QAAaE,YAAA,uBAAkC,CAAAF,EAAA,kBAAuBG,YAAA,CAAaY,aAAA,cAA0BV,MAAA,CAAQW,aAAAnB,EAAAoB,qBAAqCL,GAAA,CAAKM,oBAAArB,EAAAsB,gBAAAC,kBAAAvB,EAAAwB,eAA2ErB,EAAA,+BAAoCG,YAAA,CAAaY,aAAA,YAAwBV,MAAA,CAAQiB,WAAAzB,EAAA0B,qBAAAC,MAAAC,eAAA5B,EAAA6B,kBAAAD,eAAAE,eAAA9B,EAAA6B,kBAAAC,eAAAC,WAAA/B,EAAA0B,qBAAAnF,OAAoMwE,GAAA,CAAKiB,qBAAAhC,EAAAiC,iBAAAV,kBAAAvB,EAAAwB,gBAA6E,GAAArB,EAAA,mBAA4BK,MAAA,CAAOW,aAAAnB,EAAAoB,oBAAAc,KAAAC,cAAAnC,EAAA0B,sBAAiFX,GAAA,CAAKqB,qBAAApC,EAAAqC,iBAAAd,kBAAAvB,EAAAwB,eAA6ErB,EAAA,aAAkBK,MAAA,CAAO8B,MAAAtC,EAAAuC,eAAAC,YAAAxC,EAAA0B,qBAAAe,KAAA,GAAuE1B,GAAA,CAAK2B,eAAA1C,EAAA2C,YAAApB,kBAAAvB,EAAAwB,eAAkErB,EAAA,QAAaE,YAAA,uBAAkC,IAAAL,EAAAuC,eAAAK,KAAAzC,EAAA,kBAAoDK,MAAA,CAAOqC,aAAA7C,EAAA8C,qBAAqC/B,GAAA,CAAKgC,oBAAA/C,EAAAgD,gBAAAzB,kBAAAvB,EAAAwB,eAA2ExB,EAAAiD,KAAA,GAAAjD,EAAAuC,eAAAK,KAAAzC,EAAA,iBAA4DK,MAAA,CAAO0C,WAAAlD,EAAAmD,qBAAqCpC,GAAA,CAAKqC,oBAAApD,EAAAqD,iBAAA9B,kBAAAvB,EAAAwB,eAA4ExB,EAAAiD,MAAA,OAAA9C,EAAA,OAA6BE,YAAA,uBAAkC,CAAAF,EAAA,uBAA4BK,MAAA,CAAO8C,KAAA,EAAAC,KAAA,IAAmB,CAAApD,EAAA,OAAYK,MAAA,CAAOgD,KAAA,aAAmBA,KAAA,aAAkB,CAAAxD,EAAAyD,GAAA,eAAAzD,EAAA0D,GAAA1D,EAAA0B,qBAAAC,UAAAxB,EAAA,OAA4EK,MAAA,CAAOgD,KAAA,aAAmBA,KAAA,aAAkB,CAAAxD,EAAAyD,GAAA,gBAAAzD,EAAA0D,GAAA1D,EAAA2D,gBAAA,GAAA3D,EAAAuC,eAAAK,KAAAzC,EAAA,OAA2FK,MAAA,CAAOgD,KAAA,aAAmBA,KAAA,aAAkB,CAAAxD,EAAAyD,GAAA,8BAAAzD,EAAA0D,GAAA1D,EAAA5D,MAAA4D,EAAAuC,eAAAqB,eAAA,0BAAAzD,EAAA,MAAAH,EAAAyD,GAAA,yBAAAzD,EAAA0D,GAAA1D,EAAA5D,MAAA4D,EAAA6D,qBAAA,wBAAA7D,EAAAiD,KAAA,GAAAjD,EAAAuC,eAAAK,KAAAzC,EAAA,OAA+QK,MAAA,CAAOgD,KAAA,aAAmBA,KAAA,aAAkB,CAAAxD,EAAAyD,GAAA,eAAAzD,EAAA0D,GAAA1D,EAAA8C,oBAAAZ,SAAAlC,EAAAiD,KAAA,GAAAjD,EAAAuC,eAAAK,KAAAzC,EAAA,OAAgHG,YAAA,CAAawD,eAAA,QAAsBtD,MAAA,CAAQgD,KAAA,aAAmBA,KAAA,aAAkB,CAAAxD,EAAAyD,GAAA,uBAAAzD,EAAA0D,GAAA1D,EAAA8C,oBAAAiB,uBAAA/D,EAAAiD,KAAA,GAAAjD,EAAAmD,oBAAAP,KAAAzC,EAAA,OAA2IK,MAAA,CAAOgD,KAAA,aAAmBA,KAAA,aAAkB,CAAAxD,EAAAyD,GAAA,eAAAzD,EAAA0D,GAAA,IAAA1D,EAAAmD,oBAAAD,YAAA,OAAAlD,EAAAiD,KAAAjD,EAAAgE,OAAAhE,EAAAiE,OAAA9D,EAAA,OAA2HK,MAAA,CAAOgD,KAAA,aAAmBA,KAAA,aAAkB,CAAAxD,EAAAyD,GAAA,iBAAAzD,EAAA0D,GAAA1D,EAAA0B,qBAAAwC,iBAAAlE,EAAAiD,KAAAjD,EAAA,OAAAG,EAAA,OAA2GK,MAAA,CAAOgD,KAAA,aAAmBA,KAAA,aAAkB,CAAAxD,EAAAyD,GAAA,gBAAAzD,EAAA0D,GAAA1D,EAAA0B,qBAAAyC,gBAAAnE,EAAAiD,KAAA9C,EAAA,OAA4FK,MAAA,CAAOgD,KAAA,aAAmBA,KAAA,aAAkB,CAAAxD,EAAAyD,GAAA,eAAAzD,EAAA0D,GAAA1D,EAAA0B,qBAAAnF,UAAA4D,EAAA,OAA4EK,MAAA,CAAOgD,KAAA,aAAmBA,KAAA,aAAkB,CAAAxD,EAAAyD,GAAA,oBAAAzD,EAAA0D,GAAA1D,EAAAoE,oBAAAjE,EAAA,OAAsEK,MAAA,CAAOgD,KAAA,aAAmBA,KAAA,aAAkB,CAAAxD,EAAAyD,GAAA,WAAAzD,EAAA0D,GAAA1D,EAAAjD,QAAA,WAAAoD,EAAA,OAA4DK,MAAA,CAAOgD,KAAA,aAAmBA,KAAA,aAAkB,CAAAxD,EAAAyD,GAAA,cAAAzD,EAAA0D,GAAA1D,EAAAqE,cAAAlE,EAAA,OAA0DK,MAAA,CAAOgD,KAAA,aAAmBA,KAAA,aAAkB,CAAAxD,EAAAyD,GAAA,gBAAAzD,EAAA0D,GAAA1D,EAAAsE,0BAAAnE,EAAA,OAAwEG,YAAA,CAAaiE,cAAA,QAAqB/D,MAAA,CAAQgD,KAAA,aAAmBA,KAAA,aAAkB,CAAAxD,EAAAyD,GAAA,eAAAzD,EAAA0D,GAAA1D,EAAA4C,WAAAzC,EAAA,4BAA6EK,MAAA,CAAOgE,iBAAA,kBAAkCzD,GAAA,CAAK0D,uBAAAzE,EAAA0E,uBAA+C,QACniIC,EAAA,6DCoEAC,EAAA,CACAC,KAAA,YACAC,MAAA,GACAC,OACA,CACAC,EAAA,KACAC,EAAA,KACAC,EAAA,MAEAC,WACA,CACAC,iBAAA,kBAAAxK,EAAAiB,EAAA,kBAAAwJ,KAAAzK,EAAA0K,KAAA,eACAC,kBAAA,kBAAA3K,EAAAiB,EAAA,mBAAAwJ,KAAAzK,EAAA0K,KAAA,eACAE,8BAAA,kBAAA5K,EAAAiB,EAAA,+BAAAwJ,KAAAzK,EAAA0K,KAAA,eAEAG,qBAAA,kBAAA7K,EAAAiB,EAAA,sBAAAwJ,KAAAzK,EAAA0K,KAAA,eACAI,2BAAA,kBAAA9K,EAAAiB,EAAA,4BAAAwJ,KAAAzK,EAAA0K,KAAA,eACAK,sBAAA,kBAAA/K,EAAAiB,EAAA,uBAAAwJ,KAAAzK,EAAA0K,KAAA,eAEAM,YAAA,kBAAAhL,EAAAiB,EAAA,aAAAwJ,KAAAzK,EAAA0K,KAAA,eACAO,iBAAA,kBAAAjL,EAAAiB,EAAA,kBAAAwJ,KAAAzK,EAAA0K,KAAA,eACAQ,gBAAA,kBAAAlL,EAAAiB,EAAA,iBAAAwJ,KAAAzK,EAAA0K,KAAA,gBAGAS,KAAA,WAEA,IAAAC,EAAA,CACAjI,KAAA,KACA4C,eAAA,KACAsF,uBAAA,EACAjI,mBAAA,YACAC,eAAA,QACAiI,mBAAA,KACApF,mBAAA,EAEAM,oBAAA,CAAAc,KAAA,SACAR,qBAAA,CAAAe,KAAA,EAAAoC,KAAA,aAAAtI,MAAA,EAAAqG,KAAA,EAAAjB,MAAA,EAAAwE,GAAA,MAEAxJ,iBAAA,GAEA4F,eAAA,CAAAsC,KAAA,OAAAjC,KAAA,EAAAgB,eAAA,EAAAnB,KAAA,IAkBA,OAjBAuD,EAAArJ,iBAAA2F,MAAA,GAEA0D,EAAAlD,oBAAA,CAAAZ,KAAA,WAAA6B,mBAAA,EAAAnB,KAAA,GACAoD,EAAArJ,iBAAA2F,MAAAQ,oBAAA,EAEAkD,EAAA7C,oBAAA,CAAAD,WAAA,EAAAN,KAAA,EAAAwD,cAAA,GACAJ,EAAArJ,iBAAA2F,MAAAa,oBAAA,EAEA6C,EAAAnE,kBAAA,GACAmE,EAAAnE,kBAAAC,eAAA,EACAkE,EAAAnE,kBAAAD,eAAA,EACAoE,EAAAnE,kBAAAtF,MAAA,EACAyJ,EAAAnE,kBAAAF,MAAA,EACAqE,EAAAnE,kBAAAe,KAAA,EAEAoD,EAAAK,UAAA,EAEAL,GAEA7H,QACA,CACA8C,oBADA,SACAqF,GAEAnL,KAAAwF,eAAA2F,EACAnL,KAAA8K,uBAAA,EACA9K,KAAA2F,mBAAA,GAEAQ,gBAPA,SAOAiF,GAEApL,KAAA8C,eAAAsI,EAAArE,KACA/G,KAAAqL,KAAArL,KAAA,sBAAAoL,GACApL,KAAA2F,mBAAA,GAEAuB,iBAbA,SAaAoE,GAEAtL,KAAAqL,KAAArL,KAAA,uBAAAsL,GACAtL,KAAA2F,mBAAA,GAEA6B,YAlBA,SAkBA+D,GAEAvL,KAAAqL,KAAArL,KAAA,iBAAAuL,GACAvL,KAAA2F,mBAAA,EACA,GAAA4F,EAAA9C,iBAEAzI,KAAAkI,iBAAA,CAAAH,WAAA,EAAAN,KAAA,EAAAwD,cAAA,IACAjL,KAAA6H,gBAAA,CAAAd,KAAA,WAAA6B,mBAAA,EAAAnB,KAAA,MAGAI,gBA5BA,SA4BA2D,GAEAxL,KAAAqL,KAAArL,KAAA,sBAAAuC,KAAAC,MAAAD,KAAAE,UAAA+I,KACAxL,KAAAwB,iBAAA2F,MAAAQ,oBAAA3H,KAAA2H,oBAAAF,KACAzH,KAAA2F,mBAAA,GAEAuC,iBAlCA,SAkCAuD,GAEAzL,KAAAqL,KAAArL,KAAA,sBAAAuC,KAAAC,MAAAD,KAAAE,UAAAgJ,KACAzL,KAAAwB,iBAAA2F,MAAAa,oBAAAhI,KAAAgI,oBAAAP,KACAzH,KAAA2F,mBAAA,GAEAmB,iBAxCA,SAwCA4E,GAEA1L,KAAA0G,kBAAAC,eAAA+E,EAAA/E,eACA3G,KAAA0G,kBAAAD,eAAAiF,EAAAjF,eACAzG,KAAA0G,kBAAAtF,MAAAsK,EAAAtK,MACApB,KAAA0G,kBAAAF,MAAAkF,EAAAlF,MACAxG,KAAA0G,kBAAAe,KAAAiE,EAAAjE,KACAzH,KAAA2F,mBAAA,GAEA5C,YAjDA,SAiDA4I,GACA,IAAAC,EAAA5L,KACA6L,EAAA,6CACA7L,KAAA8L,sBAAAH,EAAAE,GACA7L,KAAA8K,uBAEA9K,KAAAqL,KAAArL,KAAA,uBAEAA,KAAA+L,UAAA,WAAAH,EAAAjG,kBAAAiG,EAAAV,YAEAc,YA3DA,WA4DA,IAAAC,EAAAjM,KACAkM,EAAA,GAwBA,OAvBAlM,KAAA4C,KAAA,OAAA5C,KAAA4C,KAAA5C,KAAA0D,cAAA1D,KAAA4C,KACAsJ,EAAAtJ,KAAA5C,KAAA4C,KACAsJ,EAAArJ,mBAAA,YACAqJ,EAAApJ,eAAA,QACAoJ,EAAA1G,eAAA,OAAAxF,KAAAwF,eAAAxF,KAAAyF,WAAAzF,KAAAwF,eACA0G,EAAApB,sBAAA9K,KAAA8K,sBAEAoB,EAAAjG,oBAAAjG,KAAAiG,oBACAiG,EAAA3F,qBAAAvG,KAAAuG,qBACA2F,EAAA9E,eAAApH,KAAAoH,eACA8E,EAAAvE,oBAAA3H,KAAA2H,oBACAuE,EAAAlE,oBAAAhI,KAAAgI,oBACAkE,EAAA1K,iBAAAxB,KAAAwB,iBACA0K,EAAAxF,kBAAA1G,KAAA0G,kBAEAwF,EAAAzE,KAAAzH,KAAAyH,KACAyE,EAAA/C,sBAAAnJ,KAAAmJ,sBACA+C,EAAAtK,OAAA5B,KAAA4B,OACAsK,EAAA1D,YAAAxI,KAAAwI,YACA0D,EAAAjD,gBAAAjJ,KAAAiJ,gBAEAjJ,KAAA+L,UAAA,WAAAE,EAAAtG,mBAAA,IACA3F,KAAA+K,mBAAAxI,KAAAE,UAAAyJ,GACA3J,KAAAC,MAAAxC,KAAA+K,qBAEAxB,mBAAA,SAAA4C,GAEA,IAAAC,EAAA,SAAAD,GAAA,MAAAnM,KAAA+K,mBAAA,MAAAoB,EACA,OAAAC,GAEA,WACApM,KAAA0C,OAAA2J,OAAA,gBAAArM,KAAAgM,eACA,MACA,YACA,UAAAhM,KAAA+K,mBACA,CACA/K,KAAA+C,YAAAR,KAAAC,MAAAxC,KAAA+K,qBACA,MAGA,UACA/K,KAAA4C,KAAA,KACA5C,KAAAqL,KAAArL,KAAA,uBAAA+G,KAAA,UACA/G,KAAAqL,KAAArL,KAAA,wBAAAsH,KAAA,EAAAoC,KAAA,aAAAtI,MAAA,EAAAqG,KAAA,EAAAjB,MAAA,EAAAwE,GAAA,OACAhL,KAAAqL,KAAArL,KAAA,kBAAA0J,KAAA,OAAAjC,KAAA,EAAAgB,eAAA,EAAAnB,KAAA,IACAtH,KAAAqL,KAAArL,KAAA,uBAAA+G,KAAA,WAAA6B,mBAAA,EAAAnB,KAAA,IACAzH,KAAAwB,iBAAA2F,MAAAmF,WAAA,EACAtM,KAAAqL,KAAArL,KAAA,uBAAA+H,WAAA,EAAAN,KAAA,EAAAwD,cAAA,IACAjL,KAAAwB,iBAAA2F,MAAAY,WAAA,EACA/H,KAAAqL,KAAArL,KAAA,qBAAA2G,eAAA,EAAAF,eAAA,EAAAgB,KAAA,IACAzH,KAAAwF,eAAA,KACAxF,KAAA0C,OAAA2J,OAAA,sBACA,QAGAhG,YArHA,SAqHAkG,GAEAvM,KAAAkL,SAAAqB,IAGAxL,SACA,CACA0E,WADA,WAGA,IAAAsB,EAAA/G,KAAAiG,oBAAAc,KACAyF,EAAAxM,KAAAuG,qBAAAmD,KACA+C,EAAAzM,KAAA0G,kBAAAD,eAAA,oBACA6F,EAAAtM,KAAA2H,oBAAAZ,KACAI,EAAAnH,KAAAoH,eAAAK,KAAA,MAAAzH,KAAA2H,oBAAAF,KAAA,YACAzH,KAAAoH,eAAAK,KAAA,MAAAzH,KAAA2H,oBAAAF,KAAA,IAAA6E,EAAA,YACA,GACAI,EAAA1M,KAAAgI,oBAAAP,KAAA,mBACAkF,EAAA,IAAAF,GAAAzM,KAAAoH,eAAAK,KAAA,WACAiC,EAAA3C,EAAA,IAAAyF,EAAA,SAAAG,EAAAF,EAAAC,EAAAvF,EAGA,OAFAuC,IAAAkD,OACAlD,IAAA/F,QAAA,aACA+F,GAEAR,UAjBA,WAmBA,OAAAlJ,KAAAuG,qBAAAkB,KAAAzH,KAAAoH,eAAAK,KAAAzH,KAAA0G,kBAAAe,MAEAA,KArBA,WAuBA,IAAAA,EAAAzH,KAAAuG,qBAAAkB,KAAAzH,KAAAoH,eAAAK,KAAAzH,KAAAmJ,sBAAAnJ,KAAA0G,kBAAAe,KACA,OAAAzH,KAAAiB,MAAAwG,EAAA,IAGAwB,gBA3BA,WA6BA,OAAAjJ,KAAAuG,qBAAAnF,MAAApB,KAAA0G,kBAAAC,gBAEA9E,gBA/BA,WAiCA,IAAAgL,EAAA7M,KAAAuG,qBAAAC,MACAsG,EAAA9M,KAAA0G,kBAAAD,eACA,OAAAoG,EAAA7M,KAAA0I,qBAAAoE,GAEAtE,YArCA,WAuCA,OAAAxI,KAAAuG,qBAAAC,MAAAxG,KAAA0G,kBAAAD,gBAEA7E,OAzCA,WA2CA,OAAA5B,KAAAiB,MAAAjB,KAAA6B,gBAAA,MAEA6G,qBA7CA,WA+CA,OAAA1I,KAAAoH,eAAAqB,eAAAzI,KAAAoH,eAAAqB,eAAAzI,KAAAgI,oBAAAiD,eAEApC,OAjDA,WAmDA,aAAA7I,KAAAiG,oBAAAc,KAAAgG,eAEAjE,OArDA,WAuDA,aAAA9I,KAAAiG,oBAAAc,KAAAgG,eAEA5D,sBAzDA,WA2DA,IAAA7H,EAAA,EACA,QAAAC,KAAAvB,KAAAwB,iBAAA2F,MAEA7F,GAAAtB,KAAAwB,iBAAA2F,MAAA5F,GAEA,OAAAvB,KAAAiB,MAAAK,EAAA,MC7TuW0L,EAAA,cCOvWC,EAAgBxL,OAAAyL,EAAA,KAAAzL,CACduL,EACApI,EACA4E,GACF,EACA,KACA,KACA,MAIe1I,EAAA,WAAAmM,gCCjBf,IAAAE,EAAe1N,EAAQ,QACvB2N,EAAU3N,EAAQ,QAClBY,EAAYZ,EAAQ,OAARA,CAAgB,SAC5Ba,EAAAC,QAAA,SAAA8M,GACA,IAAAC,EACA,OAAAH,EAAAE,UAAAjN,KAAAkN,EAAAD,EAAAhN,MAAAiN,EAAA,UAAAF,EAAAC,2BCLA,IAAAC,EAAe7N,EAAQ,QACvB8N,EAAc9N,EAAQ,QAEtBa,EAAAC,QAAA,SAAAiN,EAAAzN,EAAA0N,GACA,GAAAH,EAAAvN,GAAA,MAAA2N,UAAA,UAAAD,EAAA,0BACA,OAAAE,OAAAJ,EAAAC,gGCLA1M,EAAA,MACIkC,QACA,CACI8I,sBADJ,SAC0BH,EAAaiC,GAE/B5N,KAAK+K,mBAAmBxI,KAAKE,UAAUkJ,GACvC,IAAIkC,EAAYtL,KAAKC,MAAMxC,KAAK+K,oBAQhC,IAAI,IAAI+C,KAPU,OAAfnC,IAEC3L,KAAKuJ,mBAAmB,SAExBvJ,KAAK0C,OAAO2J,OAAO,eAAeuB,IAGjBC,EAEjB,IAAGpM,OAAOsM,KAAK/N,KAAKgO,mBAAmBlO,SAASgO,GAIhD,GAAmC,WAAhCrM,OAAAC,EAAA,KAAAD,CAAOoM,EAAYC,KAA0BG,MAAMC,QAAQL,EAAYC,IAWlEG,MAAMC,QAAQL,EAAYC,IAE9B9N,KAAKqL,KAAKrL,KAAK8N,EAAUD,EAAYC,SAPrC,IAAI,IAAIK,IAJoB,WAAzB1M,OAAAC,EAAA,KAAAD,CAAOzB,KAAK8N,KAA2C,OAAlB9N,KAAK8N,IAEzC9N,KAAKqL,KAAKrL,KAAK8N,EAAU,IAEJD,EAAYC,GAEjC9N,KAAKqL,KAAKrL,KAAK8N,GAAW,CAACK,GAAeN,EAAYC,GAAWK,IAY7EnO,KAAKoO,gBAETtI,oBAxCJ,SAwCwBqF,GAEhBnL,KAAKwF,eAAe2F,EACpBnL,KAAK2F,mBAAkB,GAE3B0I,SA7CJ,SA6CaC,GAELtO,KAAKuO,OAAOC,KAAKF,IAErBG,cAjDJ,WAmDWzO,KAAKuO,OAAOpO,OAAO,GAElBH,KAAK0C,OAAO2J,OAAO,eAAerM,KAAKuO,QAE3CvO,KAAKqL,KAAKrL,KAAK,SAAS","file":"js/mek_servo-main-legacy.15964f00.js","sourcesContent":["// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","export default\r\n{\r\n    computed:\r\n    {\r\n        space_cost()\r\n        {\r\n            return this.round(this.raw_space - this.efficiencies.space.modifier,2);\r\n        },\r\n        cost_multiplier()\r\n        {\r\n            let cost_multiplier=1;\r\n            for(let multi in this.cost_multipliers)\r\n            {\r\n                if(typeof this.cost_multipliers[multi]===\"object\")\r\n                {\r\n                    for(let submulti in this.cost_multipliers[multi])\r\n                    {\r\n                        cost_multiplier*=this.cost_multipliers[multi][submulti];\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    cost_multiplier*=this.cost_multipliers[multi];\r\n                }\r\n            }\r\n            return this.round(cost_multiplier,2);\r\n        },\r\n        weight()\r\n        {\r\n            return this.round((this.damage_capacity / 2),2);\r\n        },\r\n        feature_list()\r\n        {\r\n            if(typeof this.feature_array===\"undefined\")\r\n            {\r\n                return \"\";\r\n            }\r\n            return this.feature_array.reduce(function(_string, _val, _index)\r\n            {\r\n                _string+=_index>0 ? \", \" : \"\";\r\n                _string+=_val.feature;\r\n                return _string;\r\n            },\"\");\r\n        },\r\n        newComponent()\r\n        {//responsible for ingesting data from the store\r\n            let selectedComponent=JSON.parse(JSON.stringify(this.$store.getters.selectedComponent));\r\n\r\n            if(typeof selectedComponent!==\"undefined\" && selectedComponent!==null)\r\n            {\r\n                if(selectedComponent.uuid!==this.uuid \r\n                    && selectedComponent.component_category==this.component_category\r\n                    && selectedComponent.component_type==this.component_type)\r\n                {\r\n                    this.ingest_data(selectedComponent);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n    }\r\n};","export default\r\n{\r\n    methods:\r\n    {\r\n        round:function(_number, _decimals)\r\n        {\r\n            if(typeof _decimals===\"undefined\" || +_decimals==0)\r\n            {\r\n                return Math.round(+_number)\r\n            }\r\n            let multiplier=10 ** +_decimals;\r\n            return Math.round(+_number * multiplier)/multiplier;\r\n        },\r\n        floor:function(_number)\r\n        {\r\n            return Math.floor(+_number);\r\n        },\r\n        ceiling:function(_number)\r\n        {\r\n            return Math.ceiling(+_number);\r\n        },\r\n        decimalPad(_number)\r\n        {\r\n            return +_number%1===0 ? _number.toPrecision(2) : _number;\r\n        },\r\n        create_uuid:function()\r\n        {\r\n            return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\r\n                (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n            )\r\n        },\r\n        create_short_uuid:function()\r\n        {\r\n            return ([1e7]+-1e3).replace(/[018]/g, c =>\r\n                (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n            );\r\n        },\r\n        invisible_pad:function(_array_of_items)\r\n        {\r\n            let longestString=\"\";\r\n            _array_of_items.forEach(function(_element)\r\n            {\r\n                if(_element.length > longestString.length)\r\n                {\r\n                    longestString=_element;\r\n                }\r\n            },0);\r\n            return longestString+\"XX\";\r\n        },\r\n        isNumeric:function isNumeric(_input)\r\n        {\r\n            return typeof _input!=='undefined' && !isNaN(parseFloat(_input)) && isFinite(_input);\r\n        },\r\n    }\r\n};","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"mek-inline-flex-col\",staticStyle:{\"width\":\"100%\"}},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.servo_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('span',{staticClass:\"mek-inline-flex-row\"},[_c('span',{staticClass:\"mek-inline-flex-col\"},[_c('mek-servo-type',{staticStyle:{\"align-self\":\"flex-start\"},attrs:{\"servo-type\":_vm.selected_servo_type},on:{\"update-servo-type\":_vm.updateServoType,\"alert-generated\":_vm.handleAlert}}),_c('mek-servo-kills-space-trade',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"base_kills\":_vm.selected_servo_class.kills,\"kills_modifier\":_vm.kills_space_trade.kills_modifier,\"space_modifier\":_vm.kills_space_trade.space_modifier,\"base_space\":_vm.selected_servo_class.space},on:{\"update-extra-space\":_vm.updateExtraSpace,\"alert-generated\":_vm.handleAlert}})],1),_c('mek-servo-class',{attrs:{\"servo-type\":_vm.selected_servo_type.type,\"servo-class\":_vm.selected_servo_class},on:{\"update-servo-class\":_vm.updateServoClass,\"alert-generated\":_vm.handleAlert}}),_c('mek-armor',{attrs:{\"armor\":_vm.selected_armor,\"max-armor\":_vm.selected_servo_class.code+2},on:{\"update-armor\":_vm.updateArmor,\"alert-generated\":_vm.handleAlert}}),_c('span',{staticClass:\"mek-inline-flex-col\"},[(_vm.selected_armor.cost!=0)?_c('mek-armor-type',{attrs:{\"armor-type\":_vm.selected_armor_type},on:{\"update-armor-type\":_vm.updateArmorType,\"alert-generated\":_vm.handleAlert}}):_vm._e(),(_vm.selected_armor.cost!=0)?_c('mek-armor-ram',{attrs:{\"absorption\":_vm.selected_absorption},on:{\"update-absorption\":_vm.updateAbsorption,\"alert-generated\":_vm.handleAlert}}):_vm._e()],1)],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":6}},[_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Base Kills: \"+_vm._s(_vm.selected_servo_class.kills))]),_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_vm._v(\"Total Kills: \"+_vm._s(_vm.total_kills))]),(_vm.selected_armor.cost!=0)?_c('div',{attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Base Armor Stopping Power: \"+_vm._s(_vm.round(_vm.selected_armor.stopping_power,2))+\"\\n                \"),_c('br'),_vm._v(\"Final Stopping Power: \"+_vm._s(_vm.round(_vm.final_stopping_power,2))+\"\\n            \")]):_vm._e(),(_vm.selected_armor.cost!=0)?_c('div',{attrs:{\"slot\":\"col1-row4\"},slot:\"col1-row4\"},[_vm._v(\"Armor Type: \"+_vm._s(_vm.selected_armor_type.type))]):_vm._e(),(_vm.selected_armor.cost!=0)?_c('div',{staticStyle:{\"padding-left\":\"10px\"},attrs:{\"slot\":\"col1-row5\"},slot:\"col1-row5\"},[_vm._v(\"Damage Coefficient: \"+_vm._s(_vm.selected_armor_type.damage_coefficient))]):_vm._e(),(_vm.selected_absorption.cost!=1)?_c('div',{attrs:{\"slot\":\"col1-row6\"},slot:\"col1-row6\"},[_vm._v(\"Absorption: \"+_vm._s(_vm.selected_absorption.absorption*100)+\"%\")]):_vm._e(),(_vm.is_arm | _vm.is_leg)?_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Damage Bonus: \"+_vm._s(_vm.selected_servo_class.damage_bonus))]):_vm._e(),(_vm.is_arm)?_c('div',{attrs:{\"slot\":\"col2-row2\"},slot:\"col2-row2\"},[_vm._v(\"Throw Range: \"+_vm._s(_vm.selected_servo_class.throw_range))]):_vm._e(),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.selected_servo_class.space))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Available Space: \"+_vm._s(_vm.available_space))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.weight)+\" tons\")]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.base_cost))]),_c('div',{attrs:{\"slot\":\"col4-row2\"},slot:\"col4-row2\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.armor_cost_multiplier))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row3\"},slot:\"col4-row3\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{attrs:{\"active-buttons\":\"save,reset,new\"},on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <span class=\"mek-inline-flex-col\" style=\"width:100%;\">\r\n        <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||servo_name\"\r\n            :component-changed=\"component_changed\"\r\n            @update-component-name=\"updateComponentName\"\r\n        ></mek-component-name>\r\n        <span class=\"mek-inline-flex-row\">\r\n            <span class=\"mek-inline-flex-col\">\r\n                <mek-servo-type :servo-type=\"selected_servo_type\" \r\n                    @update-servo-type=\"updateServoType\" @alert-generated=\"handleAlert\"\r\n                    style=\"align-self:flex-start;\"\r\n                ></mek-servo-type>\r\n                <mek-servo-kills-space-trade style=\"align-self:baseline;\"\r\n                    :base_kills=\"selected_servo_class.kills\" :kills_modifier=\"kills_space_trade.kills_modifier\" \r\n                    :space_modifier=\"kills_space_trade.space_modifier\" :base_space=\"selected_servo_class.space\"\r\n                    @update-extra-space=\"updateExtraSpace\" @alert-generated=\"handleAlert\"\r\n                ></mek-servo-kills-space-trade>\r\n                <!--- ADD KILLS FOR SPACE CONVERTER --->\r\n                <!--- add reinforcing component --->\r\n            </span>\r\n            <mek-servo-class @update-servo-class=\"updateServoClass\" @alert-generated=\"handleAlert\"\r\n                :servo-type=\"selected_servo_type.type\" :servo-class=\"selected_servo_class\"\r\n            ></mek-servo-class>\r\n            <mek-armor :armor=\"selected_armor\"  :max-armor=\"selected_servo_class.code+2\"\r\n                @update-armor=\"updateArmor\" @alert-generated=\"handleAlert\"\r\n            ></mek-armor>\r\n            <span class=\"mek-inline-flex-col\">\r\n                <mek-armor-type :armor-type=\"selected_armor_type\" v-if=\"selected_armor.cost!=0\"\r\n                    @update-armor-type=\"updateArmorType\" @alert-generated=\"handleAlert\"\r\n                ></mek-armor-type>\r\n                <mek-armor-ram :absorption=\"selected_absorption\" v-if=\"selected_armor.cost!=0\"\r\n                    @update-absorption=\"updateAbsorption\" @alert-generated=\"handleAlert\"\r\n                ></mek-armor-ram>\r\n            </span>\r\n        </span>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-component-stats :cols=\"4\" :rows=\"6\">\r\n                <div slot=\"col1-row1\">Base Kills: {{selected_servo_class.kills}}</div>\r\n                <div slot=\"col1-row2\">Total Kills: {{total_kills}}</div>\r\n                <div slot=\"col1-row3\" v-if=\"selected_armor.cost!=0\">Base Armor Stopping Power: {{round(selected_armor.stopping_power,2)}}\r\n                    <br>Final Stopping Power: {{round(final_stopping_power,2)}}\r\n                </div>\r\n                <div slot=\"col1-row4\" v-if=\"selected_armor.cost!=0\">Armor Type: {{selected_armor_type.type}}</div>\r\n                <div slot=\"col1-row5\" v-if=\"selected_armor.cost!=0\" style=\"padding-left:10px;\">Damage Coefficient: {{selected_armor_type.damage_coefficient}}</div>\r\n                <div slot=\"col1-row6\" v-if=\"selected_absorption.cost!=1\">Absorption: {{selected_absorption.absorption*100}}%</div>\r\n\r\n                <div slot=\"col2-row1\" v-if=\"is_arm | is_leg\">Damage Bonus: {{selected_servo_class.damage_bonus}}</div>\r\n                <div slot=\"col2-row2\" v-if=\"is_arm\">Throw Range: {{selected_servo_class.throw_range}}</div>\r\n\r\n                <div slot=\"col3-row1\">Base Space: {{selected_servo_class.space}}</div>\r\n                <div slot=\"col3-row2\">Available Space: {{available_space}}</div>\r\n                <div slot=\"col3-row3\">Weight: {{weight}} tons</div>\r\n                \r\n                <div slot=\"col4-row1\">Base Cost: {{base_cost}}</div>\r\n                <div slot=\"col4-row2\">Multiplier: x{{armor_cost_multiplier}}</div>\r\n                <div slot=\"col4-row3\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n            </mek-component-stats>\r\n            <mek-save-reset-component @save-reset-component=\"componentSaveReset\" active-buttons=\"save,reset,new\"\r\n            ></mek-save-reset-component>\r\n        </div>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\nimport utility_mixin from \"@/mixins/utility_mixin.js\";\r\nimport component_methods_mixin from \"@/mixins/component_methods_mixin\";\r\nimport component_computed_mixin from \"@/mixins/component_computed_mixin\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_servo\",\r\n    props:[],\r\n    mixins:\r\n        [\r\n            utility_mixin, \r\n            component_methods_mixin, \r\n            component_computed_mixin\r\n        ],\r\n    components:\r\n    {\r\n        \"mek-servo-type\":()=>import(/* webpackChunkName: \"mek_servo-type\" */\"./subcomponents/mek_servo-type.vue\"),\r\n        \"mek-servo-class\":()=>import(/* webpackChunkName: \"mek_servo-class\" */\"./subcomponents/mek_servo-class.vue\"),\r\n        \"mek-servo-kills-space-trade\":()=>import(/* webpackChunkName: \"mek_servo-kills-space-trade\" */\"./subcomponents/mek_servo-kills-space-trade.vue\"),\r\n\r\n        \"mek-component-name\":()=>import(/* webpackChunkName: \"mek-component-name\" */\"@/app_components/universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>import(/* webpackChunkName: \"mek-save-reset-component\" */\"@/app_components/universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>import(/* webpackChunkName: \"mek_component-stats\" */\"@/design_components/universal/mek_component-stats.vue\"),\r\n\r\n        \"mek-armor\":()=>import(/* webpackChunkName: \"mek_armor\" */\"@/design_components/universal/mek_armor.vue\"),\r\n        \"mek-armor-type\":()=>import(/* webpackChunkName: \"mek_armor-type\" */\"@/design_components/universal/mek_armor-type.vue\"),\r\n        \"mek-armor-ram\":()=>import(/* webpackChunkName: \"mek_armor-RAM\" */\"@/design_components/universal/mek_armor-RAM.vue\"),\r\n        \r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.uuid=null;\r\n        obj.component_name=null;\r\n        obj.custom_component_name=false;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"servo\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.selected_servo_type={type:\"Torso\"};\r\n        obj.selected_servo_class={code:1,name:\"Superlight\",space:2,cost:2,kills:2,id:\"SL\"};\r\n\r\n        obj.cost_multipliers={};\r\n\r\n        obj.selected_armor={name:\"None\",cost:0,stopping_power:0,code:0};\r\n        obj.cost_multipliers.armor={};\r\n        \r\n        obj.selected_armor_type={type:\"Standard\",damage_coefficient:1,cost:1};\r\n        obj.cost_multipliers.armor.selected_armor_type=1;\r\n\r\n        obj.selected_absorption={absorption:0,cost:1,armor_penalty:0};\r\n        obj.cost_multipliers.armor.selected_absorption=1;\r\n\r\n        obj.kills_space_trade={};\r\n        obj.kills_space_trade.space_modifier=0;\r\n        obj.kills_space_trade.kills_modifier=0;\r\n        obj.kills_space_trade.space=2;\r\n        obj.kills_space_trade.kills=2;\r\n        obj.kills_space_trade.cost=0;\r\n\r\n        obj.hasAlert=false;\r\n\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        updateComponentName(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.custom_component_name=true;\r\n            this.component_changed=true;\r\n        },\r\n        updateServoType(_servo_type)\r\n        {   \r\n            this.component_type=_servo_type.type;\r\n            this.$set(this,\"selected_servo_type\",_servo_type);\r\n            this.component_changed=true;\r\n        },\r\n        updateServoClass(_servo_class)\r\n        {\r\n            this.$set(this,\"selected_servo_class\",_servo_class);\r\n            this.component_changed=true;\r\n        },\r\n        updateArmor(_armor)\r\n        {\r\n            this.$set(this,\"selected_armor\",_armor);\r\n            this.component_changed=true;\r\n            if(_armor.stopping_power==0)\r\n            {//reset RAM and Armor type on selecting No-Armor\r\n                this.updateAbsorption({absorption:0,cost:1,armor_penalty:0});\r\n                this.updateArmorType({type:\"Standard\",damage_coefficient:1,cost:1});\r\n            }\r\n        },\r\n        updateArmorType(_armor_type)\r\n        {\r\n            this.$set(this,\"selected_armor_type\",JSON.parse(JSON.stringify(_armor_type)));\r\n            this.cost_multipliers.armor.selected_armor_type=this.selected_armor_type.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateAbsorption(_absorption)\r\n        {\r\n            this.$set(this,\"selected_absorption\",JSON.parse(JSON.stringify(_absorption)));\r\n            this.cost_multipliers.armor.selected_absorption=this.selected_absorption.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateExtraSpace(_kills_space_trade)\r\n        {\r\n            this.kills_space_trade.space_modifier=_kills_space_trade.space_modifier;\r\n            this.kills_space_trade.kills_modifier=_kills_space_trade.kills_modifier;\r\n            this.kills_space_trade.space=_kills_space_trade.space;\r\n            this.kills_space_trade.kills=_kills_space_trade.kills;\r\n            this.kills_space_trade.cost=_kills_space_trade.cost;\r\n            this.component_changed=true;\r\n        },\r\n        ingest_data(_data_object)\r\n        {\r\n            let alertMessage=\"Torso bad, resetting to 'standard' shield.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(!this.custom_component_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=this.hasAlert});\r\n        },\r\n        output_data()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"servo\";\r\n            return_data.component_name=this.component_name===null?this.servo_name:this.component_name;\r\n            return_data.custom_component_name=this.custom_component_name;\r\n\r\n            return_data.selected_servo_type=this.selected_servo_type;\r\n            return_data.selected_servo_class=this.selected_servo_class;\r\n            return_data.selected_armor=this.selected_armor;\r\n            return_data.selected_armor_type=this.selected_armor_type;\r\n            return_data.selected_absorption=this.selected_absorption;\r\n            return_data.cost_multipliers=this.cost_multipliers;\r\n            return_data.kills_space_trade=this.kills_space_trade;\r\n            \r\n            return_data.cost=this.cost;\r\n            return_data.armor_cost_multiplier=this.armor_cost_multiplier;\r\n            return_data.weight=this.weight;\r\n            return_data.total_kills=this.total_kills;\r\n            return_data.available_space=this.available_space;\r\n\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return JSON.parse(this.original_component);\r\n        },\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"new\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                        break;\r\n                    }\r\n                    // eslint-disable-next-line\r\n                case \"new\":\r\n                    this.uuid=null;\r\n                    this.$set(this,\"selected_servo_type\",{type:\"Torso\"});\r\n                    this.$set(this,\"selected_servo_class\",{code:1,name:\"Superlight\",space:2,cost:2,kills:2,id:\"SL\"})\r\n                    this.$set(this,\"selected_armor\",{name:\"None\",cost:0,stopping_power:0,code:0});\r\n                    this.$set(this,\"selected_armor_type\",{type:\"Standard\",damage_coefficient:1,cost:1});\r\n                    this.cost_multipliers.armor.armor_type=1;\r\n                    this.$set(this,\"selected_absorption\",{absorption:0,cost:1,armor_penalty:0});\r\n                    this.cost_multipliers.armor.absorption=1;\r\n                    this.$set(this,\"kills_space_trade\",{space_modifier:0,kills_modifier:0,cost:0});\r\n                    this.component_name=null;\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        },\r\n        handleAlert(_alert_status)\r\n        {\r\n            this.hasAlert=_alert_status;\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        servo_name()\r\n        {\r\n            let type=this.selected_servo_type.type;\r\n            let servo_class=this.selected_servo_class.name;\r\n            let reinforced=this.kills_space_trade.kills_modifier>0 ? \" Reinforced \" : \"\";\r\n            let armor_type=this.selected_armor_type.type;\r\n            let armor=this.selected_armor.cost>0 && this.selected_armor_type.cost==1 ? \" Armored \" :\r\n                        this.selected_armor.cost>0 && this.selected_armor_type.cost!=1 ? \" \"+armor_type+\"-Armored \" :\r\n                        \"\";\r\n            let absorbing=this.selected_absorption.cost>1 ? \" Absorbing \":\"\";\r\n            let additional=reinforced!=\"\"||this.selected_armor.cost>0 ? \" - \" : \"\";\r\n            let name=type+\" \"+servo_class+\" Servo\"+additional+reinforced+absorbing+armor;\r\n            name=name.trim();\r\n            name=name.replace(/\\s+/gi,\" \");\r\n            return name;\r\n        },\r\n        base_cost()\r\n        {\r\n            return this.selected_servo_class.cost + this.selected_armor.cost + this.kills_space_trade.cost;\r\n        },\r\n        cost()\r\n        {\r\n            let cost=this.selected_servo_class.cost + (this.selected_armor.cost*this.armor_cost_multiplier) + this.kills_space_trade.cost;\r\n            return this.round(cost,2);\r\n        }\r\n        ,\r\n        available_space()\r\n        {\r\n            return this.selected_servo_class.space + this.kills_space_trade.space_modifier;\r\n        },\r\n        damage_capacity()\r\n        {\r\n            let servo_kills=this.selected_servo_class.kills;\r\n            let kills_space_trade_sp_loss=this.kills_space_trade.kills_modifier;\r\n            return servo_kills + this.final_stopping_power + kills_space_trade_sp_loss;\r\n        },\r\n        total_kills()\r\n        {\r\n            return this.selected_servo_class.kills + this.kills_space_trade.kills_modifier;\r\n        },\r\n        weight()\r\n        {\r\n            return this.round(this.damage_capacity/2,2);\r\n        },\r\n        final_stopping_power()\r\n        {\r\n            return this.selected_armor.stopping_power-(this.selected_armor.stopping_power*this.selected_absorption.armor_penalty);\r\n        },\r\n        is_arm()\r\n        {\r\n            return this.selected_servo_type.type.toLowerCase()==\"arm\";\r\n        },\r\n        is_leg()\r\n        {\r\n            return this.selected_servo_type.type.toLowerCase()==\"leg\";\r\n        },\r\n        armor_cost_multiplier()\r\n        {\r\n            let cost_multiplier=1;\r\n            for(let multi in this.cost_multipliers.armor)\r\n            {\r\n                cost_multiplier*=this.cost_multipliers.armor[multi];\r\n            }\r\n            return this.round(cost_multiplier,2);\r\n        }\r\n    }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_servo-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_servo-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_servo-main.vue?vue&type=template&id=42e04fe5&\"\nimport script from \"./mek_servo-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_servo-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","export default\r\n{\r\n    methods:\r\n    {\r\n        universal_ingest_data(_data_object,_alertMessage)\r\n        {\r\n            this.original_component=JSON.stringify(_data_object);//store a copy as a JSON object for 'reset' purposes\r\n            let data_object=JSON.parse(this.original_component);\r\n            if(_data_object===null)\r\n            {\r\n                this.componentSaveReset(\"clear\");\r\n                //generic error comment\r\n                this.$store.commit(\"alertMessage\",_alertMessage);\r\n            }\r\n\r\n            for(let _property in data_object)\r\n            {//exclude computed properties that are auto updated\r\n                if(Object.keys(this._computedWatchers).includes(_property))\r\n                {\r\n                    continue;\r\n                }\r\n                if(typeof data_object[_property]===\"object\" && !Array.isArray(data_object[_property]))\r\n                {\r\n                    if(typeof this[_property]!==\"object\" || this[_property]===null)\r\n                    {\r\n                        this.$set(this,_property,{})\r\n                    }\r\n                    for(let _sub_property in data_object[_property])\r\n                    {\r\n                        this.$set(this[_property],[_sub_property],data_object[_property][_sub_property]);\r\n                    }\r\n                }\r\n                else if(Array.isArray(data_object[_property]))\r\n                {\r\n                    this.$set(this,_property,data_object[_property]);\r\n                }\r\n                else\r\n                {\r\n                    this.$set(this,_property,data_object[_property]);\r\n                }\r\n            }\r\n            this.$forceUpdate();\r\n        },\r\n        updateComponentName(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
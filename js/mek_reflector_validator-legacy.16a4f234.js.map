{"version":3,"sources":["webpack:///./src/store/modules/validators/mek_reflector_validator.js"],"names":["validators","__webpack_require__","e","then","bind","_module","reflector","cleaned_feature","space_efficiency","validate_efficiency","validateComponent","_component","validatedData","cleanedComponent","alerts","selected_reflector","concat","data","total_cost","cost","efficiencies","space","damage_capacity","quality_value","weight"],"mappings":"4NAAIA,EAAW,GAEfC,EAAAC,EAAA,6BAAAC,KAAAF,EAAAG,KAAA,cACCD,KAAK,SAACE,GAEHL,EAAWM,UAAUD,EAAQE,kBAGjCN,EAAAC,EAAA,oCAAAC,KAAAF,EAAAG,KAAA,cACCD,KAAK,SAACE,GAEHL,EAAWQ,iBAAiBH,EAAQI,sBAGxC,IAAIC,EAAkB,SAACC,GAEnB,IACIC,EADAC,EAAiBF,EAEjBG,EAAO,GAEXF,EAAcZ,EAAWM,UAAU,gBAAgBO,EAAiBE,oBACpED,EAAOA,EAAOE,OAAOJ,EAAcE,QACnCD,EAAiBE,mBAAmBH,EAAcK,KAElD,IAAIC,EAAWL,EAAiBE,mBAAmBI,KAQnD,OAPAP,EAAcZ,EAAWQ,iBAAiBK,EAAiBO,aAAaC,MAAOH,EAAY,iBAC3FJ,EAAOA,EAAOE,OAAOJ,EAAcE,QACnCD,EAAiBO,aAAaC,MAAMT,EAAcK,KAElDJ,EAAiBS,gBAAgBT,EAAiBE,mBAAmBQ,cACrEV,EAAiBW,OAAOX,EAAiBS,gBAAgB,EAElD,CAACL,KAAKJ,EAAkBC,OAAOA","file":"js/mek_reflector_validator-legacy.16a4f234.js","sourcesContent":["let validators={};\r\n\r\nimport(/* webpackChunkName: \"mek_reflector-data-module\" */\"@/data_table_modules/mek_reflector/mek_reflector-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.reflector=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_space-efficiency-data-module\" */\"@/data_table_modules/universal/mek_space-efficiency-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.space_efficiency=_module.validate_efficiency;\r\n});\r\n\r\nlet validateComponent=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let validatedData;\r\n    let alerts=[];\r\n    //loop thru independent validations\r\n    validatedData=validators.reflector(\"quality_value\",cleanedComponent.selected_reflector);\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.selected_reflector=validatedData.data;\r\n\r\n    let total_cost=cleanedComponent.selected_reflector.cost;\r\n    validatedData=validators.space_efficiency(cleanedComponent.efficiencies.space, total_cost, \"Mek-Reflector\");\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.efficiencies.space=validatedData.data;\r\n    //update static values\r\n    cleanedComponent.damage_capacity=cleanedComponent.selected_reflector.quality_value;\r\n    cleanedComponent.weight=cleanedComponent.damage_capacity/2;\r\n\r\n    return {data:cleanedComponent, alerts:alerts};\r\n};\r\n\r\nexport {validateComponent};"],"sourceRoot":""}
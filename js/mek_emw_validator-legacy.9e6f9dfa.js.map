{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/_object-to-array.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/entries.js","webpack:///./node_modules/core-js/library/modules/es7.object.entries.js","webpack:///./node_modules/core-js/library/fn/object/entries.js","webpack:///./src/store/modules/validators/mek_emw_validator.js"],"names":["getKeys","__webpack_require__","toIObject","isEnum","f","module","exports","isEntries","it","key","O","keys","length","i","result","call","push","$export","$entries","S","entries","Object","loopValidators","updateMultipliers","round","validators","e","then","bind","_module","accuracy","cleaned_feature","attack_factor","damage","filter_feature","filter_data_table","feature","turns_in_use","space_efficiency","validate_efficiency","validateComponent","_component","validatedData","loopAlerts","cleanedComponent","updateList","alerts","componentsToValidate","validator","pkey","component_prop","_loopValidators","concat","selected_turns_in_use","turns","feature_array","cleaned_array","cost_multipliers","data","cost_multiplier","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_entries__WEBPACK_IMPORTED_MODULE_0___default","reduce","_multi","_val","total_cost","selected_damage","cost","efficiencies","space","damage_capacity","weight","isBeamShield","some","_feat","test","beam_shield","stopping_power","defense_accuracy","selected_accuracy"],"mappings":"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","file":"js/mek_emw_validator-legacy.9e6f9dfa.js","sourcesContent":["var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n","module.exports = require(\"core-js/library/fn/object/entries\");","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n","let validators={};\r\n\r\nimport(/* webpackChunkName: \"mek_emw-accuracy-data-module\" */\"@/data_table_modules/mek_emw/mek_emw-accuracy-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.accuracy=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_emw-attack-factor-data-module\" */\"@/data_table_modules/mek_emw/mek_emw-attack-factor-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.attack_factor=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_emw-damage-data-module\" */\"@/data_table_modules/mek_emw/mek_emw-damage-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.damage=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_emw-feature-data-module\" */\"@/data_table_modules/mek_emw/mek_emw-feature-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.filter_feature=_module.filter_data_table;//filter based on burst_value\r\n    validators.feature=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_emw-turns-in-use-data-module\" */\"@/data_table_modules/mek_emw/mek_emw-turns-in-use-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.turns_in_use=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_space-efficiency-data-module\" */\"@/data_table_modules/universal/mek_space-efficiency-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.space_efficiency=_module.validate_efficiency;\r\n});\r\n\r\nlet loopValidators, updateMultipliers, round;\r\nimport(/* webpackChunkName: \"validator_functions\" */\"./validator_functions\")\r\n.then((_module)=>\r\n{\r\n    ({loopValidators, updateMultipliers, round} = _module);\r\n});\r\n\r\nlet validateComponent=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let validatedData;\r\n    let updateList=[\"selected_turns_in_use\",\"selected_accuracy\",\"selected_attack_factor\",\"feature_array\"];\r\n    let loopAlerts;\r\n    let alerts=[];\r\n    //loop thru independent validations\r\n    let componentsToValidate=\r\n    [\r\n        {validator:validators.damage,pkey:\"damage\",component_prop:\"selected_damage\"},\r\n        {validator:validators.turns_in_use,pkey:\"turns\",component_prop:\"selected_turns_in_use\"},\r\n        {validator:validators.accuracy,pkey:\"accuracy\",component_prop:'selected_accuracy'},\r\n        {validator:validators.attack_factor,pkey:\"attack_factor\",component_prop:'selected_attack_factor'},\r\n    ];\r\n    ({cleanedComponent, loopAlerts} = loopValidators(componentsToValidate, cleanedComponent));\r\n    alerts=alerts.concat(loopAlerts)\r\n    //update feature table\r\n    validators.filter_feature(cleanedComponent.selected_turns_in_use.turns==\"__INFINITY__\");\r\n    //validate feature_array\r\n    validatedData=validators.feature(cleanedComponent.feature_array,\"feature\");\r\n    cleanedComponent.feature_array=validatedData.cleaned_array;\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    //update cost_multipliers for components needing update\r\n    validatedData=updateMultipliers(updateList,cleanedComponent);\r\n    cleanedComponent.cost_multipliers=validatedData.data;\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    //validate space efficiency\r\n    let cost_multiplier=Object.entries(cleanedComponent.cost_multipliers).reduce((_multi, _val)=>\r\n    {//calc new cost_multiplier\r\n        return _multi*_val[1];\r\n    },1);\r\n    cleanedComponent.cost_multiplier=round(cost_multiplier,2);\r\n    let total_cost=cleanedComponent.selected_damage.cost * cleanedComponent.cost_multiplier;\r\n    validatedData=validators.space_efficiency(cleanedComponent.efficiencies.space, total_cost, \"Mek-EMW\");\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.efficiencies.space=validatedData.data;\r\n    //update static values\r\n    cleanedComponent.damage_capacity=cleanedComponent.selected_damage.damage;\r\n    cleanedComponent.weight=cleanedComponent.damage_capacity/2;\r\n\r\n    let isBeamShield=cleanedComponent.feature_array.some((_feat)=>\r\n    {\r\n        return /.*beam.*shield.*/gi.test(_feat.feature);\r\n    });\r\n    if(isBeamShield)\r\n    {\r\n        cleanedComponent.beam_shield={};\r\n\r\n        cleanedComponent.beam_shield.stopping_power=cleanedComponent.selected_damage.damage;\r\n        cleanedComponent.beam_shield.defense_accuracy=cleanedComponent.selected_accuracy.accuracy-2;\r\n        cleanedComponent.beam_shield.damage=cleanedComponent.selected_damage.damage/2;\r\n    }\r\n\r\n    return {data:cleanedComponent,alerts:alerts};\r\n};\r\n\r\nexport {validateComponent};"],"sourceRoot":""}
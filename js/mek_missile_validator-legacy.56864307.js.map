{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./src/store/modules/validators/mek_missile_validator.js","webpack:///./node_modules/core-js/modules/es7.object.entries.js"],"names":["DESCRIPTORS","__webpack_require__","getKeys","toIObject","isEnum","f","module","exports","isEntries","it","key","O","keys","length","i","result","call","push","loopValidators","updateMultipliers","round","validators","e","then","bind","_module","accuracy","cleaned_feature","damage","feature","feature_filter","filter_data_table","blast_radius","skill","smart","range_mod","udpate_range_mod","create_range_mod_data_table","space_efficiency","validate_efficiency","derived","_component","validatedData","cleanedComponent","alerts","updateList","newPackSize","parseInt","selected_pack_size","size","isNaN","cost","cost_multipliers","data","concat","cost_multiplier","Object","entries","reduce","_multi","_val","newDamageCapacity","selected_damage","damage_capacity","newWeight","weight","newCost","efficiencies","space","validateComponent","loopAlerts","componentsToValidate","validator","pkey","component_prop","_loopValidators","selected_blast_radius","selected_smart","range","_loopValidators2","$export","$entries","S"],"mappings":"4GAAA,IAAAA,EAAkBC,EAAQ,QAC1BC,EAAcD,EAAQ,QACtBE,EAAgBF,EAAQ,QACxBG,EAAaH,EAAQ,QAAeI,EACpCC,EAAAC,QAAA,SAAAC,GACA,gBAAAC,GACA,IAKAC,EALAC,EAAAR,EAAAM,GACAG,EAAAV,EAAAS,GACAE,EAAAD,EAAAC,OACAC,EAAA,EACAC,EAAA,GAEA,MAAAF,EAAAC,EACAJ,EAAAE,EAAAE,KACAd,IAAAI,EAAAY,KAAAL,EAAAD,IACAK,EAAAE,KAAAT,EAAA,CAAAE,EAAAC,EAAAD,IAAAC,EAAAD,IAGA,OAAAK,wHC0BIG,EAAgBC,EAAmBC,EA5CnCC,EAAa,GAEjBpB,EAAAqB,EAAA,oCAAAC,KAAAtB,EAAAuB,KAAA,cACGD,KAAK,SAACE,GACLJ,EAAWK,SAAWD,EAAQE,kBAGlC1B,EAAAqB,EAAA,kCAAAC,KAAAtB,EAAAuB,KAAA,cACGD,KAAK,SAACE,GACLJ,EAAWO,OAASH,EAAQE,kBAGhC1B,EAAAqB,EAAA,mCAAAC,KAAAtB,EAAAuB,KAAA,cACGD,KAAK,SAACE,GACLJ,EAAWQ,QAAUJ,EAAQE,gBAC7BN,EAAWS,eAAiBL,EAAQM,oBAGxC9B,EAAAqB,EAAA,wCAAAC,KAAAtB,EAAAuB,KAAA,cACGD,KAAK,SAACE,GACLJ,EAAWW,aAAeP,EAAQE,kBAGtC1B,EAAAqB,EAAA,iCAAAC,KAAAtB,EAAAuB,KAAA,cACGD,KAAK,SAACE,GACLJ,EAAWY,MAAQR,EAAQE,kBAG/B1B,EAAAqB,EAAA,iCAAAC,KAAAtB,EAAAuB,KAAA,cACGD,KAAK,SAACE,GACLJ,EAAWa,MAAQT,EAAQE,kBAG/B1B,EAAAqB,EAAA,qCAAAC,KAAAtB,EAAAuB,KAAA,cACGD,KAAK,SAACE,GACLJ,EAAWc,UAAYV,EAAQE,gBAC/BN,EAAWe,iBAAmBX,EAAQY,8BAG1CpC,EAAAqB,EAAA,oCAAAC,KAAAtB,EAAAuB,KAAA,cACGD,KAAK,SAACE,GACLJ,EAAWiB,iBAAmBb,EAAQc,sBAI1CtC,EAAAqB,EAAA,uBAAAC,KAAAtB,EAAAuB,KAAA,cACGD,KAAK,SAACE,GACFP,EAA6CO,EAA7CP,eAAgBC,EAA6BM,EAA7BN,kBAAmBC,EAAUK,EAAVL,QAG1CC,EAAWmB,QAAU,SAACC,GACpB,IAEIC,EAFAC,EAAmBF,EACnBG,EAAS,GAETC,EACF,CACE,oBACA,gBACA,qBACA,wBACA,iBACA,iBACA,sBAGAC,EAAYC,SAASJ,EAAiBK,mBAAmBC,MAC1DN,EAAiBK,mBAAmBC,MAAMH,IAEzCF,EAAO3B,KAAK,mCACZ2B,EAAO3B,KAAK,qDACZ0B,EAAiBK,mBAAmBE,MAAMJ,GAAe,CAACG,KAAK,EAAEE,KAAK,GAAK,CAACF,KAAKH,EAAYK,KAAKL,IAGtGJ,EAAgBvB,EAAkB0B,EAAYF,EAAkB,eAChEA,EAAiBS,iBAAmBV,EAAcW,KAClDT,EAASA,EAAOU,OAAOZ,EAAcE,QAErC,IAAIW,EAAkBC,OAAOC,QAAQd,EAAiBS,kBAAkBM,OAAO,SAACC,EAAQC,GACtF,OAAOD,EAASC,EAAK,IACpB,GACHL,EAAkBnC,EAAMmC,EAAiB,GACrCZ,EAAiBY,iBAAmBA,IACtCX,EAAO3B,KAAK,gCACZ2B,EAAO3B,KAAK,kDACZ0B,EAAiBY,gBAAkBnC,EAAMmC,EAAiB,IAE5D,IAAIM,EAAoBzC,EAAM0B,EAAcH,EAAiBmB,gBAAgBlC,OAAO,GAAG,GACnFe,EAAiBoB,iBAAmBF,IACtCjB,EAAO3B,KAAK,gCACZ2B,EAAO3B,KAAK,kDACZ0B,EAAiBoB,gBAAkBF,GAErC,IAAIG,EAAY5C,EAAMyC,EAAoB,EAAE,GACxClB,EAAiBsB,QAAUD,IAC7BpB,EAAO3B,KAAK,uBACZ2B,EAAO3B,KAAK,yCACZ0B,EAAiBsB,OAASD,GAE5B,IAAIE,EAAWpB,GAAeH,EAAiBmB,gBAAgBX,KAAOI,GAAoBZ,EAAiBwB,aAAaC,MAAMjB,KAS9H,OARAe,EAAU9C,EAAM8C,EAAS,GACrBvB,EAAiBQ,MAAQe,IAC3BtB,EAAO3B,KAAK,qBACZ2B,EAAO3B,KAAK,uCACZ0B,EAAiBQ,KAAOe,GAInB,CAAEb,KAAMV,EAAkBC,OAAQA,IAG3C,IAAIyB,EAAoB,SAAC5B,GACvB,IACIC,EACA4B,EAFA3B,EAAmBF,EAGnBG,EAAS,GAET2B,EACF,CACE,CAAEC,UAAWnD,EAAWO,OAAQ6C,KAAM,SAAUC,eAAgB,mBAChE,CAAEF,UAAWnD,EAAWK,SAAU+C,KAAM,WAAYC,eAAgB,qBACpE,CAAEF,UAAWnD,EAAWW,aAAcyC,KAAM,eAAgBC,eAAgB,yBAC5E,CAAEF,UAAWnD,EAAWY,MAAOwC,KAAM,QAASC,eAAgB,kBAC9D,CAAEF,UAAWnD,EAAWa,MAAOuC,KAAM,QAASC,eAAgB,mBAZ5BC,EAcFzD,EAAeqD,EAAsB5B,GAAtEA,EAdmCgC,EAcnChC,iBAAkB2B,EAdiBK,EAcjBL,WACrB1B,EAASA,EAAOU,OAAOgB,GAGvBjD,EAAWS,eAAea,EAAiBiC,sBAAsB5C,aAAcW,EAAiBkC,eAAe3C,OAE/Gb,EAAWe,iBAAiBO,EAAiBmB,gBAAgBgB,OAE7DP,EACE,CACE,CAAEC,UAAWnD,EAAWQ,QAAS4C,KAAM,UAAWC,eAAgB,iBAClE,CAAEF,UAAWnD,EAAWc,UAAWsC,KAAM,YAAaC,eAAgB,uBAzBpC,IAAAK,EA2BF7D,EAAeqD,EAAsB5B,GAYzE,OAZGA,EA3BmCoC,EA2BnCpC,iBAAkB2B,EA3BiBS,EA2BjBT,WACrB1B,EAASA,EAAOU,OAAOgB,GAGvB5B,EAAgBrB,EAAWmB,QAAQG,GACnCA,EAAmBD,EAAcW,KACjCT,EAASA,EAAOU,OAAOZ,EAAcE,QAErCF,EAAgBrB,EAAWiB,iBAAiBK,EAAiBwB,aAAaC,MAAOzB,EAAiBQ,KAAM,eACxGP,EAASA,EAAOU,OAAOZ,EAAcE,QACrCD,EAAiBwB,aAAaC,MAAQ1B,EAAcW,KAE7C,CAAEA,KAAMV,EAAkBC,OAAQA,0BCpJ3C,IAAAoC,EAAc/E,EAAQ,QACtBgF,EAAehF,EAAQ,OAARA,EAA4B,GAE3C+E,IAAAE,EAAA,UACAzB,QAAA,SAAAhD,GACA,OAAAwE,EAAAxE","file":"js/mek_missile_validator-legacy.56864307.js","sourcesContent":["var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","let validators = {};\r\n\r\nimport(/* webpackChunkName: \"mek_missile-accuracy-data-module\" */\"@/data_table_modules/mek_missile/mek_missile-accuracy-data-module\")\r\n  .then((_module) => {\r\n    validators.accuracy = _module.cleaned_feature;\r\n  });\r\n\r\nimport(/* webpackChunkName: \"mek_missile-damage-data-module\" */\"@/data_table_modules/mek_missile/mek_missile-damage-data-module\")\r\n  .then((_module) => {\r\n    validators.damage = _module.cleaned_feature;\r\n  });\r\n\r\nimport(/* webpackChunkName: \"mek_missile-feature-data-module\" */\"@/data_table_modules/mek_missile/mek_missile-feature-data-module\")\r\n  .then((_module) => {\r\n    validators.feature = _module.cleaned_feature;\r\n    validators.feature_filter = _module.filter_data_table;\r\n  });\r\n\r\nimport(/* webpackChunkName: \"mek_missile-blast-radius-data-module\" */\"@/data_table_modules/mek_missile/mek_missile-blast-radius-data-module\")\r\n  .then((_module) => {\r\n    validators.blast_radius = _module.cleaned_feature;\r\n  });\r\n\r\nimport(/* webpackChunkName: \"mek_missile-skill-data-module\" */\"@/data_table_modules/mek_missile/mek_missile-skill-data-module\")\r\n  .then((_module) => {\r\n    validators.skill = _module.cleaned_feature;\r\n  });\r\n\r\nimport(/* webpackChunkName: \"mek_missile-smart-data-module\" */\"@/data_table_modules/mek_missile/mek_missile-smart-data-module\")\r\n  .then((_module) => {\r\n    validators.smart = _module.cleaned_feature;\r\n  });\r\n\r\nimport(/* webpackChunkName: \"mek_missile-range-mod-data-module\" */\"@/data_table_modules/mek_missile/mek_missile-range-mod-data-module\")\r\n  .then((_module) => {\r\n    validators.range_mod = _module.cleaned_feature;\r\n    validators.udpate_range_mod = _module.create_range_mod_data_table;\r\n  });\r\n\r\nimport(/* webpackChunkName: \"mek_space-efficiency-data-module\" */\"@/data_table_modules/universal/mek_space-efficiency-data-module\")\r\n  .then((_module) => {\r\n    validators.space_efficiency = _module.validate_efficiency;\r\n  });\r\n\r\nlet loopValidators, updateMultipliers, round;\r\nimport(/* webpackChunkName: \"validator_functions\" */\"./validator_functions\")\r\n  .then((_module) => {\r\n    ({ loopValidators, updateMultipliers, round } = _module);\r\n  });\r\n\r\nvalidators.derived = (_component) => {\r\n  let cleanedComponent = _component;\r\n  let alerts = [];\r\n  let validatedData;\r\n  let updateList = \r\n    [\r\n      \"selected_accuracy\", \r\n      \"feature_array\",\r\n      \"selected_range_mod\",\r\n      \"selected_blast_radius\",\r\n      \"selected_skill\",\r\n      \"selected_smart\",\r\n      \"selected_pack_size\"\r\n    ];\r\n  //validate pack size\r\n  let newPackSize=parseInt(cleanedComponent.selected_pack_size.size);\r\n  if(cleanedComponent.selected_pack_size.size!=newPackSize)\r\n  {//validate shots\r\n      alerts.push(\"Mek-Missile: selected_pack_size\");\r\n      alerts.push(\"**** Invalid Selected Pack Size. Correcting. ****\");\r\n      cleanedComponent.selected_pack_size=isNaN(newPackSize) ? {size:1,cost:1} : {size:newPackSize,cost:newPackSize};\r\n  }\r\n  //update cost_multipliers for components needing update\r\n  validatedData = updateMultipliers(updateList, cleanedComponent, \"Mek-Missile\");\r\n  cleanedComponent.cost_multipliers = validatedData.data;\r\n  alerts = alerts.concat(validatedData.alerts);\r\n  //update cost_multiplier\r\n  let cost_multiplier = Object.entries(cleanedComponent.cost_multipliers).reduce((_multi, _val) => {//calc new cost_multiplier\r\n    return _multi * _val[1];\r\n  }, 1);\r\n  cost_multiplier = round(cost_multiplier, 2);\r\n  if (cleanedComponent.cost_multiplier != cost_multiplier) {\r\n    alerts.push(\"Mek-Missile: cost_multiplier\");\r\n    alerts.push(\"**** Invalid Cost Multiplier. Correcting. ****\");\r\n    cleanedComponent.cost_multiplier = round(cost_multiplier, 2);\r\n  }\r\n  let newDamageCapacity = round(newPackSize * cleanedComponent.selected_damage.damage/15,2);\r\n  if (cleanedComponent.damage_capacity != newDamageCapacity) {\r\n    alerts.push(\"Mek-Missile: damage_capacity\");\r\n    alerts.push(\"**** Invalid Damage Capacity. Correcting. ****\");\r\n    cleanedComponent.damage_capacity = newDamageCapacity;\r\n  }\r\n  let newWeight = round(newDamageCapacity / 2,2);\r\n  if (cleanedComponent.weight != newWeight) {\r\n    alerts.push(\"Mek-Missile: weight\");\r\n    alerts.push(\"**** Invalid Weight. Correcting. ****\");\r\n    cleanedComponent.weight = newWeight;\r\n  }\r\n  let newCost = (newPackSize * (cleanedComponent.selected_damage.cost * cost_multiplier)) + cleanedComponent.efficiencies.space.cost;\r\n  newCost = round(newCost, 2);\r\n  if (cleanedComponent.cost != newCost) {\r\n    alerts.push(\"Mek-Missile: cost\");\r\n    alerts.push(\"**** Invalid Cost. Correcting. ****\");\r\n    cleanedComponent.cost = newCost;\r\n  }\r\n\r\n\r\n  return { data: cleanedComponent, alerts: alerts };\r\n};\r\n\r\nlet validateComponent = (_component) => {\r\n  let cleanedComponent = _component;\r\n  let validatedData;\r\n  let loopAlerts;\r\n  let alerts = [];\r\n  //loop thru independent validations\r\n  let componentsToValidate =\r\n    [\r\n      { validator: validators.damage, pkey: \"damage\", component_prop: \"selected_damage\" },\r\n      { validator: validators.accuracy, pkey: \"accuracy\", component_prop: 'selected_accuracy' },\r\n      { validator: validators.blast_radius, pkey: \"blast_radius\", component_prop: 'selected_blast_radius' },\r\n      { validator: validators.skill, pkey: \"skill\", component_prop: 'selected_skill' },\r\n      { validator: validators.smart, pkey: \"smart\", component_prop: 'selected_smart' },\r\n    ];\r\n  ({ cleanedComponent, loopAlerts } = loopValidators(componentsToValidate, cleanedComponent));\r\n  alerts = alerts.concat(loopAlerts)\r\n\r\n  //update feature filter, dependent on smart and blast_radius\r\n  validators.feature_filter(cleanedComponent.selected_blast_radius.blast_radius, cleanedComponent.selected_smart.smart);\r\n  //update range_mod, dependent on base_range from damage\r\n  validators.udpate_range_mod(cleanedComponent.selected_damage.range);\r\n  //loop thru dependent validators\r\n  componentsToValidate =\r\n    [\r\n      { validator: validators.feature, pkey: \"feature\", component_prop: \"feature_array\" },\r\n      { validator: validators.range_mod, pkey: \"range_mod\", component_prop: 'selected_range_mod' },\r\n    ];\r\n  ({ cleanedComponent, loopAlerts } = loopValidators(componentsToValidate, cleanedComponent));\r\n  alerts = alerts.concat(loopAlerts)\r\n\r\n  //update cost_multipliers for components needing update\r\n  validatedData = validators.derived(cleanedComponent);\r\n  cleanedComponent = validatedData.data;\r\n  alerts = alerts.concat(validatedData.alerts);\r\n  //validate space efficienc\r\n  validatedData = validators.space_efficiency(cleanedComponent.efficiencies.space, cleanedComponent.cost, \"Mek-Missile\");\r\n  alerts = alerts.concat(validatedData.alerts);\r\n  cleanedComponent.efficiencies.space = validatedData.data;\r\n\r\n  return { data: cleanedComponent, alerts: alerts };\r\n};\r\n\r\nexport { validateComponent };","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n"],"sourceRoot":""}
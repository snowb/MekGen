{"version":3,"sources":["webpack:///./src/design_components/mek_shield/mek_shield-main.vue?2439","webpack:///src/design_components/mek_shield/mek_shield-main.vue","webpack:///./src/design_components/mek_shield/mek_shield-main.vue?a40c","webpack:///./src/design_components/mek_shield/mek_shield-main.vue","webpack:///./src/mixins/component_computed_mixin.js","webpack:///./src/mixins/component_methods_mixin.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","new-component","newComponent","component-name","component_name","shield_name","component-changed","component_changed","on","update-component-name","updateComponentName","type","update-type","select_type","alert-generated","handleAlert","shield_class","name","is_ablative","update-class-code","select_class_code","toLowerCase","defense_ability","cost","cost_multipliers","update-defense-ability","select_da","_e","binder","base_stopping_power","stopping_power","update-binder","select_binder","reset-time","reset_time","update-reset-time","select_reset","turns-in-use","turns_in_use","update-turns-in-use","select_turns","armor-type","armor_type","update-armor-type","select_armor_type","absorption","update-absorption","select_absorption","weakness-array","weakness_array","update-weakness","select_weakness","space_efficiency","efficiencies","space","raw_space","update-efficiencies","updateEfficiencies","cols","rows","slot","_v","_s","kills","round","calculate_stopping_power","damage_coefficient","staticStyle","padding-left","max-width","margin-left","feature_list","time","surge_damage","space_cost","weight","cost_multiplier","font-weight","save-reset-component","componentSaveReset","staticRenderFns","mek_shield_mainvue_type_script_lang_js_","mixins","utility_mixin","component_methods_mixin","component_computed_mixin","components","mek-shield-type","__webpack_require__","e","then","bind","mek-shield-class","mek-shield-defense-ability","mek-shield-binder","mek-shield-reset-time","mek-shield-turns-in-use","mek-shield-weakness","mek-space-efficiency","Promise","resolve","mek-component-name","mek-save-reset-component","mek-component-stats","mek-armor-type","mek-armor-ram","data","obj","uuid","component_category","component_type","original_component","code","id","da","stopping_power_modifier","weakness","monicker","exclusive","modifier","armor_penalty","hasAlert","methods","_type","$set","_shield_class_obj","_da_obj","_binder_obj","_reset_obj","_turns_obj","Infinity","_weakness_obj","reduce","_cost_multi","_val","_armor_type","_absorption","_name","sp_modifier","weighted_stopping_power","_data","ingest_data","_data_object","_this","alertMessage","universal_ingest_data","$nextTick","output_shield_data","_this2","return_data","create_uuid","JSON","parse","stringify_default","_action","action","$store","commit","_alert_status","computed","length","isAblative","some","isSurge","multiplier","base_cost","subtotal_cost","damage_capacity","fullname","exclusive_name","partialname","_el","sp_k_name","replace","mek_shield_mek_shield_mainvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","multi","feature_array","_string","_index","feature","selectedComponent","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","getters","_alertMessage","_property","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_5___default","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_keys__WEBPACK_IMPORTED_MODULE_2___default","_computedWatchers","includes","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0___default","_sub_property","$forceUpdate","addAlert","_alert_string","alerts","push","publishAlerts"],"mappings":"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","file":"js/mek_shield-main-legacy.2656cdb3.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"mek-inline-flex-col\"},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.shield_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('div',{staticClass:\"mek-flex-col\"},[_c('mek-shield-type',{attrs:{\"type\":_vm.type},on:{\"update-type\":_vm.select_type,\"alert-generated\":_vm.handleAlert}}),_c('mek-shield-class',{attrs:{\"shield_class\":_vm.shield_class,\"type\":_vm.type.name,\"is_ablative\":_vm.is_ablative},on:{\"update-class-code\":_vm.select_class_code,\"alert-generated\":_vm.handleAlert}})],1),_c('span',{staticClass:\"mek-flex-col no-margin\"},[(_vm.type.name.toLowerCase()=='standard')?_c('mek-shield-defense-ability',{attrs:{\"defense_ability\":_vm.defense_ability,\"cost\":_vm.cost_multipliers.defense_ability},on:{\"update-defense-ability\":_vm.select_da,\"alert-generated\":_vm.handleAlert}}):_vm._e(),(_vm.type.name.toLowerCase()=='standard' || _vm.type.name.toLowerCase()=='active')?_c('mek-shield-binder',{attrs:{\"binder\":_vm.binder,\"base_stopping_power\":_vm.shield_class.stopping_power},on:{\"update-binder\":_vm.select_binder,\"alert-generated\":_vm.handleAlert}}):_vm._e(),(_vm.type.name.toLowerCase()=='reactive')?_c('mek-shield-reset-time',{attrs:{\"reset-time\":_vm.reset_time},on:{\"update-reset-time\":_vm.select_reset,\"alert-generated\":_vm.handleAlert}}):_vm._e(),(_vm.type.name.toLowerCase()=='reactive')?_c('mek-shield-turns-in-use',{attrs:{\"turns-in-use\":_vm.turns_in_use},on:{\"update-turns-in-use\":_vm.select_turns,\"alert-generated\":_vm.handleAlert}}):_vm._e()],1),_c('span',{staticClass:\"mek-flex-col no-margin\"},[(_vm.type.name.toLowerCase()=='standard' || _vm.type.name.toLowerCase()=='active')?_c('mek-armor-type',{attrs:{\"armor-type\":_vm.armor_type},on:{\"update-armor-type\":_vm.select_armor_type,\"alert-generated\":_vm.handleAlert}}):_vm._e(),(_vm.type.name.toLowerCase()=='standard' || _vm.type.name.toLowerCase()=='active')?_c('mek-armor-ram',{attrs:{\"absorption\":_vm.absorption},on:{\"update-absorption\":_vm.select_absorption,\"alert-generated\":_vm.handleAlert}}):_vm._e()],1),(_vm.type.name.toLowerCase()=='reactive')?_c('span',{staticClass:\"mek-flex-col no-margin\"},[_c('mek-shield-weakness',{attrs:{\"weakness-array\":_vm.weakness_array},on:{\"update-weakness\":_vm.select_weakness,\"alert-generated\":_vm.handleAlert}})],1):_vm._e(),_c('span',{staticClass:\"mek-flex-col no-margin\"},[_c('mek-space-efficiency',{attrs:{\"space_efficiency\":_vm.efficiencies.space,\"raw_space\":_vm.raw_space},on:{\"update-efficiencies\":_vm.updateEfficiencies}})],1)]),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":5}},[(_vm.is_ablative)?_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Kills: \"+_vm._s(_vm.shield_class.kills))]):_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Base Stopping Power: \"+_vm._s(_vm.round(_vm.shield_class.stopping_power,2))+\"\\n                \"),_c('br'),_vm._v(\"Final Stopping Power: \"+_vm._s(_vm.round(_vm.calculate_stopping_power(),2))+\"\\n            \")]),(_vm.armor_type.damage_coefficient!=1)?_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_vm._v(\"Armor Type: \"+_vm._s(_vm.armor_type.type))]):_vm._e(),(_vm.armor_type.damage_coefficient!=1)?_c('div',{staticStyle:{\"padding-left\":\"10px\"},attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Damage Coefficient: \"+_vm._s(_vm.armor_type.damage_coefficient))]):_vm._e(),(_vm.absorption.absorption!=0)?_c('div',{attrs:{\"slot\":\"col1-row4\"},slot:\"col1-row4\"},[_vm._v(\"Absorption: \"+_vm._s(_vm.absorption.absorption*100)+\"%\")]):_vm._e(),(_vm.type.name.toLowerCase()=='standard' || _vm.type.name.toLowerCase()=='active')?_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Binder Space: \"+_vm._s(_vm.round(_vm.binder.space,3)))]):_vm._e(),(_vm.type.name.toLowerCase()=='reactive')?_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Weakness(es):\"),_c('div',{staticStyle:{\"max-width\":\"150px\",\"margin-left\":\"10px\"}},[_vm._v(_vm._s(_vm.feature_list))])]):_vm._e(),(_vm.type.name.toLowerCase()=='reactive')?_c('div',{attrs:{\"slot\":\"col2-row2\"},slot:\"col2-row2\"},[_vm._v(\"Reset Time: \"+_vm._s(_vm.reset_time.time))]):_vm._e(),(_vm.type.name.toLowerCase()=='reactive')?_c('div',{attrs:{\"slot\":\"col2-row3\"},slot:\"col2-row3\"},[_vm._v(\"Turns in Use: \"+_vm._s(_vm.turns_in_use.time))]):_vm._e(),(_vm.type.name.toLowerCase()=='reactive')?_c('div',{attrs:{\"slot\":\"col2-row4\"},slot:\"col2-row4\"},[_vm._v(\"Surge Damage: \"+_vm._s(_vm.surge_damage))]):_vm._e(),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.raw_space))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Space: \"+_vm._s(_vm.space_cost))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.round(_vm.weight,2))+\" tons\")]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.shield_class.cost))]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.cost_multiplier))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <span class=\"mek-inline-flex-col\">\r\n        <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||shield_name\"\r\n            :component-changed=\"component_changed\"\r\n            @update-component-name=\"updateComponentName\"\r\n        ></mek-component-name>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <div class=\"mek-flex-col\">\r\n                <mek-shield-type :type=\"type\" @update-type=\"select_type\" @alert-generated=\"handleAlert\"\r\n                ></mek-shield-type>\r\n                <mek-shield-class :shield_class=\"shield_class\" :type=\"type.name\" :is_ablative=\"is_ablative\" \r\n                    @update-class-code=\"select_class_code\" @alert-generated=\"handleAlert\"\r\n                ></mek-shield-class>\r\n            </div>\r\n            <span class=\"mek-flex-col no-margin\">\r\n                <mek-shield-defense-ability\r\n                    v-if=\"type.name.toLowerCase()=='standard'\"\r\n                    :defense_ability=\"defense_ability\"\r\n                    :cost=\"cost_multipliers.defense_ability\" \r\n                    @update-defense-ability=\"select_da\" @alert-generated=\"handleAlert\"\r\n                ></mek-shield-defense-ability>\r\n                <mek-shield-binder\r\n                    v-if=\"type.name.toLowerCase()=='standard' || type.name.toLowerCase()=='active'\"\r\n                    :binder=\"binder\"\r\n                    :base_stopping_power=\"shield_class.stopping_power\"\r\n                    @update-binder=\"select_binder\" @alert-generated=\"handleAlert\"\r\n                ></mek-shield-binder>\r\n                <mek-shield-reset-time \r\n                    v-if=\"type.name.toLowerCase()=='reactive'\"\r\n                    :reset-time=\"reset_time\"\r\n                    @update-reset-time=\"select_reset\" @alert-generated=\"handleAlert\"\r\n                ></mek-shield-reset-time>\r\n                <mek-shield-turns-in-use\r\n                    v-if=\"type.name.toLowerCase()=='reactive'\"\r\n                    :turns-in-use=\"turns_in_use\"\r\n                    @update-turns-in-use=\"select_turns\" @alert-generated=\"handleAlert\"\r\n                ></mek-shield-turns-in-use>\r\n            </span>\r\n            <span class=\"mek-flex-col no-margin\">\r\n                <mek-armor-type v-if=\"type.name.toLowerCase()=='standard' || type.name.toLowerCase()=='active'\"\r\n                    :armor-type=\"armor_type\"\r\n                    @update-armor-type=\"select_armor_type\" @alert-generated=\"handleAlert\"\r\n                ></mek-armor-type>\r\n                <mek-armor-ram\r\n                    v-if=\"type.name.toLowerCase()=='standard' || type.name.toLowerCase()=='active'\"\r\n                    :absorption=\"absorption\"\r\n                    @update-absorption=\"select_absorption\" @alert-generated=\"handleAlert\"\r\n                ></mek-armor-ram>\r\n            </span>\r\n            <span class=\"mek-flex-col no-margin\" v-if=\"type.name.toLowerCase()=='reactive'\">\r\n                <mek-shield-weakness\r\n                    @update-weakness=\"select_weakness\" @alert-generated=\"handleAlert\"\r\n                    :weakness-array=\"weakness_array\"\r\n                ></mek-shield-weakness>\r\n            </span>\r\n            <span class=\"mek-flex-col no-margin\">\r\n                <mek-space-efficiency\r\n                    :space_efficiency=\"efficiencies.space\"\r\n                    :raw_space=\"raw_space\"\r\n                    @update-efficiencies=\"updateEfficiencies\"\r\n                ></mek-space-efficiency>\r\n            </span>\r\n        </div>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-component-stats :cols=\"4\" :rows=\"5\">\r\n                <div slot=\"col1-row1\" v-if=\"is_ablative\">Kills: {{shield_class.kills}}</div>\r\n                <div slot=\"col1-row1\" v-else>Base Stopping Power: {{round(shield_class.stopping_power,2)}}\r\n                    <br>Final Stopping Power: {{round(calculate_stopping_power(),2)}}\r\n                </div>\r\n                <div slot=\"col1-row2\" v-if=\"armor_type.damage_coefficient!=1\">Armor Type: {{armor_type.type}}</div>\r\n                <div slot=\"col1-row3\" v-if=\"armor_type.damage_coefficient!=1\" style=\"padding-left:10px;\">Damage Coefficient: {{armor_type.damage_coefficient}}</div>\r\n                <div slot=\"col1-row4\" v-if=\"absorption.absorption!=0\">Absorption: {{absorption.absorption*100}}%</div>\r\n                <div slot=\"col2-row1\" v-if=\"type.name.toLowerCase()=='standard' || type.name.toLowerCase()=='active'\">Binder Space: {{round(binder.space,3)}}</div>\r\n                <div slot=\"col2-row1\" v-if=\"type.name.toLowerCase()=='reactive'\">Weakness(es):<div style=\"max-width:150px;margin-left:10px;\">{{feature_list}}</div></div>\r\n                <div slot=\"col2-row2\" v-if=\"type.name.toLowerCase()=='reactive'\">Reset Time: {{reset_time.time}}</div>\r\n                <div slot=\"col2-row3\" v-if=\"type.name.toLowerCase()=='reactive'\">Turns in Use: {{turns_in_use.time}}</div>\r\n                <div slot=\"col2-row4\" v-if=\"type.name.toLowerCase()=='reactive'\">Surge Damage: {{surge_damage}}</div>\r\n                <div slot=\"col3-row1\">Base Space: {{raw_space}}</div>\r\n                <div slot=\"col3-row2\">Space: {{space_cost}}</div>\r\n                <div slot=\"col3-row3\">Weight: {{round(weight,2)}} tons</div>\r\n                <div slot=\"col4-row1\">Base Cost: {{shield_class.cost}}</div>\r\n                <div slot=\"col4-row1\">Multiplier: x{{cost_multiplier}}</div>\r\n                <div slot=\"col4-row1\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n            </mek-component-stats>\r\n            <mek-save-reset-component @save-reset-component=\"componentSaveReset\"></mek-save-reset-component>\r\n        </div>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\n//imports\r\nimport utility_mixin from \"@/mixins/utility_mixin.js\";\r\nimport component_methods_mixin from \"@/mixins/component_methods_mixin\";\r\nimport component_computed_mixin from \"@/mixins/component_computed_mixin\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_shield\",\r\n    mixins:\r\n        [\r\n            utility_mixin, \r\n            component_methods_mixin, \r\n            component_computed_mixin\r\n        ],\r\n    components:\r\n    {\r\n        \"mek-shield-type\":()=>import(/* webpackChunkName: \"mek_shield-type\" */\"./subcomponents/mek_shield-type.vue\"),\r\n        \"mek-shield-class\":()=>import(/* webpackChunkName: \"mek_shield-class\" */\"./subcomponents/mek_shield-class.vue\"),\r\n        \"mek-shield-defense-ability\":()=>import(/* webpackChunkName: \"mek_shield-defense-ability\" */\"./subcomponents/mek_shield-defense-ability.vue\"),\r\n        \"mek-shield-binder\":()=>import(/* webpackChunkName: \"mek_shield-binder\" */\"./subcomponents/mek_shield-binder.vue\"),\r\n        \"mek-shield-reset-time\":()=>import(/* webpackChunkName: \"mek_shield-reset-time\" */\"./subcomponents/mek_shield-reset-time.vue\"),\r\n        \"mek-shield-turns-in-use\":()=>import(/* webpackChunkName: \"mek_shield-turns-in-use\" */\"./subcomponents/mek_shield-turns-in-use.vue\"),\r\n        \"mek-shield-weakness\":()=>import(/* webpackChunkName: \"mek_shield-weakness\" */\"./subcomponents/mek_shield-weakness.vue\"),\r\n        \r\n        \"mek-space-efficiency\":()=>import(/* webpackChunkName: \"mek-space-efficiency\" */\"@/design_components/universal/mek-space-efficiency.vue\"),\r\n        \"mek-component-name\":()=>import(/* webpackChunkName: \"mek-component-name\" */\"@/design_components/universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>import(/* webpackChunkName: \"mek-save-reset-component\" */\"@/design_components/universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>import(/* webpackChunkName: \"mek_component-stats\" */\"@/design_components/universal/mek_component-stats.vue\"),\r\n\r\n        \"mek-armor-type\":()=>import(/* webpackChunkName: \"mek_armor-type\" */\"../universal/mek_armor-type.vue\"),\r\n        \"mek-armor-ram\":()=>import(/* webpackChunkName: \"mek_armor-RAM\" */\"../universal/mek_armor-RAM.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.uuid=null;\r\n        obj.type={name:\"Standard\"};\r\n        obj.component_name=null;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"shield\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.shield_class={code:1,stopping_power:5,kills:25,cost:5,id:\"SL\",name:\"Superlight\"};\r\n\r\n        obj.defense_ability={da:-2,cost:1,name:\"Medium\"};\r\n        obj.cost_multipliers={};\r\n        obj.cost_multipliers.defense_ability=1;\r\n        \r\n        obj.binder={cost:1,space:0,stopping_power_modifier:0};\r\n        obj.cost_multipliers.binder=1;\r\n\r\n        obj.reset_time={time:2,cost:1};\r\n        obj.cost_multipliers.reset_time=1;\r\n        \r\n        obj.turns_in_use={time:\"__INFINITY__\",cost:1};\r\n        obj.cost_multipliers.turns_in_use=1;\r\n\r\n        obj.weakness_array=[{weakness:\"All\",monicker:\"Shield\",cost:1,exclusive:false}];\r\n        obj.cost_multipliers.weakness=1;\r\n\r\n        obj.efficiencies={};\r\n        obj.efficiencies.space={modifier:0,cost:0};\r\n\r\n        obj.armor_type={type:\"Standard\",damage_coefficient:1,cost:1};\r\n        obj.cost_multipliers.armor_type=1;\r\n\r\n        obj.absorption={absorption:0,cost:1,armor_penalty:0};\r\n        obj.cost_multipliers.absorption=1;\r\n\r\n        obj.hasAlert=false;\r\n\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_type:function(_type)\r\n        {\r\n            if(this.type.name.toLowerCase()==_type.name.toLowerCase())\r\n            {\r\n                return;\r\n            }\r\n            this.component_changed=true;\r\n            this.$set(this,\"type\",_type);\r\n            let type=_type.name.toLowerCase();\r\n            if(type===\"reactive\")\r\n            {\r\n                this.shield_class.cost=this.shield_class.stopping_power*3;\r\n\r\n                this.$set(this,\"defense_ability\",{da:-2,cost:1});\r\n                this.cost_multipliers.defense_ability=1;\r\n\r\n                this.$set(this,\"binder\",{cost:1,space:0,stopping_power_modifier:0});\r\n                this.cost_multipliers.binder=1;\r\n\r\n                this.$set(this,\"armor_type\",{type:\"Standard\",damage_coefficient:1,cost:1});\r\n                this.cost_multipliers.armor_type=1;\r\n                this.$set(this,\"absorption\",{absorption:0,cost:1,armor_penalty:0});\r\n                this.cost_multipliers.absorption=1;\r\n            }\r\n            else if(type===\"active\")\r\n            {\r\n                this.shield_class.cost=this.shield_class.stopping_power*1.5;\r\n\r\n                this.$set(this,\"defense_ability\",{da:-2,cost:1,name:\"medium\"});\r\n                this.cost_multipliers.defense_ability=1;\r\n                \r\n                this.$set(this,\"reset_time\",{cost:1,time:2});\r\n                this.cost_multipliers.reset_time=1;\r\n\r\n                this.$set(this,\"turns_in_use\",{time:\"__INFINITY__\",cost:1});\r\n                this.cost_multipliers.turns_in_use=1;\r\n\r\n                this.$set(this,\"weakness_array\",[{weakness:\"All\",monicker:\"Shield\",cost:1,exclusive:false}]);\r\n                this.cost_multipliers.weakness=1;\r\n            }\r\n            else if(type==\"standard\")\r\n            {\r\n                this.shield_class.cost=this.shield_class.stopping_power;\r\n\r\n                this.$set(this,\"reset_time\",{cost:1,time:2});\r\n                this.cost_multipliers.reset_time=1;\r\n\r\n                this.$set(this,\"turns_in_use\",{time:\"__INFINITY__\",cost:1});\r\n                this.cost_multipliers.turns_in_use=1;\r\n\r\n                this.$set(this,\"weakness_array\",[{weakness:\"All\",monicker:\"Shield\",cost:1,exclusive:false}]);\r\n                this.cost_multipliers.weakness=1;\r\n            }\r\n            this.component_changed=true;\r\n        },\r\n        select_class_code:function(_shield_class_obj)\r\n        {\r\n            this.$set(this,\"shield_class\",_shield_class_obj);\r\n            this.component_changed=true;\r\n        },\r\n        select_da:function(_da_obj)\r\n        {\r\n            this.$set(this,\"defense_ability\",_da_obj);\r\n            this.cost_multipliers.defense_ability=_da_obj.cost;\r\n            this.component_changed=true;\r\n        },\r\n        select_binder:function(_binder_obj)\r\n        {\r\n            this.$set(this,\"binder\",_binder_obj);\r\n            this.cost_multipliers.binder=_binder_obj.cost;\r\n            this.shield_name;\r\n            this.component_changed=true;\r\n        },\r\n        select_reset:function(_reset_obj)\r\n        {\r\n            this.$set(this,\"reset_time\",_reset_obj);\r\n            this.cost_multipliers.reset_time=_reset_obj.cost;\r\n            this.component_changed=true;\r\n        },\r\n        select_turns:function(_turns_obj)\r\n        {\r\n            this.$set(this,\"turns_in_use\",_turns_obj);\r\n            this.turns_in_use.time=this.turns_in_use.time===null?Infinity:this.turns_in_use.time;\r\n            this.cost_multipliers.turns_in_use=_turns_obj.cost;\r\n            this.component_changed=true;\r\n        },\r\n        select_weakness:function(_weakness_obj)\r\n        {\r\n            this.$set(this,\"weakness_array\",_weakness_obj);\r\n            this.cost_multipliers.weakness=this.weakness_array.reduce(function(_cost_multi,_val)\r\n            {\r\n                _cost_multi*=_val.cost;\r\n                return _cost_multi;\r\n            },1);\r\n            this.component_changed=true;\r\n        },\r\n        select_armor_type(_armor_type)\r\n        {\r\n            this.$set(this,\"armor_type\",_armor_type);\r\n            this.cost_multipliers.armor_type=this.armor_type.cost;\r\n        },\r\n        select_absorption(_absorption)\r\n        {\r\n            this.$set(this,\"absorption\",_absorption);\r\n            this.cost_multipliers.absorption=this.absorption.cost;\r\n        },\r\n        updateComponentName:function(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        calculate_stopping_power:function()\r\n        {\r\n            let sp_modifier=this.absorption!=0 ? this.absorption.armor_penalty + this.binder.stopping_power_modifier : this.binder.stopping_power_modifier;\r\n            return this.shield_class.stopping_power - (this.shield_class.stopping_power * sp_modifier);\r\n        },\r\n        weighted_stopping_power()\r\n        {\r\n            return this.shield_class.stopping_power - (this.shield_class.stopping_power * this.binder.stopping_power_modifier);\r\n        },\r\n        updateEfficiencies:function(_data)\r\n        {\r\n            this.$set(this.efficiencies,\"space\",_data);\r\n            this.component_changed=true\r\n        },\r\n        ingest_data:function(_data_object)\r\n        {\r\n            let alertMessage=\"Shield Has No Type, resetting to 'standard' shield.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(this.component_name==this.shield_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=this.hasAlert;});\r\n        },\r\n        output_shield_data:function()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"shield\";\r\n            return_data.component_name=this.component_name===null?this.shield_name:this.component_name;\r\n            return_data.type=JSON.parse(JSON.stringify(this.type));\r\n            return_data.shield_class=JSON.parse(JSON.stringify(this.shield_class));\r\n            return_data.cost_multipliers=JSON.parse(JSON.stringify(this.cost_multipliers));\r\n            return_data.efficiencies=JSON.parse(JSON.stringify(this.efficiencies));\r\n            \r\n            return_data.cost=this.cost;\r\n            return_data.cost_multiplier=this.cost_multiplier;\r\n            return_data.is_ablative=this.is_ablative;\r\n            return_data.weight=this.weight;\r\n\r\n            switch(this.type.name.toLowerCase())\r\n            {\r\n                case \"standard\":\r\n                    return_data.defense_ability=JSON.parse(JSON.stringify(this.defense_ability));\r\n                    // eslint-disable-next-line\r\n                case \"active\":\r\n                    return_data.binder=JSON.parse(JSON.stringify(this.binder));\r\n                    return_data.armor_type=JSON.parse(JSON.stringify(this.armor_type));\r\n                    return_data.absorption=JSON.parse(JSON.stringify(this.absorption));\r\n                    break;\r\n                case \"reactive\":\r\n                    return_data.reset_time=JSON.parse(JSON.stringify(this.reset_time));\r\n                    return_data.turns_in_use=JSON.parse(JSON.stringify(this.turns_in_use));\r\n                    return_data.turns_in_use.time=return_data.turns_in_use.time===null?\"Infinity\":return_data.turns_in_use.time;\r\n                    return_data.weakness_array=JSON.parse(JSON.stringify(this.weakness_array));\r\n                    return_data.surge_damage=this.surge_damage;\r\n                    break;\r\n            }\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return return_data;\r\n        },\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"clear\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_shield_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                        break;\r\n                    }\r\n                    // eslint-disable-next-line\r\n                case \"clear\":\r\n                    this.uuid=null;\r\n                    this.select_type({name:\"Standard\"});\r\n                    this.$set(this,\"shield_class\",{code:1,stopping_power:5,kills:25,cost:5,id:\"SL\",name:\"Superlight\"});\r\n                    this.$set(this,\"defense_ability\",{da:-2,cost:1,name:\"Medium\"});\r\n                    this.cost_multipliers.defense_ability=1;\r\n                    this.$set(this,\"binder\",{cost:1,space:0,stopping_power_modifier:0});\r\n                    this.cost_multipliers.binder=1;\r\n                    this.efficiencies.space.modifier=0;\r\n                    this.$set(this,\"armor_type\",{type:\"Standard\",damage_coefficient:1,cost:1});\r\n                    this.cost_multipliers.armor_type=1;\r\n                    this.$set(this,\"absorption\",{absorption:0,cost:1,armor_penalty:0});\r\n                    this.cost_multipliers.absorption=1;\r\n                    this.component_name=null;\r\n                    this.shield_name;//must call to force recompute\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        },\r\n        handleAlert(_alert_status)\r\n        {\r\n            this.hasAlert=_alert_status;\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        is_ablative:function()\r\n        {\r\n            if(this.weakness_array===null || this.weakness_array.length==0)\r\n            {\r\n                return false;\r\n            }\r\n            let isAblative=this.weakness_array.some(function(_val)\r\n            {\r\n                if(_val.weakness.toLowerCase()==\"ablative\")\r\n                {\r\n                    return true;\r\n                }\r\n                return false;\r\n            },this);\r\n\r\n            return isAblative;\r\n        },\r\n        surge_damage:function()\r\n        {\r\n            if(this.weakness_array===null || this.weakness_array.length==0)\r\n            {\r\n                return false;\r\n            }\r\n            let isSurge=this.weakness_array.some(function(_val)\r\n            {\r\n                if(_val.weakness.toLowerCase()==\"surge\")\r\n                {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            return isSurge ? this.shield_class.stopping_power : null;\r\n        },\r\n        cost_multiplier:function()\r\n        {\r\n            let multiplier=1;\r\n            multiplier*=this.cost_multipliers.defense_ability;\r\n            multiplier*=this.cost_multipliers.binder;\r\n            multiplier*=this.cost_multipliers.reset_time;\r\n            multiplier*=this.cost_multipliers.turns_in_use;\r\n            multiplier*=this.cost_multipliers.weakness;\r\n\r\n            return this.round(multiplier,2);\r\n        },\r\n        raw_space:function()\r\n        {\r\n            if(this.type.name.toLowerCase()==\"standard\")\r\n            {\r\n                return 1;\r\n            }\r\n            let base_cost=this.shield_class.cost * this.cost_multiplier;\r\n            if(this.type.name.toLowerCase()==\"active\")\r\n            {\r\n                return this.round(base_cost/2, 2);\r\n            }\r\n            else if(this.type.name.toLowerCase()==\"reactive\")\r\n            {\r\n                return this.round(base_cost,2);\r\n            }\r\n            return undefined;\r\n        },\r\n        cost:function()\r\n        {\r\n            let subtotal_cost=this.shield_class.cost * this.cost_multiplier;\r\n            subtotal_cost *= this.cost_multipliers.armor_type;\r\n            subtotal_cost *= this.cost_multipliers.absorption;\r\n            //special consideration for armor types and energy absorbing as they do not increase space, only cost\r\n            subtotal_cost += this.efficiencies.space.cost;\r\n\r\n            return this.round(subtotal_cost,2);\r\n        },\r\n        damage_capacity()\r\n        {\r\n            return this.round(this.weighted_stopping_power(this.shield_class.code)/2,2);\r\n        },\r\n        shield_name:function()\r\n        {\r\n            let fullname=\"\";\r\n            if(this.type.name.toLowerCase()==\"standard\")\r\n            {\r\n                fullname=this.defense_ability.name;\r\n            }\r\n            fullname+=\" \"+this.shield_class.name;\r\n            if(this.type.name.toLowerCase()==\"standard\" || this.type.name.toLowerCase()==\"active\")\r\n            {\r\n                this.binder;\r\n                fullname+=this.type.name.toLowerCase()==\"active\"?\" Active\":\"\";\r\n                fullname+=this.absorption!==null&&this.absorption.absorption>0?\" Absorbing\":\"\";\r\n                fullname+=this.armor_type!==null&&this.armor_type.type.toLowerCase()!=\"standard\" ? \" \"+this.armor_type.type : \"\";\r\n                fullname+=\" \"+this.round(this.calculate_stopping_power(),2)+\"SP\";\r\n                fullname+=this.binder!==null&&this.binder.space>0?\" Binder\":\" Shield\";\r\n            }\r\n            else if(this.type.name.toLowerCase()==\"reactive\")\r\n            {\r\n                fullname+=\" Reactive\";\r\n                let exclusive_name=\"\";\r\n                let partialname=this.weakness_array.reduce(function(_name,_el)\r\n                {\r\n                    if(_el.exclusive)\r\n                    {\r\n                        exclusive_name=_el.monicker;\r\n                    }\r\n                    else\r\n                    {\r\n                        _name+=\" \"+_el.monicker;\r\n                    }\r\n                    return _name;\r\n                },\"\");\r\n                let sp_k_name = this.is_ablative ? this.shield_class.kills+\"K\" : this.shield_class.stopping_power+\"SP\";\r\n                fullname+=\" \"+exclusive_name+\" \"+sp_k_name+\" \"+partialname;\r\n            }\r\n            fullname=fullname.replace(/\\s+/g,\" \");\r\n            return fullname;\r\n        },\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_shield-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_shield-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_shield-main.vue?vue&type=template&id=3246f4a4&\"\nimport script from \"./mek_shield-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_shield-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default\r\n{\r\n    computed:\r\n    {\r\n        space_cost()\r\n        {\r\n            return this.round(this.raw_space - this.efficiencies.space.modifier,2);\r\n        },\r\n        cost_multiplier()\r\n        {\r\n            let cost_multiplier=1;\r\n            for(let multi in this.cost_multipliers)\r\n            {\r\n                cost_multiplier*=this.cost_multipliers[multi];\r\n            }\r\n            return this.round(cost_multiplier,2);\r\n        },\r\n        weight()\r\n        {\r\n            return this.round((this.damage_capacity / 2),2);\r\n        },\r\n        feature_list()\r\n        {\r\n            if(typeof this.feature_array===\"undefined\")\r\n            {\r\n                return \"\";\r\n            }\r\n            return this.feature_array.reduce(function(_string, _val, _index)\r\n            {\r\n                _string+=_index>0 ? \", \" : \"\";\r\n                _string+=_val.feature;\r\n                return _string;\r\n            },\"\");\r\n        },\r\n        newComponent()\r\n        {//responsible for ingesting data from the store\r\n            let selectedComponent=JSON.parse(JSON.stringify(this.$store.getters.selectedComponent));\r\n\r\n            if(typeof selectedComponent!==\"undefined\" && selectedComponent!==null)\r\n            {\r\n                if(selectedComponent.uuid!==this.uuid \r\n                    && selectedComponent.component_category==this.component_category\r\n                    && selectedComponent.component_type==this.component_type)\r\n                {\r\n                    this.ingest_data(selectedComponent);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n    }\r\n};","export default\r\n{\r\n    methods:\r\n    {\r\n        universal_ingest_data(_data_object,_alertMessage)\r\n        {\r\n            this.original_component=JSON.stringify(_data_object);//store a copy as a JSON object for 'reset' purposes\r\n            if(_data_object===null)\r\n            {\r\n                this.componentSaveReset(\"clear\");\r\n                //generic error comment\r\n                this.$store.commit(\"alertMessage\",_alertMessage);\r\n            }\r\n\r\n            for(let _property in _data_object)\r\n            {//exclude computed properties that are auto updated\r\n                if(Object.keys(this._computedWatchers).includes(_property))\r\n                {\r\n                    continue;\r\n                }\r\n                if(typeof _data_object[_property]===\"object\" && !Array.isArray(_data_object[_property]))\r\n                {\r\n                    if(typeof this[_property]!==\"object\" || this[_property]===null)\r\n                    {\r\n                        this[_property]={};\r\n                    }\r\n                    for(let _sub_property in _data_object[_property])\r\n                    {\r\n                        this.$set(this[_property],[_sub_property],_data_object[_property][_sub_property]);\r\n                    }\r\n                }\r\n                else if(Array.isArray(_data_object[_property]))\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n                else\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n            }\r\n            this.$forceUpdate();\r\n        },\r\n        updateComponentName:function(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
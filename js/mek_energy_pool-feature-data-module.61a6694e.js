(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["mek_energy_pool-feature-data-module"],{"46e2":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "feature_data_table", function() { return feature_data_table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "feature_validate", function() { return feature_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has_feature", function() { return has_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_feature", function() { return get_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cleaned_feature", function() { return cleaned_feature; });\n/* harmony import */ var _data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("706d");\n//data table module, raw data output for re-use in non-vue-component formats\n //create new feature_data_table\n\nlet feature_data_table = [{\n  feature: "Morphable",\n  cost: 1.25\n}, {\n  feature: "Fragile",\n  cost: 1\n}];\nlet data_table_keys = ["feature", "cost"]; //data validator for feature_data_table\n//call partial_validate with appropriate data for full validate\n\nlet feature_validate = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_validate */ "d"])(feature_data_table, data_table_keys); //completed function for checking if data has data\n\nlet has_feature = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_has_feature */ "c"])(feature_data_table); //completed function for returning matching data\n\nlet get_feature = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_get_feature */ "b"])(feature_data_table, has_feature);\n/*** \r\n * \r\n * find way to switch to partial function\r\n * \r\n * ***/\n\nlet cleaned_feature = function cleaned_feature(_feature_array, _pkey) {\n  let update = false;\n  let key_list = [];\n  let alerts = [];\n  let json_data = JSON.stringify(_feature_array);\n\n  if (_feature_array === undefined || _pkey === undefined) {\n    alerts.push("Mek_Energy_Pool-Feature: ");\n    let error = _feature_array === undefined ? "**** Missing feature array. Returning blank. ****" : "**** No primary key provided. Returning blank. ****";\n    alerts.push(error);\n    return {\n      cleaned_array: [],\n      update: true,\n      key_list: key_list,\n      alerts: alerts\n    };\n  }\n\n  if (_feature_array.length == 0) {\n    //no feature selected, return empty\n    return {\n      cleaned_array: [],\n      update: update,\n      key_list: key_list,\n      alerts: alerts\n    };\n  }\n\n  let temp_selected_feature_array = _feature_array.reduceRight((_cleaned_array, _val) => {\n    if (_val[_pkey] === undefined) {\n      //if feature with pkey doesn\'t exist in data table, ignore\n      alerts.push("Mek_Energy_Pool-Feature: " + json_data);\n      alerts.push("**** Missing primary key. Ignoring. ****");\n      return _cleaned_array;\n    }\n\n    let clean_feature = _val;\n\n    if (!feature_validate(_val)) {\n      //invalid data\n      alerts.push("Mek_Energy_Pool-Feature: " + json_data);\n      alerts.push("**** Invalid data, attempting to reset. ****");\n      clean_feature = get_feature(_pkey, _val[_pkey]);\n      _val = clean_feature; //replace current value with correct value\n\n      update = true; //attempt to set to corrected feature\n    }\n\n    if (clean_feature === null) {\n      //no matching feature\n      alerts.push("**** Unable to reset. No matching data. ****");\n      update = true;\n      return _cleaned_array; //ignore element\n    }\n\n    if (!key_list.includes(_val[_pkey])) {\n      _cleaned_array.push(_val);\n\n      key_list.push(_val[_pkey]);\n    }\n\n    return _cleaned_array;\n  }, []);\n\n  temp_selected_feature_array = temp_selected_feature_array.reverse();\n  return {\n    cleaned_array: temp_selected_feature_array,\n    update: update,\n    key_list: key_list,\n    alerts: alerts\n  }; //returns an object with the pruned feature array, whether it was updated, and the key_list\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZGF0YV90YWJsZV9tb2R1bGVzL21la19lbmVyZ3lfcG9vbC9tZWtfZW5lcmd5X3Bvb2wtZmVhdHVyZS1kYXRhLW1vZHVsZS5qcz80NmUyIl0sIm5hbWVzIjpbImZlYXR1cmVfZGF0YV90YWJsZSIsImZlYXR1cmUiLCJjb3N0IiwiZGF0YV90YWJsZV9rZXlzIiwiZmVhdHVyZV92YWxpZGF0ZSIsInBhcnRpYWxfdmFsaWRhdGUiLCJoYXNfZmVhdHVyZSIsInBhcnRpYWxfaGFzX2ZlYXR1cmUiLCJnZXRfZmVhdHVyZSIsInBhcnRpYWxfZ2V0X2ZlYXR1cmUiLCJjbGVhbmVkX2ZlYXR1cmUiLCJfZmVhdHVyZV9hcnJheSIsIl9wa2V5IiwidXBkYXRlIiwia2V5X2xpc3QiLCJhbGVydHMiLCJqc29uX2RhdGEiLCJKU09OIiwic3RyaW5naWZ5IiwidW5kZWZpbmVkIiwicHVzaCIsImVycm9yIiwiY2xlYW5lZF9hcnJheSIsImxlbmd0aCIsInRlbXBfc2VsZWN0ZWRfZmVhdHVyZV9hcnJheSIsInJlZHVjZVJpZ2h0IiwiX2NsZWFuZWRfYXJyYXkiLCJfdmFsIiwiY2xlYW5fZmVhdHVyZSIsImluY2x1ZGVzIiwicmV2ZXJzZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtDQUlBOztBQUNBLElBQUlBLGtCQUFrQixHQUN0QixDQUNJO0FBQUNDLFNBQU8sRUFBQyxXQUFUO0FBQXFCQyxNQUFJLEVBQUM7QUFBMUIsQ0FESixFQUVJO0FBQUNELFNBQU8sRUFBQyxTQUFUO0FBQW1CQyxNQUFJLEVBQUM7QUFBeEIsQ0FGSixDQURBO0FBS0EsSUFBSUMsZUFBZSxHQUFDLENBQUMsU0FBRCxFQUFXLE1BQVgsQ0FBcEIsQyxDQUVBO0FBQ0E7O0FBQ0EsSUFBSUMsZ0JBQWdCLEdBQUNDLCtIQUFnQixDQUFDTCxrQkFBRCxFQUFxQkcsZUFBckIsQ0FBckMsQyxDQUVBOztBQUNBLElBQUlHLFdBQVcs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eEREIiwiZmlsZSI6IjQ2ZTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL2RhdGEgdGFibGUgbW9kdWxlLCByYXcgZGF0YSBvdXRwdXQgZm9yIHJlLXVzZSBpbiBub24tdnVlLWNvbXBvbmVudCBmb3JtYXRzXHJcbmltcG9ydCB7cGFydGlhbF92YWxpZGF0ZSwgcGFydGlhbF9oYXNfZmVhdHVyZSwgcGFydGlhbF9nZXRfZmVhdHVyZX1cclxuICAgIGZyb20gXCJAL2RhdGFfdGFibGVfbW9kdWxlcy91bml2ZXJzYWwvbWVrX3BhcnRpYWwtZnVuY3Rpb24tZGF0YS1tb2R1bGVcIjtcclxuXHJcbi8vY3JlYXRlIG5ldyBmZWF0dXJlX2RhdGFfdGFibGVcclxubGV0IGZlYXR1cmVfZGF0YV90YWJsZT1cclxuW1xyXG4gICAge2ZlYXR1cmU6XCJNb3JwaGFibGVcIixjb3N0OjEuMjV9LFxyXG4gICAge2ZlYXR1cmU6XCJGcmFnaWxlXCIsY29zdDoxfSxcclxuXTtcclxubGV0IGRhdGFfdGFibGVfa2V5cz1bXCJmZWF0dXJlXCIsXCJjb3N0XCJdO1xyXG5cclxuLy9kYXRhIHZhbGlkYXRvciBmb3IgZmVhdHVyZV9kYXRhX3RhYmxlXHJcbi8vY2FsbCBwYXJ0aWFsX3ZhbGlkYXRlIHdpdGggYXBwcm9wcmlhdGUgZGF0YSBmb3IgZnVsbCB2YWxpZGF0ZVxyXG5sZXQgZmVhdHVyZV92YWxpZGF0ZT1wYXJ0aWFsX3ZhbGlkYXRlKGZlYXR1cmVfZGF0YV90YWJsZSwgZGF0YV90YWJsZV9rZXlzKTtcclxuXHJcbi8vY29tcGxldGVkIGZ1bmN0aW9uIGZvciBjaGVja2luZyBpZiBkYXRhIGhhcyBkYXRhXHJcbmxldCBoYXNfZmVhdHVyZT1wYXJ0aWFsX2hhc19mZWF0dXJlKGZlYXR1cmVfZGF0YV90YWJsZSk7XHJcblxyXG4vL2NvbXBsZXRlZCBmdW5jdGlvbiBmb3IgcmV0dXJuaW5nIG1hdGNoaW5nIGRhdGFcclxubGV0IGdldF9mZWF0dXJlPXBhcnRpYWxfZ2V0X2ZlYXR1cmUoZmVhdHVyZV9kYXRhX3RhYmxlLCBoYXNfZmVhdHVyZSk7XHJcblxyXG4vKioqIFxyXG4gKiBcclxuICogZmluZCB3YXkgdG8gc3dpdGNoIHRvIHBhcnRpYWwgZnVuY3Rpb25cclxuICogXHJcbiAqICoqKi9cclxubGV0IGNsZWFuZWRfZmVhdHVyZT1mdW5jdGlvbihfZmVhdHVyZV9hcnJheSwgX3BrZXkpXHJcbntcclxuICAgIGxldCB1cGRhdGU9ZmFsc2U7XHJcbiAgICBsZXQga2V5X2xpc3Q9W107XHJcbiAgICBsZXQgYWxlcnRzPVtdO1xyXG4gICAgbGV0IGpzb25fZGF0YT1KU09OLnN0cmluZ2lmeShfZmVhdHVyZV9hcnJheSk7XHJcbiAgICBpZihfZmVhdHVyZV9hcnJheT09PXVuZGVmaW5lZCB8fCBfcGtleT09PXVuZGVmaW5lZClcclxuICAgIHtcclxuICAgICAgICBhbGVydHMucHVzaChcIk1la19FbmVyZ3lfUG9vbC1GZWF0dXJlOiBcIik7XHJcbiAgICAgICAgbGV0IGVycm9yPV9mZWF0dXJlX2FycmF5PT09dW5kZWZpbmVkXHJcbiAgICAgICAgICAgID8gXCIqKioqIE1pc3NpbmcgZmVhdHVyZSBhcnJheS4gUmV0dXJuaW5nIGJsYW5rLiAqKioqXCJcclxuICAgICAgICAgICAgOiBcIioqKiogTm8gcHJpbWFyeSBrZXkgcHJvdmlkZWQuIFJldHVybmluZyBibGFuay4gKioqKlwiO1xyXG4gICAgICAgIGFsZXJ0cy5wdXNoKGVycm9yKTtcclxuICAgICAgICByZXR1cm4ge2NsZWFuZWRfYXJyYXk6W10sdXBkYXRlOnRydWUsa2V5X2xpc3Q6a2V5X2xpc3QsYWxlcnRzOmFsZXJ0c307XHJcbiAgICB9XHJcblxyXG4gICAgaWYoX2ZlYXR1cmVfYXJyYXkubGVuZ3RoPT0wKVxyXG4gICAgey8vbm8gZmVhdHVyZSBzZWxlY3RlZCwgcmV0dXJuIGVtcHR5XHJcbiAgICAgICAgcmV0dXJuIHtjbGVhbmVkX2FycmF5OltdLHVwZGF0ZTp1cGRhdGUsa2V5X2xpc3Q6a2V5X2xpc3QsYWxlcnRzOmFsZXJ0c307XHJcbiAgICB9ICAgIFxyXG5cclxuICAgIGxldCB0ZW1wX3NlbGVjdGVkX2ZlYXR1cmVfYXJyYXk9X2ZlYXR1cmVfYXJyYXkucmVkdWNlUmlnaHQoKF9jbGVhbmVkX2FycmF5LCBfdmFsKT0+XHJcbiAgICB7XHJcbiAgICAgICAgaWYoX3ZhbFtfcGtleV09PT11bmRlZmluZWQpXHJcbiAgICAgICAgey8vaWYgZmVhdHVyZSB3aXRoIHBrZXkgZG9lc24ndCBleGlzdCBpbiBkYXRhIHRhYmxlLCBpZ25vcmVcclxuICAgICAgICAgICAgYWxlcnRzLnB1c2goXCJNZWtfRW5lcmd5X1Bvb2wtRmVhdHVyZTogXCIranNvbl9kYXRhKTtcclxuICAgICAgICAgICAgYWxlcnRzLnB1c2goXCIqKioqIE1pc3NpbmcgcHJpbWFyeSBrZXkuIElnbm9yaW5nLiAqKioqXCIpO1xyXG4gICAgICAgICAgICByZXR1cm4gX2NsZWFuZWRfYXJyYXk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBjbGVhbl9mZWF0dXJlPV92YWw7XHJcbiAgICAgICAgaWYoIWZlYXR1cmVfdmFsaWRhdGUoX3ZhbCkpXHJcbiAgICAgICAgey8vaW52YWxpZCBkYXRhXHJcbiAgICAgICAgICAgIGFsZXJ0cy5wdXNoKFwiTWVrX0VuZXJneV9Qb29sLUZlYXR1cmU6IFwiK2pzb25fZGF0YSk7XHJcbiAgICAgICAgICAgIGFsZXJ0cy5wdXNoKFwiKioqKiBJbnZhbGlkIGRhdGEsIGF0dGVtcHRpbmcgdG8gcmVzZXQuICoqKipcIilcclxuICAgICAgICAgICAgY2xlYW5fZmVhdHVyZT1nZXRfZmVhdHVyZShfcGtleSxfdmFsW19wa2V5XSk7XHJcbiAgICAgICAgICAgIF92YWw9Y2xlYW5fZmVhdHVyZTsvL3JlcGxhY2UgY3VycmVudCB2YWx1ZSB3aXRoIGNvcnJlY3QgdmFsdWVcclxuICAgICAgICAgICAgdXBkYXRlPXRydWU7XHJcbiAgICAgICAgICAgIC8vYXR0ZW1wdCB0byBzZXQgdG8gY29ycmVjdGVkIGZlYXR1cmVcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoY2xlYW5fZmVhdHVyZT09PW51bGwpXHJcbiAgICAgICAgey8vbm8gbWF0Y2hpbmcgZmVhdHVyZVxyXG4gICAgICAgICAgICBhbGVydHMucHVzaChcIioqKiogVW5hYmxlIHRvIHJlc2V0LiBObyBtYXRjaGluZyBkYXRhLiAqKioqXCIpXHJcbiAgICAgICAgICAgIHVwZGF0ZT10cnVlO1xyXG4gICAgICAgICAgICByZXR1cm4gX2NsZWFuZWRfYXJyYXk7XHJcbiAgICAgICAgICAgIC8vaWdub3JlIGVsZW1lbnRcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoIWtleV9saXN0LmluY2x1ZGVzKF92YWxbX3BrZXldKSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIF9jbGVhbmVkX2FycmF5LnB1c2goX3ZhbCk7XHJcbiAgICAgICAgICAgIGtleV9saXN0LnB1c2goX3ZhbFtfcGtleV0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gX2NsZWFuZWRfYXJyYXk7XHJcbiAgICB9LFtdKTtcclxuICAgIHRlbXBfc2VsZWN0ZWRfZmVhdHVyZV9hcnJheT10ZW1wX3NlbGVjdGVkX2ZlYXR1cmVfYXJyYXkucmV2ZXJzZSgpO1xyXG4gICAgcmV0dXJuIHtjbGVhbmVkX2FycmF5OnRlbXBfc2VsZWN0ZWRfZmVhdHVyZV9hcnJheSx1cGRhdGU6dXBkYXRlLGtleV9saXN0OmtleV9saXN0LGFsZXJ0czphbGVydHN9O1xyXG4gICAgLy9yZXR1cm5zIGFuIG9iamVjdCB3aXRoIHRoZSBwcnVuZWQgZmVhdHVyZSBhcnJheSwgd2hldGhlciBpdCB3YXMgdXBkYXRlZCwgYW5kIHRoZSBrZXlfbGlzdFxyXG59O1xyXG5cclxuZXhwb3J0IHtmZWF0dXJlX2RhdGFfdGFibGUsIGZlYXR1cmVfdmFsaWRhdGUsIGhhc19mZWF0dXJlLCBnZXRfZmVhdHVyZSwgY2xlYW5lZF9mZWF0dXJlfTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///46e2\n')},"706d":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return partial_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return partial_has_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return partial_get_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return partial_cleaned_feature; });\n//data table module, raw data output for re-use in non-vue-component formats\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \n//          neutral and reusable across all data modules\n//partial data validator\n//called with data_table and validation_keys in data-module\nlet partial_validate = (_data_table, _validation_keys) => _data => {\n  //_data_table: Array, array of data to validate against\n  //_validation_keys: Array, keys to be compared between passed in data and data_table\n  //_data: Object, data to be compared to data table \n  if (typeof _data === "undefined" || !Array.isArray(_validation_keys) || _validation_keys.length == 0) {\n    return false;\n  }\n\n  let valid = _data_table.some(_val => {\n    return _validation_keys.every(_keys => {\n      //return true if all validation_keys in _data match an element in _data_table\n      return _data[_keys] == _val[_keys];\n    });\n  });\n\n  return valid;\n}; //partial_has_feature, determine if provided data table has matching element with provided key and val\n//called in data module to generate full function with local data\n\n\nlet partial_has_feature = _data_table => (_key, _val) => {\n  return _data_table.some(_data => {\n    return _data[_key] !== undefined && _data[_key] == _val;\n  });\n}; //partial get_feature, returns full function for data module\n//requires data_table (array) and module\'s has_feature function\n//returns full matching element in provided data table\n//has_feature must exist in data table module\n\n\nlet partial_get_feature = (_data_table, _has_feature) => (_key, _val) => {\n  let found_feature = null;\n\n  if (_has_feature(_key, _val)) {\n    _data_table.some(_table_val => {\n      if (_table_val[_key] == _val) {\n        found_feature = _table_val;\n        return true;\n      }\n    }, undefined);\n  }\n\n  return found_feature;\n};\n\nlet partial_cleaned_feature = (_validator, _has_feature, _get_feature, _default_data, _name) => (_pkey, _feature) => {\n  //input: primary key, selected feature, filtered data table\n  let data = undefined;\n  let key_list = [];\n  let update = false;\n  let alerts = [];\n  let json_data = JSON.stringify(_feature);\n\n  if (_feature === undefined || !_has_feature(_pkey, _feature[_pkey])) {\n    data = _default_data;\n    key_list = [data[_pkey]];\n    update = true;\n    alerts.push(_name + ": " + json_data);\n    alerts.push("**** Invalid data. Reseting to default. ****");\n  } else if (!_validator(_feature)) {\n    data = JSON.parse(JSON.stringify(_get_feature(_pkey, _feature[_pkey])));\n    key_list = [data[_pkey]];\n    update = true;\n    alerts.push(_name + ": " + json_data);\n    alerts.push("**** Invalid data. Reseting. ****");\n  } else {\n    data = JSON.parse(JSON.stringify(_feature));\n    key_list = [data[_pkey]];\n    update = false;\n  }\n\n  return {\n    data: data,\n    key_list: key_list,\n    update: update,\n    alerts: alerts\n  };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///706d\n')}}]);
(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["mek_shield-binder","mek_shield-binder-data-module"],{"706d":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return partial_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return partial_has_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return partial_get_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return partial_cleaned_feature; });\nvar _this = undefined;\n\n//data table module, raw data output for re-use in non-vue-component formats\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \n//          neutral and reusable across all data modules\n//partial data validator\n//called with data_table and validation_keys in data-module\nvar partial_validate = function partial_validate(_data_table, _validation_keys) {\n  return function (_data) {\n    //_data_table: Array, array of data to validate against\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\n    //_data: Object, data to be compared to data table \n    if (typeof _data === "undefined" || !Array.isArray(_validation_keys) || _validation_keys.length == 0) {\n      return false;\n    }\n\n    var valid = _data_table.some(function (_val) {\n      return _validation_keys.every(function (_keys) {\n        //return true if all validation_keys in _data match an element in _data_table\n        return _data[_keys] == _val[_keys];\n      });\n    });\n\n    return valid;\n  };\n}; //partial_has_feature, determine if provided data table has matching element with provided key and val\n//called in data module to generate full function with local data\n\n\nvar partial_has_feature = function partial_has_feature(_data_table) {\n  return function (_key, _val) {\n    return _data_table.some(function (_data) {\n      return _data[_key] !== undefined && _data[_key] == _val;\n    });\n  };\n}; //partial get_feature, returns full function for data module\n//requires data_table (array) and module\'s has_feature function\n//returns full matching element in provided data table\n//has_feature must exist in data table module\n\n\nvar partial_get_feature = function partial_get_feature(_data_table, _has_feature) {\n  return function (_key, _val) {\n    var found_feature = null;\n\n    if (_has_feature(_key, _val)) {\n      _data_table.some(function (_table_val) {\n        if (_table_val[_key] == _val) {\n          found_feature = _table_val;\n          return true;\n        }\n      }, _this);\n    }\n\n    return found_feature;\n  };\n};\n\nvar partial_cleaned_feature = function partial_cleaned_feature(_validator, _has_feature, _get_feature, _default_data, _name) {\n  return function (_pkey, _feature) {\n    //input: primary key, selected feature, filtered data table\n    var data = undefined;\n    var key_list = [];\n    var update = false;\n    var alerts = [];\n    var json_data = JSON.stringify(_feature);\n\n    if (_feature === undefined || !_has_feature(_pkey, _feature[_pkey])) {\n      data = _default_data;\n      key_list = [data[_pkey]];\n      update = true;\n      alerts.push(_name + ": " + json_data);\n      alerts.push("**** Invalid data. Reseting to default. ****");\n    } else if (!_validator(_feature)) {\n      data = JSON.parse(JSON.stringify(_get_feature(_pkey, _feature[_pkey])));\n      key_list = [data[_pkey]];\n      update = true;\n      alerts.push(_name + ": " + json_data);\n      alerts.push("**** Invalid data. Reseting. ****");\n    } else {\n      data = JSON.parse(JSON.stringify(_feature));\n      key_list = [data[_pkey]];\n      update = false;\n    }\n\n    return {\n      data: data,\n      key_list: key_list,\n      update: update,\n      alerts: alerts\n    };\n  };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZGF0YV90YWJsZV9tb2R1bGVzL3VuaXZlcnNhbC9tZWtfcGFydGlhbC1mdW5jdGlvbi1kYXRhLW1vZHVsZS5qcz83MDZkIl0sIm5hbWVzIjpbInBhcnRpYWxfdmFsaWRhdGUiLCJfZGF0YV90YWJsZSIsIl92YWxpZGF0aW9uX2tleXMiLCJfZGF0YSIsIkFycmF5IiwiaXNBcnJheSIsImxlbmd0aCIsInZhbGlkIiwic29tZSIsIl92YWwiLCJldmVyeSIsIl9rZXlzIiwicGFydGlhbF9oYXNfZmVhdHVyZSIsIl9rZXkiLCJ1bmRlZmluZWQiLCJwYXJ0aWFsX2dldF9mZWF0dXJlIiwiX2hhc19mZWF0dXJlIiwiZm91bmRfZmVhdHVyZSIsIl90YWJsZV92YWwiLCJwYXJ0aWFsX2NsZWFuZWRfZmVhdHVyZSIsIl92YWxpZGF0b3IiLCJfZ2V0X2ZlYXR1cmUiLCJfZGVmYXVsdF9kYXRhIiwiX25hbWUiLCJfcGtleSIsIl9mZWF0dXJlIiwiZGF0YSIsImtleV9saXN0IiwidXBkYXRlIiwiYWxlcnRzIiwianNvbl9kYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsInB1c2giLCJwYXJzZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBLElBQUlBLGdCQUFnQixHQUFDLFNBQWpCQSxnQkFBaUIsQ0FBQ0MsV0FBRCxFQUFhQyxnQkFBYjtBQUFBLFNBQWdDLFVBQUNDLEtBQUQsRUFDckQ7QUFBQztBQUNHO0FBQ0E7QUFDQSxRQUFHLE9BQU9BLEtBQVAsS0FBZSxXQUFmLElBQThCLENBQUNDLEtBQUssQ0FBQ0MsT0FBTixDQUFjSCxnQkFBZCxDQUEvQixJQUFrRUEsZ0JBQWdCLENBQUNJLE1BQWpCLElBQXlCLENBQTlGLEVBQ0E7QUFDSSxhQUFPLEtBQVA7QUFDSDs7QUFDRCxRQUFJQyxLQUFLLEdBQUNOLFdBQVcsQ0FBQ08sSUFBWixDQUFpQixVQUFDQyxJQUFELEVBQzNCO0FBQ0ksYUFBT1AsZ0JBQWdC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V0gsSUFBSSxDQUFDQyxTQUFMLENBQWVQLFFBQWYsQ0FBWCxDQUFMO0FBQ0FFLGNBQVEsR0FBQyxDQUFDRCxJQUFJLENBQUNGLEtBQUQsQ0FBTCxDQUFUO0FBQ0FJLFlBQU0sR0FBQyxLQUFQO0FBQ0g7O0FBQ0QsV0FBTztBQUFDRixVQUFJLEVBQUNBLElBQU47QUFBWUMsY0FBUSxFQUFDQSxRQUFyQjtBQUErQkMsWUFBTSxFQUFDQSxNQUF0QztBQUE4Q0MsWUFBTSxFQUFDQTtBQUFyRCxLQUFQO0FBQ0gsR0EvQjJCO0FBQUEsQ0FBNUIiLCJmaWxlIjoiNzA2ZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vZGF0YSB0YWJsZSBtb2R1bGUsIHJhdyBkYXRhIG91dHB1dCBmb3IgcmUtdXNlIGluIG5vbi12dWUtY29tcG9uZW50IGZvcm1hdHNcclxuXHJcbi8vQVRURU1QVDogbWFrZSB2YWxpZGF0b3JzIGFuZCBoYXNfZmVhdCBhbmQgZ2V0X2ZlYXQgYW5kIGNsZWFuZWRfZmVhdCBmdW5jdGlvbnMgXHJcbi8vICAgICAgICAgIG5ldXRyYWwgYW5kIHJldXNhYmxlIGFjcm9zcyBhbGwgZGF0YSBtb2R1bGVzXHJcblxyXG4vL3BhcnRpYWwgZGF0YSB2YWxpZGF0b3JcclxuLy9jYWxsZWQgd2l0aCBkYXRhX3RhYmxlIGFuZCB2YWxpZGF0aW9uX2tleXMgaW4gZGF0YS1tb2R1bGVcclxubGV0IHBhcnRpYWxfdmFsaWRhdGU9KF9kYXRhX3RhYmxlLF92YWxpZGF0aW9uX2tleXMpPT4oX2RhdGEpPT5cclxuey8vX2RhdGFfdGFibGU6IEFycmF5LCBhcnJheSBvZiBkYXRhIHRvIHZhbGlkYXRlIGFnYWluc3RcclxuICAgIC8vX3ZhbGlkYXRpb25fa2V5czogQXJyYXksIGtleXMgdG8gYmUgY29tcGFyZWQgYmV0d2VlbiBwYXNzZWQgaW4gZGF0YSBhbmQgZGF0YV90YWJsZVxyXG4gICAgLy9fZGF0YTogT2JqZWN0LCBkYXRhIHRvIGJlIGNvbXBhcmVkIHRvIGRhdGEgdGFibGUgXHJcbiAgICBpZih0eXBlb2YgX2RhdGE9PT1cInVuZGVmaW5lZFwiIHx8ICFBcnJheS5pc0FycmF5KF92YWxpZGF0aW9uX2tleXMpIHx8IF92YWxpZGF0aW9uX2tleXMubGVuZ3RoPT0wKVxyXG4gICAge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIGxldCB2YWxpZD1fZGF0YV90YWJsZS5zb21lKChfdmFsKT0+XHJcbiAgICB7XHJcbiAgICAgICAgcmV0dXJuIF92YWxpZGF0aW9uX2tleXMuZXZlcnkoKF9rZXlzKT0+XHJcbiAgICAgICAgey8vcmV0dXJuIHRydWUgaWYgYWxsIHZhbGlkYXRpb25fa2V5cyBpbiBfZGF0YSBtYXRjaCBhbiBlbGVtZW50IGluIF9kYXRhX3RhYmxlXHJcbiAgICAgICAgICAgIHJldHVybiBfZGF0YVtfa2V5c109PV92YWxbX2tleXNdO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gdmFsaWQ7XHJcbn1cclxuXHJcbi8vcGFydGlhbF9oYXNfZmVhdHVyZSwgZGV0ZXJtaW5lIGlmIHByb3ZpZGVkIGRhdGEgdGFibGUgaGFzIG1hdGNoaW5nIGVsZW1lbnQgd2l0aCBwcm92aWRlZCBrZXkgYW5kIHZhbFxyXG4vL2NhbGxlZCBpbiBkYXRhIG1vZHVsZSB0byBnZW5lcmF0ZSBmdWxsIGZ1bmN0aW9uIHdpdGggbG9jYWwgZGF0YVxyXG5sZXQgcGFydGlhbF9oYXNfZmVhdHVyZT0oX2RhdGFfdGFibGUpPT4oX2tleSwgX3ZhbCk9PlxyXG57XHJcbiAgICByZXR1cm4gX2RhdGFfdGFibGUuc29tZSgoX2RhdGEpPT5cclxuICAgIHtcclxuICAgICAgICByZXR1cm4gX2RhdGFbX2tleV0hPT11bmRlZmluZWQgJiYgX2RhdGFbX2tleV09PV92YWw7XHJcbiAgICB9KTtcclxufTtcclxuXHJcbi8vcGFydGlhbCBnZXRfZmVhdHVyZSwgcmV0dXJucyBmdWxsIGZ1bmN0aW9uIGZvciBkYXRhIG1vZHVsZVxyXG4vL3JlcXVpcmVzIGRhdGFfdGFibGUgKGFycmF5KSBhbmQgbW9kdWxlJ3MgaGFzX2ZlYXR1cmUgZnVuY3Rpb25cclxuLy9yZXR1cm5zIGZ1bGwgbWF0Y2hpbmcgZWxlbWVudCBpbiBwcm92aWRlZCBkYXRhIHRhYmxlXHJcbi8vaGFzX2ZlYXR1cmUgbXVzdCBleGlzdCBpbiBkYXRhIHRhYmxlIG1vZHVsZVxyXG5sZXQgcGFydGlhbF9nZXRfZmVhdHVyZT0oX2RhdGFfdGFibGUsIF9oYXNfZmVhdHVyZSk9Pihfa2V5LCBfdmFsKT0+XHJcbntcclxuICAgIGxldCBmb3VuZF9mZWF0dXJlPW51bGw7XHJcbiAgICBpZihfaGFzX2ZlYXR1cmUoX2tleSxfdmFsKSlcclxuICAgIHtcclxuICAgICAgICBfZGF0YV90YWJsZS5zb21lKChfdGFibGVfdmFsKT0+XHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpZihfdGFibGVfdmFsW19rZXldPT1fdmFsKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBmb3VuZF9mZWF0dXJlPV90YWJsZV92YWw7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sdGhpcyk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZm91bmRfZmVhdHVyZTtcclxufVxyXG5cclxubGV0IHBhcnRpYWxfY2xlYW5lZF9mZWF0dXJlPShfdmFsaWRhdG9yLCBfaGFzX2ZlYXR1cmUsIF9nZXRfZmVhdHVyZSwgX2RlZmF1bHRfZGF0YSwgX25hbWUpPT4oX3BrZXksIF9mZWF0dXJlKT0+XHJcbnsvL2lucHV0OiBwcmltYXJ5IGtleSwgc2VsZWN0ZWQgZmVhdHVyZSwgZmlsdGVyZWQgZGF0YSB0YWJsZVxyXG4gICAgbGV0IGRhdGE9dW5kZWZpbmVkO1xyXG4gICAgbGV0IGtleV9saXN0PVtdO1xyXG4gICAgbGV0IHVwZGF0ZT1mYWxzZTtcclxuICAgIGxldCBhbGVydHM9W107XHJcbiAgICBsZXQganNvbl9kYXRhPUpTT04uc3RyaW5naWZ5KF9mZWF0dXJlKTtcclxuXHJcbiAgICBpZihfZmVhdHVyZT09PXVuZGVmaW5lZCB8fCAhX2hhc19mZWF0dXJlKF9wa2V5LF9mZWF0dXJlW19wa2V5XSkpXHJcbiAgICB7XHJcbiAgICAgICAgZGF0YT1fZGVmYXVsdF9kYXRhO1xyXG4gICAgICAgIGtleV9saXN0PVtkYXRhW19wa2V5XV07XHJcbiAgICAgICAgdXBkYXRlPXRydWU7XHJcbiAgICAgICAgYWxlcnRzLnB1c2goX25hbWUrXCI6IFwiK2pzb25fZGF0YSk7XHJcbiAgICAgICAgYWxlcnRzLnB1c2goXCIqKioqIEludmFsaWQgZGF0YS4gUmVzZXRpbmcgdG8gZGVmYXVsdC4gKioqKlwiKTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYoIV92YWxpZGF0b3IoX2ZlYXR1cmUpKVxyXG4gICAge1xyXG4gICAgICAgIGRhdGE9SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShfZ2V0X2ZlYXR1cmUoX3BrZXksX2ZlYXR1cmVbX3BrZXldKSkpO1xyXG4gICAgICAgIGtleV9saXN0PVtkYXRhW19wa2V5XV07XHJcbiAgICAgICAgdXBkYXRlPXRydWU7XHJcbiAgICAgICAgYWxlcnRzLnB1c2goX25hbWUrXCI6IFwiK2pzb25fZGF0YSk7XHJcbiAgICAgICAgYWxlcnRzLnB1c2goXCIqKioqIEludmFsaWQgZGF0YS4gUmVzZXRpbmcuICoqKipcIik7XHJcbiAgICB9XHJcbiAgICBlbHNlXHJcbiAgICB7XHJcbiAgICAgICAgZGF0YT1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KF9mZWF0dXJlKSk7XHJcbiAgICAgICAga2V5X2xpc3Q9W2RhdGFbX3BrZXldXTtcclxuICAgICAgICB1cGRhdGU9ZmFsc2U7XHJcbiAgICB9XHJcbiAgICByZXR1cm4ge2RhdGE6ZGF0YSwga2V5X2xpc3Q6a2V5X2xpc3QsIHVwZGF0ZTp1cGRhdGUsIGFsZXJ0czphbGVydHN9O1xyXG59XHJcblxyXG5leHBvcnQge3BhcnRpYWxfdmFsaWRhdGUsIHBhcnRpYWxfaGFzX2ZlYXR1cmUsIHBhcnRpYWxfZ2V0X2ZlYXR1cmUsIHBhcnRpYWxfY2xlYW5lZF9mZWF0dXJlfTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///706d\n')},c30e:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "binder_data_table", function() { return binder_data_table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "binder_validate", function() { return binder_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has_feature", function() { return has_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_feature", function() { return get_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cleaned_feature", function() { return cleaned_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create_binder_data_table", function() { return create_binder_data_table; });\n/* harmony import */ var _data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("706d");\n//data table module, raw data output for re-use in non-vue-component formats\n //create new binder_data_table\n\nvar binder_data_table = [];\nvar raw_binder_data_table = [{\n  stopping_power_modifier: 0,\n  cost: 1,\n  space: 0,\n  new_stopping_power: 0\n}, {\n  stopping_power_modifier: 0.25,\n  cost: 1.1,\n  space: 0,\n  new_stopping_power: 0\n}, {\n  stopping_power_modifier: 0.33,\n  cost: 1.2,\n  space: 0,\n  new_stopping_power: 0\n}, {\n  stopping_power_modifier: 0.50,\n  cost: 1.3,\n  space: 0,\n  new_stopping_power: 0\n}, {\n  stopping_power_modifier: 0.66,\n  cost: 1.2,\n  space: 0,\n  new_stopping_power: 0\n}, {\n  stopping_power_modifier: 0.75,\n  cost: 1.1,\n  space: 0,\n  new_stopping_power: 0\n}];\nvar data_table_keys = ["stopping_power_modifier", "cost", "space", "new_stopping_power"];\nvar default_data = {\n  stopping_power_modifier: 0,\n  cost: 1,\n  space: 0,\n  new_stopping_power: 5\n};\nvar data_cached = false;\n\nvar create_binder_data_table = function create_binder_data_table(_base_stopping_power) {\n  data_cached = false;\n  var base_stopping_power = _base_stopping_power === undefined ? 5 : _base_stopping_power;\n  binder_data_table = raw_binder_data_table.map(function (_elem) {\n    var new_stopping_power = base_stopping_power - Math.ceil(base_stopping_power * _elem.stopping_power_modifier);\n    var space = (base_stopping_power - new_stopping_power) * 2;\n    return {\n      stopping_power_modifier: _elem.stopping_power_modifier,\n      cost: _elem.cost,\n      space: space,\n      new_stopping_power: new_stopping_power\n    };\n  });\n};\n\ncreate_binder_data_table(5);\nvar cached_validate = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_validate */ "d"])(binder_data_table, data_table_keys); //data validator for binder_data_table  \n//call partial_validate with appropriate data for full validate\n\nvar binder_validate = function binder_validate(_data) {\n  //as function to recompute for updated binder_data_table\n  if (data_cached) {\n    return cached_validate(_data);\n  }\n\n  data_cached = true;\n  cached_validate = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_validate */ "d"])(binder_data_table, data_table_keys);\n  return cached_validate(_data);\n}; //completed function for checking if data has data\n\n\nvar has_feature = function has_feature(_pkey, _data) {\n  return Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_has_feature */ "c"])(binder_data_table)(_pkey, _data);\n}; //completed function for returning matching data\n\n\nvar get_feature = function get_feature(_pkey, _data) {\n  return Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_get_feature */ "b"])(binder_data_table, has_feature)(_pkey, _data);\n}; //completed function for returning cleaed data\n\n\nvar cleaned_feature = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_cleaned_feature */ "a"])(binder_validate, has_feature, get_feature, default_data, "Mek_Shield-Binder");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZGF0YV90YWJsZV9tb2R1bGVzL21la19zaGllbGQvbWVrX3NoaWVsZC1iaW5kZXItZGF0YS1tb2R1bGUuanM/YzMwZSJdLCJuYW1lcyI6WyJiaW5kZXJfZGF0YV90YWJsZSIsInJhd19iaW5kZXJfZGF0YV90YWJsZSIsInN0b3BwaW5nX3Bvd2VyX21vZGlmaWVyIiwiY29zdCIsInNwYWNlIiwibmV3X3N0b3BwaW5nX3Bvd2VyIiwiZGF0YV90YWJsZV9rZXlzIiwiZGVmYXVsdF9kYXRhIiwiZGF0YV9jYWNoZWQiLCJjcmVhdGVfYmluZGVyX2RhdGFfdGFibGUiLCJfYmFzZV9zdG9wcGluZ19wb3dlciIsImJhc2Vfc3RvcHBpbmdfcG93ZXIiLCJ1bmRlZmluZWQiLCJtYXAiLCJfZWxlbSIsIk1hdGgiLCJjZWlsIiwiY2FjaGVkX3ZhbGlkYXRlIiwicGFydGlhbF92YWxpZGF0ZSIsImJpbmRlcl92YWxpZGF0ZSIsIl9kYXRhIiwiaGFzX2ZlYXR1cmUiLCJfcGtleSIsInBhcnRpYWxfaGFzX2ZlYXR1cmUiLCJnZXRfZmVhdHVyZSIsInBhcnRpYWxfZ2V0X2ZlYXR1cmUiLCJjbGVhbmVkX2ZlYXR1cmUiLCJwYXJ0aWFsX2NsZWFuZWRfZmVhdHVyZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0NBSUE7O0FBQ0EsSUFBSUEsaUJBQWlCLEdBQUMsRUFBdEI7QUFDQSxJQUFJQyxxQkFBcUIsR0FDekIsQ0FDSTtBQUFDQyx5QkFBdUIsRUFBQyxDQUF6QjtBQUEyQkMsTUFBSSxFQUFDLENBQWhDO0FBQWtDQyxPQUFLLEVBQUMsQ0FBeEM7QUFBMENDLG9CQUFrQixFQUFDO0FBQTdELENBREosRUFFSTtBQUFDSCx5QkFBdUIsRUFBQyxJQUF6QjtBQUE4QkMsTUFBSSxFQUFDLEdBQW5DO0FBQXVDQyxPQUFLLEVBQUMsQ0FBN0M7QUFBK0NDLG9CQUFrQixFQUFDO0FBQWxFLENBRkos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S0FBMUQsQ0FBUDtBQUNILENBSEQsQyxDQUtBOzs7QUFDQSxJQUFJTSxlQUFlLEdBQ2ZDLHNJQUF1QixDQUFDUixlQUFELEVBQWtCRSxXQUFsQixFQUErQkcsV0FBL0IsRUFBNENqQixZQUE1QyxFQUEwRCxtQkFBMUQsQ0FEM0IiLCJmaWxlIjoiYzMwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vZGF0YSB0YWJsZSBtb2R1bGUsIHJhdyBkYXRhIG91dHB1dCBmb3IgcmUtdXNlIGluIG5vbi12dWUtY29tcG9uZW50IGZvcm1hdHNcclxuaW1wb3J0IHtwYXJ0aWFsX3ZhbGlkYXRlLCBwYXJ0aWFsX2hhc19mZWF0dXJlLCBwYXJ0aWFsX2dldF9mZWF0dXJlLCBwYXJ0aWFsX2NsZWFuZWRfZmVhdHVyZX0gXHJcbiAgICBmcm9tIFwiQC9kYXRhX3RhYmxlX21vZHVsZXMvdW5pdmVyc2FsL21la19wYXJ0aWFsLWZ1bmN0aW9uLWRhdGEtbW9kdWxlXCI7XHJcblxyXG4vL2NyZWF0ZSBuZXcgYmluZGVyX2RhdGFfdGFibGVcclxubGV0IGJpbmRlcl9kYXRhX3RhYmxlPVtdO1xyXG5sZXQgcmF3X2JpbmRlcl9kYXRhX3RhYmxlPVxyXG5bXHJcbiAgICB7c3RvcHBpbmdfcG93ZXJfbW9kaWZpZXI6MCxjb3N0OjEsc3BhY2U6MCxuZXdfc3RvcHBpbmdfcG93ZXI6MH0sXHJcbiAgICB7c3RvcHBpbmdfcG93ZXJfbW9kaWZpZXI6MC4yNSxjb3N0OjEuMSxzcGFjZTowLG5ld19zdG9wcGluZ19wb3dlcjowfSxcclxuICAgIHtzdG9wcGluZ19wb3dlcl9tb2RpZmllcjowLjMzLGNvc3Q6MS4yLHNwYWNlOjAsbmV3X3N0b3BwaW5nX3Bvd2VyOjB9LFxyXG4gICAge3N0b3BwaW5nX3Bvd2VyX21vZGlmaWVyOjAuNTAsY29zdDoxLjMsc3BhY2U6MCxuZXdfc3RvcHBpbmdfcG93ZXI6MH0sXHJcbiAgICB7c3RvcHBpbmdfcG93ZXJfbW9kaWZpZXI6MC42Nixjb3N0OjEuMixzcGFjZTowLG5ld19zdG9wcGluZ19wb3dlcjowfSxcclxuICAgIHtzdG9wcGluZ19wb3dlcl9tb2RpZmllcjowLjc1LGNvc3Q6MS4xLHNwYWNlOjAsbmV3X3N0b3BwaW5nX3Bvd2VyOjB9XHJcbl07XHJcbmxldCBkYXRhX3RhYmxlX2tleXM9W1wic3RvcHBpbmdfcG93ZXJfbW9kaWZpZXJcIixcImNvc3RcIixcInNwYWNlXCIsXCJuZXdfc3RvcHBpbmdfcG93ZXJcIl07XHJcbmxldCBkZWZhdWx0X2RhdGE9e3N0b3BwaW5nX3Bvd2VyX21vZGlmaWVyOjAsY29zdDoxLHNwYWNlOjAsbmV3X3N0b3BwaW5nX3Bvd2VyOjV9O1xyXG5sZXQgZGF0YV9jYWNoZWQ9ZmFsc2U7XHJcbmxldCBjcmVhdGVfYmluZGVyX2RhdGFfdGFibGU9ZnVuY3Rpb24oX2Jhc2Vfc3RvcHBpbmdfcG93ZXIpXHJcbntcclxuICAgIGRhdGFfY2FjaGVkPWZhbHNlO1xyXG4gICAgbGV0IGJhc2Vfc3RvcHBpbmdfcG93ZXI9X2Jhc2Vfc3RvcHBpbmdfcG93ZXI9PT11bmRlZmluZWQ/NTpfYmFzZV9zdG9wcGluZ19wb3dlcjtcclxuICAgIGJpbmRlcl9kYXRhX3RhYmxlPXJhd19iaW5kZXJfZGF0YV90YWJsZS5tYXAoKF9lbGVtKT0+XHJcbiAgICB7XHJcbiAgICAgICAgbGV0IG5ld19zdG9wcGluZ19wb3dlcj1iYXNlX3N0b3BwaW5nX3Bvd2VyIC0gTWF0aC5jZWlsKGJhc2Vfc3RvcHBpbmdfcG93ZXIqX2VsZW0uc3RvcHBpbmdfcG93ZXJfbW9kaWZpZXIpO1xyXG4gICAgICAgIGxldCBzcGFjZSA9IChiYXNlX3N0b3BwaW5nX3Bvd2VyIC0gbmV3X3N0b3BwaW5nX3Bvd2VyKSoyO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHN0b3BwaW5nX3Bvd2VyX21vZGlmaWVyOl9lbGVtLnN0b3BwaW5nX3Bvd2VyX21vZGlmaWVyLFxyXG4gICAgICAgICAgICBjb3N0Ol9lbGVtLmNvc3QsXHJcbiAgICAgICAgICAgIHNwYWNlOnNwYWNlLFxyXG4gICAgICAgICAgICBuZXdfc3RvcHBpbmdfcG93ZXI6bmV3X3N0b3BwaW5nX3Bvd2VyXHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn07XHJcbmNyZWF0ZV9iaW5kZXJfZGF0YV90YWJsZSg1KTtcclxuXHJcblxyXG5sZXQgY2FjaGVkX3ZhbGlkYXRlPXBhcnRpYWxfdmFsaWRhdGUoYmluZGVyX2RhdGFfdGFibGUsIGRhdGFfdGFibGVfa2V5cyk7XHJcbi8vZGF0YSB2YWxpZGF0b3IgZm9yIGJpbmRlcl9kYXRhX3RhYmxlICBcclxuLy9jYWxsIHBhcnRpYWxfdmFsaWRhdGUgd2l0aCBhcHByb3ByaWF0ZSBkYXRhIGZvciBmdWxsIHZhbGlkYXRlXHJcbmxldCBiaW5kZXJfdmFsaWRhdGU9KF9kYXRhKT0+XHJcbnsvL2FzIGZ1bmN0aW9uIHRvIHJlY29tcHV0ZSBmb3IgdXBkYXRlZCBiaW5kZXJfZGF0YV90YWJsZVxyXG4gICAgaWYoZGF0YV9jYWNoZWQpXHJcbiAgICB7XHJcbiAgICAgICAgcmV0dXJuIGNhY2hlZF92YWxpZGF0ZShfZGF0YSk7XHJcbiAgICB9XHJcbiAgICBkYXRhX2NhY2hlZD10cnVlO1xyXG4gICAgY2FjaGVkX3ZhbGlkYXRlPXBhcnRpYWxfdmFsaWRhdGUoYmluZGVyX2RhdGFfdGFibGUsIGRhdGFfdGFibGVfa2V5cyk7XHJcbiAgICByZXR1cm4gY2FjaGVkX3ZhbGlkYXRlKF9kYXRhKTtcclxufVxyXG5cclxuLy9jb21wbGV0ZWQgZnVuY3Rpb24gZm9yIGNoZWNraW5nIGlmIGRhdGEgaGFzIGRhdGFcclxubGV0IGhhc19mZWF0dXJlPShfcGtleSxfZGF0YSk9PlxyXG57XHJcbiAgICByZXR1cm4gcGFydGlhbF9oYXNfZmVhdHVyZShiaW5kZXJfZGF0YV90YWJsZSkoX3BrZXksX2RhdGEpO1xyXG59O1xyXG5cclxuLy9jb21wbGV0ZWQgZnVuY3Rpb24gZm9yIHJldHVybmluZyBtYXRjaGluZyBkYXRhXHJcbmxldCBnZXRfZmVhdHVyZT0oX3BrZXksX2RhdGEpPT5cclxue1xyXG4gICAgcmV0dXJuIHBhcnRpYWxfZ2V0X2ZlYXR1cmUoYmluZGVyX2RhdGFfdGFibGUsIGhhc19mZWF0dXJlKShfcGtleSxfZGF0YSk7XHJcbn07XHJcblxyXG4vL2NvbXBsZXRlZCBmdW5jdGlvbiBmb3IgcmV0dXJuaW5nIGNsZWFlZCBkYXRhXHJcbmxldCBjbGVhbmVkX2ZlYXR1cmU9XHJcbiAgICBwYXJ0aWFsX2NsZWFuZWRfZmVhdHVyZShiaW5kZXJfdmFsaWRhdGUsIGhhc19mZWF0dXJlLCBnZXRfZmVhdHVyZSwgZGVmYXVsdF9kYXRhLCBcIk1la19TaGllbGQtQmluZGVyXCIpO1xyXG5cclxuZXhwb3J0IHtiaW5kZXJfZGF0YV90YWJsZSwgYmluZGVyX3ZhbGlkYXRlLCBoYXNfZmVhdHVyZSwgZ2V0X2ZlYXR1cmUsIGNsZWFuZWRfZmVhdHVyZSwgY3JlYXRlX2JpbmRlcl9kYXRhX3RhYmxlfTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///c30e\n')},d866:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony default export */ __webpack_exports__["a"] = ({\n  methods: {\n    addAlert: function addAlert(_alert_string) {\n      this.alerts.push(_alert_string);\n    },\n    publishAlerts: function publishAlerts() {\n      if (this.alerts.length > 0) {\n        this.$store.commit("alertMessage", this.alerts);\n      }\n\n      this.$set(this, "alerts", []);\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWl4aW5zL2FsZXJ0c19taXhpbi5qcz9kODY2Il0sIm5hbWVzIjpbIm1ldGhvZHMiLCJhZGRBbGVydCIsIl9hbGVydF9zdHJpbmciLCJhbGVydHMiLCJwdXNoIiwicHVibGlzaEFsZXJ0cyIsImxlbmd0aCIsIiRzdG9yZSIsImNvbW1pdCIsIiRzZXQiXSwibWFwcGluZ3MiOiJBQUNBO0FBQ0lBLFNBQU8sRUFDUDtBQUNJQyxZQURKLG9CQUNhQyxhQURiLEVBRUk7QUFDSSxXQUFLQyxNQUFMLENBQVlDLElBQVosQ0FBaUJGLGFBQWpCO0FBQ0gsS0FKTDtBQUtJRyxpQkFMSiwyQkFNSTtBQUNJLFVBQUcsS0FBS0YsTUFBTCxDQUFZRyxNQUFaLEdBQW1CLENBQXRCLEVBQ0E7QUFDSSxhQUFLQyxNQUFMLENBQVlDLE1BQVosQ0FBbUIsY0FBbkIsRUFBa0MsS0FBS0wsTUFBdkM7QUFDSDs7QUFDRCxXQUFLTSxJQUFMLENBQVUsSUFBVixFQUFlLFFBQWYsRUFBd0IsRUFBeEI7QUFDSDtBQVpMO0FBRkosQ0FEQSIsImZpbGUiOiJkODY2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHRcclxue1xyXG4gICAgbWV0aG9kczpcclxuICAgIHtcclxuICAgICAgICBhZGRBbGVydChfYWxlcnRfc3RyaW5nKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5hbGVydHMucHVzaChfYWxlcnRfc3RyaW5nKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHB1Ymxpc2hBbGVydHMoKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWYodGhpcy5hbGVydHMubGVuZ3RoPjApXHJcbiAgICAgICAgICAgIHsgICBcclxuICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdChcImFsZXJ0TWVzc2FnZVwiLHRoaXMuYWxlcnRzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLiRzZXQodGhpcyxcImFsZXJ0c1wiLFtdKTtcclxuICAgICAgICB9LFxyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///d866\n')},da25:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"47c91943-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/design_components/mek_shield/subcomponents/mek_shield-binder.vue?vue&type=template&id=55dd3bdc&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'mek-sub-component-table\',{attrs:{"items":_vm.binder_table,"pkey":_vm.pkey,"selected-keys":_vm.selected_keys,"headers":{stopping_power_modifier:\'-SP\',new_stopping_power:\'New SP\',space:\'+Space\',cost:\'Cost\'},"name":"Binder","flow":"pkey-row","show-headers":true,"format":{stopping_power_modifier:\'percent\',cost:\'multiplier\'}},on:{"update-selected-data":_vm.select_binder}})}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./src/design_components/mek_shield/subcomponents/mek_shield-binder.vue?vue&type=template&id=55dd3bdc&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js\nvar web_dom_iterable = __webpack_require__("ac6a");\n\n// EXTERNAL MODULE: ./src/mixins/alerts_mixin.js\nvar alerts_mixin = __webpack_require__("d866");\n\n// EXTERNAL MODULE: ./src/data_table_modules/mek_shield/mek_shield-binder-data-module.js\nvar mek_shield_binder_data_module = __webpack_require__("c30e");\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/design_components/mek_shield/subcomponents/mek_shield-binder.vue?vue&type=script&lang=js&\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ var mek_shield_bindervue_type_script_lang_js_ = ({\n  name: "mek_shield_binder",\n  props: ["binder", "base_stopping_power"],\n  mixins: [alerts_mixin["a" /* default */]],\n  components: {\n    "mek-sub-component-table": function mekSubComponentTable() {\n      return __webpack_require__.e(/* import() | mek_sub-component-table */ "mek_sub-component-table").then(__webpack_require__.bind(null, "a949"));\n    }\n  },\n  data: function data() {\n    var obj = {};\n    obj.alerts = [];\n    obj.suppressAlerts = false;\n    obj.pkey = "stopping_power_modifier";\n    obj.updateBinder = false;\n    return obj;\n  },\n  methods: {\n    select_binder: function select_binder(_selected_binder_index) {\n      var data = JSON.parse(JSON.stringify(_selected_binder_index));\n      this.$emit("update-binder", data);\n    }\n  },\n  computed: {\n    binder_table: function binder_table() {\n      Object(mek_shield_binder_data_module["create_binder_data_table"])(this.base_stopping_power);\n      return mek_shield_binder_data_module["binder_data_table"];\n    },\n    selected_keys: function selected_keys() {\n      var _this = this;\n\n      var cleaned_data = Object(mek_shield_binder_data_module["cleaned_feature"])(this.pkey, this.binder);\n\n      if (cleaned_data.alerts.length > 0 && !this.suppressAlerts) {\n        cleaned_data.alerts.forEach(function (_alert) {\n          _this.addAlert(_alert);\n        });\n        this.publishAlerts();\n      }\n\n      if (cleaned_data.update || this.updateBinder) {\n        this.$emit("alert-generated", true);\n        this.select_binder(cleaned_data.data);\n      }\n\n      this.updateBinder = false;\n      return cleaned_data.key_list;\n    }\n  },\n  watch: {\n    "base_stopping_power": function base_stopping_power(_newval, _oldval) {\n      //must track changes in base_stopping_power to disable alerts for removed features on cleaned_feat\n      if (_newval != _oldval) {\n        this.suppressAlerts = true;\n        this.updateBinder = true;\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/design_components/mek_shield/subcomponents/mek_shield-binder.vue?vue&type=script&lang=js&\n /* harmony default export */ var subcomponents_mek_shield_bindervue_type_script_lang_js_ = (mek_shield_bindervue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__("2877");\n\n// CONCATENATED MODULE: ./src/design_components/mek_shield/subcomponents/mek_shield-binder.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  subcomponents_mek_shield_bindervue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var mek_shield_binder = __webpack_exports__["default"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZGVzaWduX2NvbXBvbmVudHMvbWVrX3NoaWVsZC9zdWJjb21wb25lbnRzL21la19zaGllbGQtYmluZGVyLnZ1ZT9jMDg5Iiwid2VicGFjazovLy9zcmMvZGVzaWduX2NvbXBvbmVudHMvbWVrX3NoaWVsZC9zdWJjb21wb25lbnRzL21la19zaGllbGQtYmluZGVyLnZ1ZT9jYzdkIiwid2VicGFjazovLy8uL3NyYy9kZXNpZ25fY29tcG9uZW50cy9tZWtfc2hpZWxkL3N1YmNvbXBvbmVudHMvbWVrX3NoaWVsZC1iaW5kZXIudnVlP2U2MGYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Rlc2lnbl9jb21wb25lbnRzL21la19zaGllbGQvc3ViY29tcG9uZW50cy9tZWtfc2hpZWxkLWJpbmRlci52dWU/MGVkOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwwQkFBMEIsYUFBYSwwQkFBMEIsd0JBQXdCLHFDQUFxQyxPQUFPLHNGQUFzRixxRkFBcUYsaUVBQWlFLHFEQUFxRCxLQUFLLDBDQUEwQztBQUNyZDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNVQTtBQUNBO0FBSUE7QUFDQSwyQkFEQTtBQUVBLDBDQUZBO0FBR0EsMkNBSEE7QUFJQSxjQUNBO0FBQ0E7QUFBQTtBQUFBO0FBREEsR0FMQTtBQVFBLHdCQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FoQkE7QUFpQkEsV0FDQTtBQUNBLGtFQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTEEsR0FsQkE7QUF5QkEsWUFDQTtBQUNBLGdCQURBLDBCQUVBO0FBQ0E7QUFDQTtBQUNBLEtBTEE7QUFNQSxpQkFOQSwyQkFPQTtBQUFBOztBQUNBOztBQUNBLGtFQUNBO0FBQ0Esc0RBQ0E7QUFDQTtBQUNBLFNBSEE7QUFJQTtBQUNBOztBQUNBLG9EQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQXhCQSxHQTFCQTtBQW9EQSxTQUNBO0FBQ0EsMEVBQ0E7QUFBQTtBQUNBLDhCQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFSQTtBQXJEQSxDQURBLEU7O0FDZnlXLENBQWdCLHFJQUFHLEVBQUMsQzs7Ozs7QUNBN1I7QUFDM0I7QUFDTDs7O0FBR2hFO0FBQ2dHO0FBQ2hHLGdCQUFnQiw4Q0FBVTtBQUMxQixFQUFFLHVEQUFNO0FBQ1IsRUFBRSxNQUFNO0FBQ1IsRUFBRSxlQUFlO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVlLHdHIiwiZmlsZSI6ImRhMjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnbWVrLXN1Yi1jb21wb25lbnQtdGFibGUnLHthdHRyczp7XCJpdGVtc1wiOl92bS5iaW5kZXJfdGFibGUsXCJwa2V5XCI6X3ZtLnBrZXksXCJzZWxlY3RlZC1rZXlzXCI6X3ZtLnNlbGVjdGVkX2tleXMsXCJoZWFkZXJzXCI6e3N0b3BwaW5nX3Bvd2VyX21vZGlmaWVyOictU1AnLG5ld19zdG9wcGluZ19wb3dlcjonTmV3IFNQJyxzcGFjZTonK1NwYWNlJyxjb3N0OidDb3N0J30sXCJuYW1lXCI6XCJCaW5kZXJcIixcImZsb3dcIjpcInBrZXktcm93XCIsXCJzaG93LWhlYWRlcnNcIjp0cnVlLFwiZm9ybWF0XCI6e3N0b3BwaW5nX3Bvd2VyX21vZGlmaWVyOidwZXJjZW50Jyxjb3N0OidtdWx0aXBsaWVyJ319LG9uOntcInVwZGF0ZS1zZWxlY3RlZC1kYXRhXCI6X3ZtLnNlbGVjdF9iaW5kZXJ9fSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsIjx0ZW1wbGF0ZT5cclxuICAgIDxtZWstc3ViLWNvbXBvbmVudC10YWJsZVxyXG4gICAgICAgIDppdGVtcz1cImJpbmRlcl90YWJsZVwiIDpwa2V5PVwicGtleVwiIDpzZWxlY3RlZC1rZXlzPVwic2VsZWN0ZWRfa2V5c1wiXHJcbiAgICAgICAgOmhlYWRlcnM9XCJ7c3RvcHBpbmdfcG93ZXJfbW9kaWZpZXI6Jy1TUCcsbmV3X3N0b3BwaW5nX3Bvd2VyOidOZXcgU1AnLHNwYWNlOicrU3BhY2UnLGNvc3Q6J0Nvc3QnfVwiXHJcbiAgICAgICAgbmFtZT1cIkJpbmRlclwiIGZsb3c9XCJwa2V5LXJvd1wiIDpzaG93LWhlYWRlcnM9XCJ0cnVlXCJcclxuICAgICAgICA6Zm9ybWF0PVwie3N0b3BwaW5nX3Bvd2VyX21vZGlmaWVyOidwZXJjZW50Jyxjb3N0OidtdWx0aXBsaWVyJ31cIlxyXG4gICAgICAgIEB1cGRhdGUtc2VsZWN0ZWQtZGF0YT1cInNlbGVjdF9iaW5kZXJcIlxyXG4gICAgPjwvbWVrLXN1Yi1jb21wb25lbnQtdGFibGU+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5pbXBvcnQgYWxlcnRzX21peGluIGZyb20gXCJAL21peGlucy9hbGVydHNfbWl4aW5cIjtcclxuaW1wb3J0IHsgYmluZGVyX2RhdGFfdGFibGUsIGNsZWFuZWRfZmVhdHVyZSwgY3JlYXRlX2JpbmRlcl9kYXRhX3RhYmxlIH0gXHJcbiAgICBmcm9tIFwiQC9kYXRhX3RhYmxlX21vZHVsZXMvbWVrX3NoaWVsZC9tZWtfc2hpZWxkLWJpbmRlci1kYXRhLW1vZHVsZVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgXHJcbntcclxuICAgIG5hbWU6IFwibWVrX3NoaWVsZF9iaW5kZXJcIixcclxuICAgIHByb3BzOltcImJpbmRlclwiLFwiYmFzZV9zdG9wcGluZ19wb3dlclwiXSxcclxuICAgIG1peGluczpbYWxlcnRzX21peGluXSxcclxuICAgIGNvbXBvbmVudHM6XHJcbiAgICB7XHJcbiAgICAgICAgIFwibWVrLXN1Yi1jb21wb25lbnQtdGFibGVcIjooKT0+aW1wb3J0KC8qIHdlYnBhY2tDaHVua05hbWU6IFwibWVrX3N1Yi1jb21wb25lbnQtdGFibGVcIiAqL1wiQC9hcHBfY29tcG9uZW50cy91bml2ZXJzYWwvbWVrX3N1Yi1jb21wb25lbnQtdGFibGUudnVlXCIpXHJcbiAgICB9LFxyXG4gICAgZGF0YTpmdW5jdGlvbigpXHJcbiAgICB7XHJcbiAgICAgICAgbGV0IG9iaj17fVxyXG4gICAgICAgIG9iai5hbGVydHM9W107XHJcbiAgICAgICAgb2JqLnN1cHByZXNzQWxlcnRzPWZhbHNlO1xyXG4gICAgICAgIG9iai5wa2V5PVwic3RvcHBpbmdfcG93ZXJfbW9kaWZpZXJcIjtcclxuICAgICAgICBvYmoudXBkYXRlQmluZGVyPWZhbHNlO1xyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczpcclxuICAgIHtcclxuICAgICAgICBzZWxlY3RfYmluZGVyOmZ1bmN0aW9uKF9zZWxlY3RlZF9iaW5kZXJfaW5kZXgpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBsZXQgZGF0YT1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KF9zZWxlY3RlZF9iaW5kZXJfaW5kZXgpKVxyXG4gICAgICAgICAgICB0aGlzLiRlbWl0KFwidXBkYXRlLWJpbmRlclwiLGRhdGEpO1xyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgY29tcHV0ZWQ6XHJcbiAgICB7XHJcbiAgICAgICAgYmluZGVyX3RhYmxlKClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGNyZWF0ZV9iaW5kZXJfZGF0YV90YWJsZSh0aGlzLmJhc2Vfc3RvcHBpbmdfcG93ZXIpO1xyXG4gICAgICAgICAgICByZXR1cm4gYmluZGVyX2RhdGFfdGFibGU7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBzZWxlY3RlZF9rZXlzKClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGxldCBjbGVhbmVkX2RhdGE9Y2xlYW5lZF9mZWF0dXJlKHRoaXMucGtleSwgdGhpcy5iaW5kZXIpO1xyXG4gICAgICAgICAgICBpZihjbGVhbmVkX2RhdGEuYWxlcnRzLmxlbmd0aD4wICYmICF0aGlzLnN1cHByZXNzQWxlcnRzKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBjbGVhbmVkX2RhdGEuYWxlcnRzLmZvckVhY2goKF9hbGVydCk9PlxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQWxlcnQoX2FsZXJ0KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wdWJsaXNoQWxlcnRzKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoY2xlYW5lZF9kYXRhLnVwZGF0ZSB8fCB0aGlzLnVwZGF0ZUJpbmRlcilcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kZW1pdChcImFsZXJ0LWdlbmVyYXRlZFwiLHRydWUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RfYmluZGVyKGNsZWFuZWRfZGF0YS5kYXRhKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUJpbmRlcj1mYWxzZTtcclxuICAgICAgICAgICAgcmV0dXJuIGNsZWFuZWRfZGF0YS5rZXlfbGlzdDtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgd2F0Y2g6XHJcbiAgICB7XHJcbiAgICAgICAgXCJiYXNlX3N0b3BwaW5nX3Bvd2VyXCI6ZnVuY3Rpb24oX25ld3ZhbCxfb2xkdmFsKVxyXG4gICAgICAgIHsvL211c3QgdHJhY2sgY2hhbmdlcyBpbiBiYXNlX3N0b3BwaW5nX3Bvd2VyIHRvIGRpc2FibGUgYWxlcnRzIGZvciByZW1vdmVkIGZlYXR1cmVzIG9uIGNsZWFuZWRfZmVhdFxyXG4gICAgICAgICAgICBpZihfbmV3dmFsIT1fb2xkdmFsKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN1cHByZXNzQWxlcnRzPXRydWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUJpbmRlcj10cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0xMi0wIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy90aHJlYWQtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbWVrX3NoaWVsZC1iaW5kZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTItMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdGhyZWFkLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL21la19zaGllbGQtYmluZGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vbWVrX3NoaWVsZC1iaW5kZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTU1ZGQzYmRjJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL21la19zaGllbGQtYmluZGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vbWVrX3NoaWVsZC1iaW5kZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///da25\n')}}]);
{"version":3,"sources":["webpack:///./src/components/mek_missile/subcomponents/mek_missile-feature.vue?a398","webpack:///./src/components/data_table_modules/mek_missile/mek_missile-feature-data-module.js","webpack:///src/components/mek_missile/subcomponents/mek_missile-feature.vue","webpack:///./src/components/mek_missile/subcomponents/mek_missile-feature.vue?cbc6","webpack:///./src/components/mek_missile/subcomponents/mek_missile-feature.vue","webpack:///./src/mixins/alerts_mixin.js","webpack:///./src/components/data_table_modules/universal/mek_partial-function-data-module.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","items","filteredFeatureTable","pkey","selected-keys","selected_keys","headers","feature","cost","show-headers","format","name","flow","on","update-selected-data","select_feature","staticRenderFns","feature_data_table","exclusive_smoke_scatter","exclusive_counter","filter","_el","data_table_keys","feature_validate","partial_validate","has_feature","partial_has_feature","get_feature","partial_get_feature","is_exclusive_feature","_exclusive_target","_pkey","_pkey_value","exclusive_target_array","toLowerCase","some","_val","cleaned_feature","_feature_array","hasExclusiveSmokeScatter","hasExclusiveCounter","update","key_list","alerts","length","cleaned_array","undefined","push","error","temp_selected_feature_array","reduceRight","_cleaned_array","stringify_default","clean_feature","isSmokeScatter","isCounter","includes","reverse","mek_missile_featurevue_type_script_lang_js_","props","mixins","alerts_mixin","components","mek-sub-component-table","__webpack_require__","e","then","bind","data","obj","suppressAlerts","selected_feature_array","methods","_selected_feature","_this","new_selected_feature_array","toggleFeature","cleaned_data","mek_missile_feature_data_module_cleaned_feature","forEach","_alert","addAlert","publishAlerts","$set","$emit","_feature","_this2","feature_array","JSON","parse","remove_feature","computed","_this3","blastRadius","smartMissile","_this4","featureArray","subcomponents_mek_missile_featurevue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","_alert_string","$store","commit","_data_table","_validation_keys","_data","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_1___default","valid","_keys","_key","_has_feature","found_feature","_table_val","partial_cleaned_feature","_validator","_get_feature","_default_data","_name","json_data","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/mek-missile-feature-legacy.89683507.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.filteredFeatureTable,\"pkey\":_vm.pkey,\"selected-keys\":_vm.selected_keys,\"headers\":{feature:'Feature',cost:'Cost'},\"show-headers\":true,\"format\":{cost:'multiplier'},\"name\":\"Features\",\"flow\":\"pkey-col\"},on:{\"update-selected-data\":_vm.select_feature}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature} from \"../universal/mek_partial-function-data-module\";\r\n\r\n//create new feature_data_table\r\nlet feature_data_table=\r\n[\r\n    {feature:\"Long Range\",cost:1.33},\r\n    {feature:\"Hypervelocity\",cost:1.25},\r\n    {feature:\"Tunneling\",cost:1.3},\r\n    {feature:\"Home On Jam\",cost:2},\r\n    {feature:\"Fuse\",cost:1.1},\r\n    {feature:\"Foam\",cost:1.33},\r\n    {feature:\"Flare\",cost:0.5},\r\n    {feature:\"Smoke\",cost:0.5, exclusive_smoke_scatter:true},\r\n    {feature:\"Scatter\",cost:0.5, exclusive_smoke_scatter:true},\r\n    {feature:\"Countermissile\",cost:1, exclusive_counter:true},\r\n    {feature:\"Variable Countermissile\",cost:1.8, exclusive_counter:true},\r\n    {feature:\"Smoke-Scatter\",cost:1,exclusive_smoke_scatter:true},\r\n    {feature:\"Nuclear\",cost:1000},\r\n];\r\nlet exclusive_smoke_scatter=feature_data_table.filter((_el)=>{return typeof _el.exclusive_smoke_scatter!==\"undefined\";});\r\nlet exclusive_counter=feature_data_table.filter((_el)=>{return typeof _el.exclusive_counter!==\"undefined\";});\r\nlet data_table_keys=[\"feature\",\"cost\",\"exclusive_smoke_scatter\",\"exclusive_counter\",\"exclusive_smoke\"];\r\n\r\n//data validator for feature_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet feature_validate=partial_validate(feature_data_table, data_table_keys);\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=partial_has_feature(feature_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_feature=partial_get_feature(feature_data_table, has_feature);\r\n\r\nlet is_exclusive_feature=function(_exclusive_target, _pkey, _pkey_value)\r\n{\r\n    let exclusive_target_array=null;\r\n    switch(_exclusive_target.toLowerCase())\r\n    {\r\n        case \"exclusive_smoke_scatter\":\r\n            exclusive_target_array=exclusive_smoke_scatter;\r\n            break;\r\n        case \"exclusive_counter\":\r\n            exclusive_target_array=exclusive_counter;\r\n            break;\r\n    }\r\n    if(exclusive_target_array===null)\r\n    {\r\n        return false;\r\n    }\r\n    return exclusive_target_array.some((_val)=>\r\n    {\r\n        return _val[_pkey]==_pkey_value;\r\n    });\r\n};\r\n\r\n/*** \r\n * \r\n * find way to switch to partial function\r\n * \r\n * ***/\r\nlet cleaned_feature=function(_feature_array, _pkey)\r\n{//takes feature_array, returns cleaned array removing multiple exclusive values\r\n    let hasExclusiveSmokeScatter=false;\r\n    let hasExclusiveCounter=false;\r\n    let update=false;\r\n    let key_list=[];\r\n    let alerts=[];\r\n    if(_feature_array.length===0)\r\n    {\r\n        return {cleaned_array:[],update:false,key_list:[],alerts:alerts};\r\n    }\r\n    if(_feature_array===undefined || _pkey===undefined)\r\n    {\r\n        alerts.push(\"Mek_Missile-Feature: \");\r\n        let error=_feature_array===undefined\r\n            ? \"**** Missing feature array. Returning default. ****\"\r\n            : \"**** No primary key provided. Returning default. ****\";\r\n        alerts.push(error);\r\n        return {cleaned_array:[],update:true,key_list:[],alerts:alerts};\r\n    }\r\n    let temp_selected_feature_array=_feature_array.reduceRight((_cleaned_array, _val)=>\r\n    {\r\n        if(_val[_pkey]===undefined)\r\n        {//if feature with pkey doesn't exist in data table, ignore\r\n            alerts.push(\"Mek_Missile-Feature: \"+JSON.stringify(_val));\r\n            alerts.push(\"**** Missing primary key. Ignoring. ****\");\r\n            return _cleaned_array;\r\n        }\r\n        let clean_feature=_val;\r\n        if(!feature_validate(_val))\r\n        {//invalid data\r\n            alerts.push(\"Mek_Missile-Feature: \"+JSON.stringify(_val))\r\n            alerts.push(\"**** Invalid data, attempting to reset. ****\")\r\n            clean_feature=get_feature(_pkey,_val[_pkey]);\r\n            update=true;\r\n            //attempt to set to corrected feature\r\n        }\r\n        if(clean_feature===null)\r\n        {//no matching feature\r\n            alerts.push(\"**** Unable to reset. No matching data. ****\")\r\n            update=true;\r\n            return _cleaned_array;\r\n            //ignore element\r\n        }\r\n        let isSmokeScatter=is_exclusive_feature(\"exclusive_smoke_scatter\",_pkey,_val[_pkey]);\r\n        let isCounter=is_exclusive_feature(\"exclusive_counter\",_pkey,_val[_pkey]);\r\n\r\n        if(isSmokeScatter && !hasExclusiveSmokeScatter)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusiveSmokeScatter=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isSmokeScatter && hasExclusiveSmokeScatter)\r\n        {\r\n            alerts.push(\"Mek_Missile-Feature: \"+_val);\r\n            alerts.push(\"**** Duplicate exclusive shock data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n\r\n        if(isCounter && !hasExclusiveCounter)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusiveCounter=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isCounter && hasExclusiveCounter)\r\n        {\r\n            alerts.push(\"Mek_Missile-Feature: \"+_val);\r\n            alerts.push(\"**** Duplicate exclusive blast radius data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n\r\n        if(!key_list.includes(_val[_pkey]))\r\n        {\r\n            _cleaned_array.push(_val);\r\n            key_list.push(_val[_pkey]);\r\n        }\r\n        return _cleaned_array;\r\n    },[]);\r\n    temp_selected_feature_array=temp_selected_feature_array.reverse();\r\n    if(temp_selected_feature_array.length==0)\r\n    {//empty, reset to default\r\n        temp_selected_feature_array=[];\r\n        update=true;\r\n        key_list=[];\r\n        alerts.push(\"Mek_Missile-Feature: \");\r\n        alerts.push(\"**** Reseting to default ****\");\r\n    }\r\n    return {cleaned_array:temp_selected_feature_array,update:update,key_list:key_list,alerts:alerts};\r\n    //returns an object with the pruned feature array, whether it was updated, and the key_list\r\n};\r\n\r\nexport {feature_data_table, feature_validate, has_feature, get_feature, cleaned_feature};\r\n","<template>\r\n    <mek-sub-component-table\r\n        :items=\"filteredFeatureTable\" :pkey=\"pkey\" :selected-keys=\"selected_keys\"\r\n        :headers=\"{feature:'Feature',cost:'Cost'}\"\r\n        :show-headers=\"true\" :format=\"{cost:'multiplier'}\"\r\n        @update-selected-data=\"select_feature\"\r\n        name=\"Features\" flow=\"pkey-col\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport alerts_mixin from \"../../../mixins/alerts_mixin\";\r\n\r\nimport {feature_data_table, cleaned_feature} \r\n    from \"../../data_table_modules/mek_missile/mek_missile-feature-data-module.js\";\r\n\r\nexport default \r\n{\r\n    name:\"mek_beam_feature\",\r\n    props:[\"featureArray\",\"blastRadius\",\"smartMissile\"],\r\n    mixins:[alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"../../universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.pkey=\"feature\";\r\n        obj.alerts=[];\r\n        obj.suppressAlerts=false;\r\n        obj.selected_feature_array=[];\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_feature:function(_selected_feature)\r\n        {//refactor to external feature array cleaner\r\n            this.suppressAlerts=true;//suppress alerts, for exclusive switching\r\n            let new_selected_feature_array=this.toggleFeature(this.selected_feature_array,_selected_feature);\r\n            let cleaned_data=cleaned_feature(new_selected_feature_array, this.pkey);\r\n            new_selected_feature_array=cleaned_data.cleaned_array;\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            this.$set(this,\"selected_feature_array\",new_selected_feature_array);\r\n            this.$emit(\"update-feature\",new_selected_feature_array);\r\n            this.suppressAlerts=false;\r\n        },\r\n        toggleFeature(_feature_array,_feature)\r\n        {\r\n            let feature_array=JSON.parse(JSON.stringify(_feature_array));\r\n            \r\n            let remove_feature=feature_array.some((_val)=>\r\n            {//if _feature matches already existing feature, flag for deletion\r\n                return _val[this.pkey]==_feature[this.pkey];\r\n            },this);\r\n\r\n            if(remove_feature)\r\n            {//if flagged for removal, filter out\r\n                return feature_array.filter((_val)=>\r\n                {\r\n                    return _val[this.pkey]!=_feature[this.pkey];\r\n                },this);\r\n            }\r\n            feature_array.push(_feature);\r\n            //otherwise add feature and return\r\n            return feature_array;\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        filteredFeatureTable()\r\n        {\r\n            return feature_data_table.filter((_val)=>\r\n            {\r\n                if(this.blastRadius==\"__NIL__\" && [\"nuclear\",\"scatter\",\"smoke\",\"smoke-scatter\"].includes(_val.feature.toLowerCase()))\r\n                {//filter out some features if no blast radius\r\n                    return false;\r\n                }\r\n                if(!this.smartMissile && _val.feature.toLowerCase()==\"home on jam\")\r\n                {//filtered out home-on-jam for dumb missiles\r\n                    return false;\r\n                }\r\n                return true;\r\n            },this);\r\n        },\r\n        selected_keys()\r\n        {\r\n            let cleaned_data=cleaned_feature(this.featureArray,this.pkey);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.$emit(\"update-feature\",cleaned_data.cleaned_array);\r\n            }\r\n            this.$set(this,\"selected_feature_array\",cleaned_data.cleaned_array);\r\n            return cleaned_data.key_list;\r\n        }\r\n    },\r\n/*     watch:\r\n    {\r\n        \"blastRadius\":function(_newval,_oldval)\r\n        {\r\n            if(_newval<=0 && _oldval>0)\r\n            {\r\n                let temp_selected_feature_array=this.selected_feature_array.filter((_val)=>\r\n                {//filter out phalanx selected features if changing from BV>1 to BV=1\r\n                    return _val.feature.toLowerCase()!=\"nuclear\";\r\n                })\r\n                this.$emit(\"update-feature\",temp_selected_feature_array);\r\n            }\r\n        }\r\n    } */\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_missile-feature.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_missile-feature.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_missile-feature.vue?vue&type=template&id=275b3728&\"\nimport script from \"./mek_missile-feature.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_missile-feature.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return !_validation_keys.some((_keys)=>\r\n        {//returns true on invalid data, Not the return to return True if matching valid value is found\r\n            return _data[_keys]!=_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        let found_feature=null;\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n        return found_feature;\r\n    }\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n"],"sourceRoot":""}
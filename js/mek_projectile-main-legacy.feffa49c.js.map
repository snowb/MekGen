{"version":3,"sources":["webpack:///./src/design_components/mek_projectile/mek_projectile-main.vue?85f0","webpack:///src/design_components/mek_projectile/mek_projectile-main.vue","webpack:///./src/design_components/mek_projectile/mek_projectile-main.vue?c688","webpack:///./src/design_components/mek_projectile/mek_projectile-main.vue","webpack:///./src/mixins/component_computed_mixin.js","webpack:///./src/mixins/component_methods_mixin.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","width","attrs","new-component","newComponent","component-name","component_name","projectile_name","component-changed","component_changed","on","update-component-name","updateComponentName","damage","selected_damage","update-damage","updateDamage","alert-generated","handleAlert","accuracy","selected_accuracy","update-accuracy","updateAccuracy","burst-value","selected_burst_value","update-burst-value","updateBurstValue","multi-feed","selected_multi_feed","update-multi-feed","updateMultiFeed","align-self","range-mod","selected_range_mod","base-range","range","update-range-mod","updateRangeMod","feature-array","feature_array","burst_value","update-feature","updateFeature","space_efficiency","efficiencies","space","raw_space","update-efficiencies","updateEfficiencies","cols","rows","slot","_v","_s","damage_capacity","range_mod","max-width","margin-left","feature_list","space_cost","round","weight","cost","cost_multiplier","font-weight","save-reset-component","componentSaveReset","staticRenderFns","mek_projectile_mainvue_type_script_lang_js_","name","props","mixins","selected_item_mixin","utility_mixin","component_computed_mixin","component_methods_mixin","components","mek-projectile-damage","__webpack_require__","e","then","bind","mek-projectile-accuracy","mek-projectile-multi-feed","mek-projectile-range-mod","mek-projectile-burst-value","mek-projectile-feature","mek-space-efficiency","mek-component-name","mek-save-reset-component","mek-component-stats","data","obj","uuid","component_category","component_type","original_component","feeds","modifier","cost_multipliers","feature","multi_feed","hasAlert","methods","_name","_data","$set","_damage","_accuracy","_multi_feed","_burst_value","_range_mod","_featureArray","reduce","_multi","_val","_action","action","$store","commit","output_data","ingest_data","JSON","parse","_this","return_data","create_uuid","stringify_default","final_damage","$nextTick","_data_object","_this2","alertMessage","universal_ingest_data","_alert_status","computed","subtotal_cost","replace","mek_projectile_mek_projectile_mainvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","multi","_string","_index","selectedComponent","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","getters","_alertMessage","_property","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_5___default","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_keys__WEBPACK_IMPORTED_MODULE_2___default","_computedWatchers","includes","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0___default","_sub_property","$forceUpdate","addAlert","_alert_string","alerts","push","publishAlerts","length"],"mappings":"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","file":"js/mek_projectile-main-legacy.feffa49c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"mek-inline-flex-col\",staticStyle:{\"width\":\"100%\"}},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.projectile_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-projectile-damage',{attrs:{\"damage\":_vm.selected_damage},on:{\"update-damage\":_vm.updateDamage,\"alert-generated\":_vm.handleAlert}}),_c('mek-projectile-accuracy',{attrs:{\"accuracy\":_vm.selected_accuracy},on:{\"update-accuracy\":_vm.updateAccuracy,\"alert-generated\":_vm.handleAlert}}),_c('mek-projectile-burst-value',{attrs:{\"burst-value\":_vm.selected_burst_value},on:{\"update-burst-value\":_vm.updateBurstValue,\"alert-generated\":_vm.handleAlert}}),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('div',{staticClass:\"mek-inline-flex-col\"},[_c('mek-projectile-multi-feed',{attrs:{\"multi-feed\":_vm.selected_multi_feed},on:{\"update-multi-feed\":_vm.updateMultiFeed,\"alert-generated\":_vm.handleAlert}})],1),_c('mek-projectile-range-mod',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"range-mod\":_vm.selected_range_mod,\"base-range\":_vm.selected_damage.range},on:{\"update-range-mod\":_vm.updateRangeMod,\"alert-generated\":_vm.handleAlert}}),_c('mek-projectile-feature',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"feature-array\":_vm.feature_array,\"burst-value\":_vm.selected_burst_value.burst_value},on:{\"update-feature\":_vm.updateFeature,\"alert-generated\":_vm.handleAlert}}),_c('mek-space-efficiency',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"space_efficiency\":_vm.efficiencies.space,\"raw_space\":_vm.raw_space},on:{\"update-efficiencies\":_vm.updateEfficiencies}})],1)],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":5}},[_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Kills: \"+_vm._s(_vm.selected_damage.damage)+\" K\")]),_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_vm._v(\"Damage Capacity: \"+_vm._s(_vm.damage_capacity)+\" K\")]),_c('div',{attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Final Range: \"+_vm._s(_vm.selected_damage.range * _vm.selected_range_mod.range_mod))]),_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Feature(s):\"),_c('div',{staticStyle:{\"max-width\":\"150px\",\"margin-left\":\"10px\"}},[_vm._v(_vm._s(_vm.feature_list))])]),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.raw_space))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Space: \"+_vm._s(_vm.space_cost))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.round(_vm.weight,2))+\" tons\")]),_c('div',{attrs:{\"slot\":\"col3-row4\"},slot:\"col3-row4\"},[_vm._v(\" \")]),_c('div',{attrs:{\"slot\":\"col3-row5\"},slot:\"col3-row5\"},[_vm._v(\"Standard Ammo Cost: \"+_vm._s(_vm.round(_vm.cost*0.01,2))+\"/shot\")]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.selected_damage.cost))]),_c('div',{attrs:{\"slot\":\"col4-row2\"},slot:\"col4-row2\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.cost_multiplier))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row3\"},slot:\"col4-row3\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <span class=\"mek-inline-flex-col\" style=\"width:100%;\">\r\n        <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||projectile_name\"\r\n            :component-changed=\"component_changed\"\r\n            @update-component-name=\"updateComponentName\"\r\n        ></mek-component-name>\r\n        \r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-projectile-damage @update-damage=\"updateDamage\" @alert-generated=\"handleAlert\"\r\n                :damage=\"selected_damage\"\r\n            ></mek-projectile-damage>\r\n            <mek-projectile-accuracy \r\n                @update-accuracy=\"updateAccuracy\" @alert-generated=\"handleAlert\"\r\n                :accuracy=\"selected_accuracy\"\r\n            ></mek-projectile-accuracy>\r\n            <mek-projectile-burst-value \r\n                    @update-burst-value=\"updateBurstValue\" @alert-generated=\"handleAlert\"\r\n                    :burst-value=\"selected_burst_value\"\r\n                ></mek-projectile-burst-value>\r\n            <div class=\"mek-inline-flex-row\">\r\n                <div class=\"mek-inline-flex-col\">\r\n                    <mek-projectile-multi-feed \r\n                        @update-multi-feed=\"updateMultiFeed\" @alert-generated=\"handleAlert\"\r\n                        :multi-feed=\"selected_multi_feed\"\r\n                    ></mek-projectile-multi-feed>\r\n                    <!-- not using for now\r\n                    mek-projectile-mount-type \r\n                        @update-mount-type=\"updateMountType\" \r\n                        :mount-type=\"selected_mount_type\"\r\n                    ></mek-projectile-mount-type-->\r\n                </div>\r\n                <mek-projectile-range-mod style=\"align-self:baseline;\"\r\n                    @update-range-mod=\"updateRangeMod\" @alert-generated=\"handleAlert\"\r\n                    :range-mod=\"selected_range_mod\"\r\n                    :base-range=\"selected_damage.range\"\r\n                ></mek-projectile-range-mod>\r\n                <mek-projectile-feature style=\"align-self:baseline;\"\r\n                        @update-feature=\"updateFeature\" @alert-generated=\"handleAlert\"\r\n                        :feature-array=\"feature_array\"\r\n                        :burst-value=\"selected_burst_value.burst_value\"\r\n                    ></mek-projectile-feature>\r\n                <mek-space-efficiency style=\"align-self:baseline;\"\r\n                    :space_efficiency=\"efficiencies.space\"\r\n                    :raw_space=\"raw_space\"\r\n                    @update-efficiencies=\"updateEfficiencies\"\r\n                ></mek-space-efficiency>\r\n            </div>                \r\n        </div>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-component-stats :cols=\"4\" :rows=\"5\">\r\n                <div slot=\"col1-row1\">Kills: {{selected_damage.damage}} K</div>\r\n                <div slot=\"col1-row2\">Damage Capacity: {{damage_capacity}} K</div>\r\n                <div slot=\"col1-row3\">Final Range: {{selected_damage.range * selected_range_mod.range_mod}}</div>\r\n\r\n                <div slot=\"col2-row1\">Feature(s):<div style=\"max-width:150px;margin-left:10px;\">{{feature_list}}</div></div>\r\n\r\n                <div slot=\"col3-row1\">Base Space: {{raw_space}}</div>\r\n                <div slot=\"col3-row2\">Space: {{space_cost}}</div>\r\n                <div slot=\"col3-row3\">Weight: {{round(weight,2)}} tons</div>\r\n                <div slot=\"col3-row4\">&nbsp;</div>\r\n                <div slot=\"col3-row5\">Standard Ammo Cost: {{round(cost*0.01,2)}}/shot</div>\r\n\r\n                <div slot=\"col4-row1\">Base Cost: {{selected_damage.cost}}</div>\r\n                <div slot=\"col4-row2\">Multiplier: x{{cost_multiplier}}</div>\r\n                <div slot=\"col4-row3\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n            </mek-component-stats>\r\n            <mek-save-reset-component @save-reset-component=\"componentSaveReset\"></mek-save-reset-component>\r\n        </div>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\nimport selected_item_mixin from \"@/mixins/selected_item_mixin\";\r\nimport utility_mixin from \"@/mixins/utility_mixin\";\r\nimport component_computed_mixin from \"@/mixins/component_computed_mixin\";\r\nimport component_methods_mixin from \"@/mixins/component_methods_mixin\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_projectile\",\r\n    props:[],\r\n    mixins:[selected_item_mixin, utility_mixin, component_computed_mixin,component_methods_mixin],\r\n    components:\r\n    {\r\n        \"mek-projectile-damage\":()=>\r\n        import(/* webpackChunkName: \"mek_projectile-damage\" */\"./subcomponents/mek_projectile-damage.vue\"),\r\n        \"mek-projectile-accuracy\":()=>\r\n        import(/* webpackChunkName: \"mek_projectile-accuracy\" */\"./subcomponents/mek_projectile-accuracy.vue\"),\r\n        \"mek-projectile-multi-feed\":()=>\r\n        import(/* webpackChunkName: \"mek_projectile-multi-feed\" */\"./subcomponents/mek_projectile-multi-feed.vue\"),\r\n        \"mek-projectile-range-mod\":()=>\r\n        import(/* webpackChunkName: \"mek_projectile-range-mod\" */\"./subcomponents/mek_projectile-range-mod.vue\"),\r\n        \"mek-projectile-burst-value\":()=>\r\n        import(/* webpackChunkName: \"mek_projectile-burst-value\" */\"./subcomponents/mek_projectile-burst-value.vue\"),\r\n        \"mek-projectile-feature\":()=>\r\n        import(/* webpackChunkName: \"mek_projectile-feature\" */\"./subcomponents/mek_projectile-feature.vue\"),\r\n        //\"mek-projectile-mount-type\":mek_projectile_mount_type,\r\n\r\n        \"mek-space-efficiency\":()=>\r\n        import(/* webpackChunkName: \"mek-space-efficiency\" */\"@/design_components/universal/mek-space-efficiency.vue\"),\r\n        \"mek-component-name\":()=>\r\n        import(/* webpackChunkName: \"mek-component-name\" */\"@/design_components/universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>\r\n        import(/* webpackChunkName: \"mek-save-reset-component\" */\"@/design_components/universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>\r\n        import(/* webpackChunkName: \"mek_component-stats\" */\"@/design_components/universal/mek_component-stats.vue\"),\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.uuid=null;\r\n        obj.component_name=null;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"projectile\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.selected_damage={damage:1,cost:1,range:3};\r\n        obj.selected_accuracy={accuracy:0,cost:1};\r\n        obj.selected_range_mod={range_mod:1,cost:1, range:3};\r\n        obj.selected_multi_feed={feeds:1,cost:1};\r\n        obj.selected_burst_value={burst_value:1,cost:1};\r\n\r\n        obj.damage_capacity=1;\r\n\r\n        obj.feature_array=[];\r\n\r\n        obj.efficiencies={};\r\n        obj.efficiencies.space={};\r\n        obj.efficiencies.space.cost=0;\r\n        obj.efficiencies.space.modifier=0;\r\n\r\n        obj.cost_multipliers={};\r\n        obj.cost_multipliers.accuracy=1;\r\n        obj.cost_multipliers.feature=1;\r\n        obj.cost_multipliers.multi_feed=1;\r\n        obj.cost_multipliers.burst_value=1;\r\n        obj.cost_multipliers.range_mod=1;\r\n\r\n        obj.hasAlert=false;\r\n\r\n        //obj.selected_mount_type={mount_type:\"Servo-Mounted\"};\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        updateComponentName(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        updateEfficiencies(_data)\r\n        {\r\n            this.$set(this.efficiencies,\"space\",_data);\r\n            this.component_changed=true;\r\n        },\r\n        updateDamage(_damage)\r\n        {\r\n            this.$set(this,\"selected_damage\",_damage);\r\n            this.component_changed=true;\r\n            this.damage_capacity=_damage.damage;\r\n        },\r\n        updateAccuracy(_accuracy)\r\n        {\r\n            this.$set(this,\"selected_accuracy\",_accuracy);\r\n            this.cost_multipliers.accuracy=_accuracy.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateMultiFeed(_multi_feed)\r\n        {\r\n            this.$set(this,\"selected_multi_feed\",_multi_feed);\r\n            this.cost_multipliers.multi_feed=_multi_feed.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateBurstValue(_burst_value)\r\n        {\r\n            this.$set(this,\"selected_burst_value\",_burst_value);\r\n            this.cost_multipliers.burst_value=_burst_value.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateRangeMod(_range_mod)\r\n        {\r\n            this.$set(this,\"selected_range_mod\",_range_mod)\r\n            this.cost_multipliers.range_mod=_range_mod.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateFeature(_featureArray)\r\n        {\r\n            this.$set(this,\"feature_array\",_featureArray);\r\n            this.cost_multipliers.feature=this.feature_array.reduce((_multi,_val)=>{return _multi*=_val.cost},1);\r\n            this.projectile_name;\r\n        },\r\n        /* updateMountType(_mountType)\r\n        {\r\n            this.$set(this,\"selected_mount_type\",_mountType);\r\n            this.projectile_name;\r\n        }, */\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"clear\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                        break;\r\n                    }\r\n                    // eslint-disable-next-line\r\n                case \"clear\":\r\n                    this.uuid=null;\r\n                    this.efficiencies.space.modifier=0;\r\n                    this.component_name=null;\r\n                    this.$set(this,\"selected_damage\",{damage:1,cost:1,range:3});\r\n                    this.$set(this,\"selected_accuracy\",{accuracy:0,cost:1});\r\n                    this.$set(this,\"selected_range_mod\",{range_mod:1,cost:1, range:3});\r\n                    this.$set(this,\"selected_multi_feed\",{feeds:1,cost:1});\r\n                    this.$set(this,\"selected_burst_value\",{burst_value:1,cost:1});\r\n                    //this.mount_type.mount_type=\"Servo-Mounted\";\r\n                    this.$set(this,\"feature_array\",[]);\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        },\r\n        output_data()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"projectile\";\r\n            return_data.component_name=this.component_name===null?this.projectile_name:this.component_name;\r\n\r\n            return_data.cost_multipliers=JSON.parse(JSON.stringify(this.cost_multipliers));\r\n            return_data.efficiencies=JSON.parse(JSON.stringify(this.efficiencies));\r\n\r\n            return_data.selected_damage=JSON.parse(JSON.stringify(this.selected_damage));\r\n            return_data.selected_accuracy=JSON.parse(JSON.stringify(this.selected_accuracy));\r\n            return_data.feature_array=JSON.parse(JSON.stringify(this.feature_array));\r\n            return_data.selected_range_mod=JSON.parse(JSON.stringify(this.selected_range_mod));\r\n            return_data.selected_multi_feed=JSON.parse(JSON.stringify(this.selected_multi_feed));\r\n            return_data.selected_burst_value=JSON.parse(JSON.stringify(this.selected_burst_value));\r\n            //return_data.selected_mount_type=JSON.parse(JSON.stringify(this.selected_mount_type));\r\n\r\n            return_data.cost=this.cost;\r\n            return_data.cost_multiplier=this.cost_multiplier;\r\n            return_data.weight=this.weight;\r\n            return_data.final_damage=this.final_damage;\r\n            return_data.damage_capacity=this.damage_capacity;\r\n\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return return_data;\r\n        },\r\n        ingest_data(_data_object)\r\n        {\r\n            let alertMessage=\"Projectile is not valid, resetting.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(this.component_name==this.projectile_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=this.hasAlert;});\r\n        },\r\n        handleAlert(_alert_status)\r\n        {\r\n            this.hasAlert=_alert_status;\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        raw_space()\r\n        {\r\n            return this.round(this.selected_damage.cost * this.cost_multiplier,2);\r\n        },\r\n        cost:function()\r\n        {\r\n            let subtotal_cost=this.selected_damage.cost * this.cost_multiplier;\r\n            subtotal_cost += this.efficiencies.space.cost;\r\n\r\n            return this.round(subtotal_cost,2);\r\n        },\r\n        projectile_name()\r\n        {\r\n            let projectile_name=this.selected_burst_value.burst_value>1?\"Burst-\"+this.selected_burst_value.burst_value+\" \":\"\";\r\n\r\n            projectile_name=this.feature_array.reduce((_name,_val)=>\r\n            {\r\n                return _name+_val.feature+\" \";\r\n            },projectile_name);\r\n\r\n            //projectile_name=projectile_name+\" \"+this.selected_mount_type.mount_type+\" Gun\";\r\n            projectile_name+=this.selected_damage.damage+\"K Gun\";\r\n\r\n            return projectile_name.replace(/\\s+/g,\" \");\r\n        }\r\n    }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_projectile-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_projectile-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_projectile-main.vue?vue&type=template&id=58957ece&\"\nimport script from \"./mek_projectile-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_projectile-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default\r\n{\r\n    computed:\r\n    {\r\n        space_cost()\r\n        {\r\n            return this.round(this.raw_space - this.efficiencies.space.modifier,2);\r\n        },\r\n        cost_multiplier()\r\n        {\r\n            let cost_multiplier=1;\r\n            for(let multi in this.cost_multipliers)\r\n            {\r\n                cost_multiplier*=this.cost_multipliers[multi];\r\n            }\r\n            return this.round(cost_multiplier,2);\r\n        },\r\n        weight()\r\n        {\r\n            return this.round((this.damage_capacity / 2),2);\r\n        },\r\n        feature_list()\r\n        {\r\n            if(typeof this.feature_array===\"undefined\")\r\n            {\r\n                return \"\";\r\n            }\r\n            return this.feature_array.reduce(function(_string, _val, _index)\r\n            {\r\n                _string+=_index>0 ? \", \" : \"\";\r\n                _string+=_val.feature;\r\n                return _string;\r\n            },\"\");\r\n        },\r\n        newComponent()\r\n        {//responsible for ingesting data from the store\r\n            let selectedComponent=JSON.parse(JSON.stringify(this.$store.getters.selectedComponent));\r\n\r\n            if(typeof selectedComponent!==\"undefined\" && selectedComponent!==null)\r\n            {\r\n                if(selectedComponent.uuid!==this.uuid \r\n                    && selectedComponent.component_category==this.component_category\r\n                    && selectedComponent.component_type==this.component_type)\r\n                {\r\n                    this.ingest_data(selectedComponent);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n    }\r\n};","export default\r\n{\r\n    methods:\r\n    {\r\n        universal_ingest_data(_data_object,_alertMessage)\r\n        {\r\n            this.original_component=JSON.stringify(_data_object);//store a copy as a JSON object for 'reset' purposes\r\n            if(_data_object===null)\r\n            {\r\n                this.componentSaveReset(\"clear\");\r\n                //generic error comment\r\n                this.$store.commit(\"alertMessage\",_alertMessage);\r\n            }\r\n\r\n            for(let _property in _data_object)\r\n            {//exclude computed properties that are auto updated\r\n                if(Object.keys(this._computedWatchers).includes(_property))\r\n                {\r\n                    continue;\r\n                }\r\n                if(typeof _data_object[_property]===\"object\" && !Array.isArray(_data_object[_property]))\r\n                {\r\n                    if(typeof this[_property]!==\"object\" || this[_property]===null)\r\n                    {\r\n                        this[_property]={};\r\n                    }\r\n                    for(let _sub_property in _data_object[_property])\r\n                    {\r\n                        this.$set(this[_property],[_sub_property],_data_object[_property][_sub_property]);\r\n                    }\r\n                }\r\n                else if(Array.isArray(_data_object[_property]))\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n                else\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n            }\r\n            this.$forceUpdate();\r\n        },\r\n        updateComponentName:function(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
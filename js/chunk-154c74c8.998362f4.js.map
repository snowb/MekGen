{"version":3,"sources":["webpack:///./src/mixins/servo_classes_mixin.js","webpack:///./src/mixins/component_computed_mixin.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/mek_shield/mek_shield-main.vue?aea0","webpack:///src/components/mek_shield/mek_shield-main.vue","webpack:///./src/components/mek_shield/mek_shield-main.vue?5a95","webpack:///./src/components/mek_shield/mek_shield-main.vue","webpack:///./src/mixins/component_methods_mixin.js"],"names":["__webpack_exports__","data","servo_classes","code","id","name","computed","space_cost","this","round","raw_space","efficiencies","space","modifier","cost_multiplier","multi","cost_multipliers","weight","damage_capacity","feature_list","feature_array","reduce","_string","_val","_index","feature","newComponent","selectedComponent","JSON","parse","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","$store","getters","uuid","component_category","component_type","ingest_data","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","NAME","configurable","get","match","e","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","new-component","component-name","component_name","shield_name","component-changed","component_changed","on","update-component-name","updateComponentName","type","update-type","select_type","shield_class","is_ablative","update-class-code","select_class_code","toLowerCase","defense_ability","cost","update-defense-ability","select_da","_e","binder","base_stopping_power","stopping_power","update-binder","select_binder","reset-time","reset_time","update-reset-time","select_reset","turns-in-use","turns_in_use","update-turns-in-use","select_turns","armor-type","armor_type","update-armor-type","select_armor_type","absorption","update-absorption","select_absorption","weakness-array","weakness_array","update-weakness","select_weakness","space_efficiency","update-efficiencies","updateEfficiencies","cols","rows","kills","slot","_v","_s","calculate_stopping_power","staticStyle","padding-left","damage_coefficient","max-width","margin-left","time","surge_damage","font-weight","save-reset-component","componentSaveReset","staticRenderFns","mek_shield_mainvue_type_script_lang_js_","mixins","servo_classes_mixin","selected_item_mixin","utility_mixin","component_methods_mixin","component_computed_mixin","components","mekshield-type","then","bind","mekshield-class","mekshield-defense-ability","mekshield-binder","mekshield-reset-time","mekshield-turns-in-use","mekshield-weakness","mek-space-efficiency","mek-component-name","mek-save-reset-component","mek-component-stats","mek-armor-type","mek-energy-absorbing-armor","obj","original_component","stopping_power_modifier","weakness","monicker","exclusive","armor_penalty","methods","_type","$set","_sum","_class_code_obj","_da_obj","da","_binder_obj","_reset_obj","_turns_obj","_weakness_obj","_cost_multi","_armor_type","stringify_default","_absorption","_name","sp_modifier","weighted_stopping_power","_data","_data_object","_this","alertMessage","universal_ingest_data","$nextTick","output_shield_data","_this2","return_data","create_uuid","_action","action","commit","isAblative","some","isSurge","multiplier","base_cost","subtotal_cost","fullname","exclusive_name","partialname","_el","replace","mek_shield_mek_shield_mainvue_type_script_lang_js_","component","Object","componentNormalizer","_alertMessage","_property","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_5___default","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_keys__WEBPACK_IMPORTED_MODULE_2___default","_computedWatchers","includes","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0___default","_sub_property","$forceUpdate"],"mappings":"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","file":"js/chunk-154c74c8.998362f4.js","sourcesContent":["export default\r\n{\r\n    data:()=>\r\n    {\r\n        return {\r\n            servo_classes:\r\n                [\r\n                    {code:1,id:\"SL\",name:\"Superlight\"},\r\n                    {code:2,id:\"LW\",name:\"Lightweight\"},\r\n                    {code:3,id:\"STR\",name:\"Striker\"},\r\n                    {code:4,id:\"MS\",name:\"Medium Striker\"},\r\n                    {code:5,id:\"HS\",name:\"Heavy Striker\"},\r\n                    {code:6,id:\"MW\",name:\"Mediumweight\"},\r\n                    {code:7,id:\"LH\",name:\"Light Heavy\"},\r\n                    {code:8,id:\"MH\",name:\"Medium Heavy\"},\r\n                    {code:9,id:\"AH\",name:\"Armored Heavy\"},\r\n                    {code:10,id:\"SH\",name:\"Super Heavy\"},\r\n                    {code:11,id:\"MgH\",name:\"Mega Heavy\"}\r\n                ]};\r\n    }\r\n}\r\n","export default\r\n{\r\n    computed:\r\n    {\r\n        space_cost()\r\n        {\r\n            return this.round(this.raw_space - this.efficiencies.space.modifier,2);\r\n        },\r\n        cost_multiplier()\r\n        {\r\n            let cost_multiplier=1;\r\n            for(let multi in this.cost_multipliers)\r\n            {\r\n                cost_multiplier*=this.cost_multipliers[multi];\r\n            }\r\n            return this.round(cost_multiplier,2);\r\n        },\r\n        weight()\r\n        {\r\n            return this.round((this.damage_capacity / 2),2);\r\n        },\r\n        feature_list()\r\n        {\r\n            if(typeof this.feature_array===\"undefined\")\r\n            {\r\n                return \"\";\r\n            }\r\n            return this.feature_array.reduce(function(_string, _val, _index)\r\n            {\r\n                _string+=_index>0 ? \", \" : \"\";\r\n                _string+=_val.feature;\r\n                return _string;\r\n            },\"\");\r\n        },\r\n        newComponent()\r\n        {//responsible for ingesting data from the store\r\n            let selectedComponent=JSON.parse(JSON.stringify(this.$store.getters.selectedComponent));\r\n\r\n            if(typeof selectedComponent!==\"undefined\" && selectedComponent!==null)\r\n            {\r\n                if(selectedComponent.uuid!==this.uuid \r\n                    && selectedComponent.component_category==this.component_category\r\n                    && selectedComponent.component_type==this.component_type)\r\n                {\r\n                    this.ingest_data(selectedComponent);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n    }\r\n};","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"mek-inline-flex-col\"},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.shield_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('div',{staticClass:\"mek-flex-col\"},[_c('mekshield-type',{attrs:{\"type\":_vm.type},on:{\"update-type\":_vm.select_type}}),_c('mekshield-class',{attrs:{\"shield_class\":_vm.shield_class,\"type\":_vm.type,\"is_ablative\":_vm.is_ablative},on:{\"update-class-code\":_vm.select_class_code}})],1),_c('span',{staticClass:\"mek-flex-col no-margin\"},[(_vm.type.toLowerCase()=='standard')?_c('mekshield-defense-ability',{attrs:{\"defense_ability\":_vm.defense_ability,\"cost\":_vm.cost_multipliers.defense_ability},on:{\"update-defense-ability\":_vm.select_da}}):_vm._e(),(_vm.type.toLowerCase()=='standard' || _vm.type.toLowerCase()=='active')?_c('mekshield-binder',{attrs:{\"binder\":_vm.binder,\"base_stopping_power\":_vm.shield_class.stopping_power},on:{\"update-binder\":_vm.select_binder}}):_vm._e(),(_vm.type.toLowerCase()=='reactive')?_c('mekshield-reset-time',{attrs:{\"reset-time\":_vm.reset_time},on:{\"update-reset-time\":_vm.select_reset}}):_vm._e(),(_vm.type.toLowerCase()=='reactive')?_c('mekshield-turns-in-use',{attrs:{\"turns-in-use\":_vm.turns_in_use},on:{\"update-turns-in-use\":_vm.select_turns}}):_vm._e()],1),_c('span',{staticClass:\"mek-flex-col no-margin\"},[(_vm.type.toLowerCase()=='standard' || _vm.type.toLowerCase()=='active')?_c('mek-armor-type',{attrs:{\"armor-type\":_vm.armor_type},on:{\"update-armor-type\":_vm.select_armor_type}}):_vm._e(),(_vm.type.toLowerCase()=='standard' || _vm.type.toLowerCase()=='active')?_c('mek-energy-absorbing-armor',{attrs:{\"absorption\":_vm.absorption},on:{\"update-absorption\":_vm.select_absorption}}):_vm._e()],1),(_vm.type.toLowerCase()=='reactive')?_c('span',{staticClass:\"mek-flex-col no-margin\"},[_c('mekshield-weakness',{attrs:{\"weakness-array\":_vm.weakness_array},on:{\"update-weakness\":_vm.select_weakness}})],1):_vm._e(),_c('span',{staticClass:\"mek-flex-col no-margin\"},[_c('mek-space-efficiency',{attrs:{\"space_efficiency\":_vm.efficiencies.space,\"raw_space\":_vm.raw_space},on:{\"update-efficiencies\":_vm.updateEfficiencies}})],1)]),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":5}},[(_vm.shield_class.kills!==null)?_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Kills: \"+_vm._s(_vm.shield_class.kills))]):_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Base Stopping Power: \"+_vm._s(_vm.round(_vm.shield_class.stopping_power,2))+\"\\n                \"),_c('br'),_vm._v(\"Final Stopping Power: \"+_vm._s(_vm.round(_vm.calculate_stopping_power(),2))+\"\\n            \")]),(_vm.armor_type!==null)?_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_vm._v(\"Armor Type: \"+_vm._s(_vm.armor_type.type))]):_vm._e(),(_vm.armor_type!==null)?_c('div',{staticStyle:{\"padding-left\":\"10px\"},attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Damage Coefficient: \"+_vm._s(_vm.armor_type.damage_coefficient))]):_vm._e(),(_vm.absorption!==null)?_c('div',{attrs:{\"slot\":\"col1-row4\"},slot:\"col1-row4\"},[_vm._v(\"Absorption: \"+_vm._s(_vm.absorption.absorption*100)+\"%\")]):_vm._e(),(_vm.type.toLowerCase()=='standard' || _vm.type.toLowerCase()=='active')?_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Binder Space: \"+_vm._s(_vm.round(_vm.binder.space,3)))]):_vm._e(),(_vm.type.toLowerCase()=='reactive')?_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Weakness(es):\"),_c('div',{staticStyle:{\"max-width\":\"150px\",\"margin-left\":\"10px\"}},[_vm._v(_vm._s(_vm.feature_list))])]):_vm._e(),(_vm.type.toLowerCase()=='reactive')?_c('div',{attrs:{\"slot\":\"col2-row2\"},slot:\"col2-row2\"},[_vm._v(\"Reset Time: \"+_vm._s(_vm.reset_time.time))]):_vm._e(),(_vm.type.toLowerCase()=='reactive')?_c('div',{attrs:{\"slot\":\"col2-row3\"},slot:\"col2-row3\"},[_vm._v(\"Turns in Use: \"+_vm._s(_vm.turns_in_use.time))]):_vm._e(),(_vm.type.toLowerCase()=='reactive')?_c('div',{attrs:{\"slot\":\"col2-row4\"},slot:\"col2-row4\"},[_vm._v(\"Surge Damage: \"+_vm._s(_vm.surge_damage))]):_vm._e(),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.raw_space))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Space: \"+_vm._s(_vm.space_cost))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.round(_vm.weight,2))+\" tons\")]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.shield_class.cost))]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.cost_multiplier))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <span class=\"mek-inline-flex-col\">\r\n        <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||shield_name\"\r\n            :component-changed=\"component_changed\"\r\n            @update-component-name=\"updateComponentName\"\r\n        ></mek-component-name>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <div class=\"mek-flex-col\">\r\n                <mekshield-type :type=\"type\" @update-type=\"select_type\"></mekshield-type>\r\n                <mekshield-class :shield_class=\"shield_class\" :type=\"type\" :is_ablative=\"is_ablative\" @update-class-code=\"select_class_code\"></mekshield-class>\r\n            </div>\r\n            <span class=\"mek-flex-col no-margin\">\r\n                <mekshield-defense-ability\r\n                    v-if=\"type.toLowerCase()=='standard'\"\r\n                    :defense_ability=\"defense_ability\"\r\n                    :cost=\"cost_multipliers.defense_ability\" \r\n                    @update-defense-ability=\"select_da\"></mekshield-defense-ability>\r\n                <mekshield-binder\r\n                    v-if=\"type.toLowerCase()=='standard' || type.toLowerCase()=='active'\"\r\n                    :binder=\"binder\"\r\n                    :base_stopping_power=\"shield_class.stopping_power\"\r\n                    @update-binder=\"select_binder\"\r\n                ></mekshield-binder>\r\n                <mekshield-reset-time \r\n                    v-if=\"type.toLowerCase()=='reactive'\"\r\n                    :reset-time=\"reset_time\"\r\n                    @update-reset-time=\"select_reset\"\r\n                ></mekshield-reset-time>\r\n                <mekshield-turns-in-use\r\n                    v-if=\"type.toLowerCase()=='reactive'\"\r\n                    :turns-in-use=\"turns_in_use\"\r\n                    @update-turns-in-use=\"select_turns\"\r\n                ></mekshield-turns-in-use>\r\n            </span>\r\n            <span class=\"mek-flex-col no-margin\">\r\n                <mek-armor-type v-if=\"type.toLowerCase()=='standard' || type.toLowerCase()=='active'\"\r\n                    :armor-type=\"armor_type\"\r\n                    @update-armor-type=\"select_armor_type\"\r\n                ></mek-armor-type>\r\n                <mek-energy-absorbing-armor\r\n                    v-if=\"type.toLowerCase()=='standard' || type.toLowerCase()=='active'\"\r\n                    :absorption=\"absorption\"\r\n                    @update-absorption=\"select_absorption\"\r\n                ></mek-energy-absorbing-armor>\r\n            </span>\r\n            <span class=\"mek-flex-col no-margin\" v-if=\"type.toLowerCase()=='reactive'\">\r\n                <mekshield-weakness\r\n                    @update-weakness=\"select_weakness\"\r\n                    :weakness-array=\"weakness_array\"\r\n                ></mekshield-weakness>\r\n            </span>\r\n            <span class=\"mek-flex-col no-margin\">\r\n                <mek-space-efficiency\r\n                    :space_efficiency=\"efficiencies.space\"\r\n                    :raw_space=\"raw_space\"\r\n                    @update-efficiencies=\"updateEfficiencies\"\r\n                ></mek-space-efficiency>\r\n            </span>\r\n        </div>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-component-stats :cols=\"4\" :rows=\"5\">\r\n                <div slot=\"col1-row1\" v-if=\"shield_class.kills!==null\">Kills: {{shield_class.kills}}</div>\r\n                <div slot=\"col1-row1\" v-else>Base Stopping Power: {{round(shield_class.stopping_power,2)}}\r\n                    <br>Final Stopping Power: {{round(calculate_stopping_power(),2)}}\r\n                </div>\r\n                <div slot=\"col1-row2\" v-if=\"armor_type!==null\">Armor Type: {{armor_type.type}}</div>\r\n                <div slot=\"col1-row3\" v-if=\"armor_type!==null\" style=\"padding-left:10px;\">Damage Coefficient: {{armor_type.damage_coefficient}}</div>\r\n                <div slot=\"col1-row4\" v-if=\"absorption!==null\">Absorption: {{absorption.absorption*100}}%</div>\r\n                <div slot=\"col2-row1\" v-if=\"type.toLowerCase()=='standard' || type.toLowerCase()=='active'\">Binder Space: {{round(binder.space,3)}}</div>\r\n                <div slot=\"col2-row1\" v-if=\"type.toLowerCase()=='reactive'\">Weakness(es):<div style=\"max-width:150px;margin-left:10px;\">{{feature_list}}</div></div>\r\n                <div slot=\"col2-row2\" v-if=\"type.toLowerCase()=='reactive'\">Reset Time: {{reset_time.time}}</div>\r\n                <div slot=\"col2-row3\" v-if=\"type.toLowerCase()=='reactive'\">Turns in Use: {{turns_in_use.time}}</div>\r\n                <div slot=\"col2-row4\" v-if=\"type.toLowerCase()=='reactive'\">Surge Damage: {{surge_damage}}</div>\r\n                <div slot=\"col3-row1\">Base Space: {{raw_space}}</div>\r\n                <div slot=\"col3-row2\">Space: {{space_cost}}</div>\r\n                <div slot=\"col3-row3\">Weight: {{round(weight,2)}} tons</div>\r\n                <div slot=\"col4-row1\">Base Cost: {{shield_class.cost}}</div>\r\n                <div slot=\"col4-row1\">Multiplier: x{{cost_multiplier}}</div>\r\n                <div slot=\"col4-row1\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n            </mek-component-stats>\r\n            <mek-save-reset-component @save-reset-component=\"componentSaveReset\"></mek-save-reset-component>\r\n        </div>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\n//imports\r\nimport servo_classes_mixin from \"../../mixins/servo_classes_mixin.js\";\r\nimport selected_item_mixin from \"../../mixins/selected_item_mixin.js\";\r\nimport utility_mixin from \"../../mixins/utility_mixin.js\";\r\nimport component_methods_mixin from \"../../mixins/component_methods_mixin\";\r\nimport component_computed_mixin from \"../../mixins/component_computed_mixin\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_shield\",\r\n    mixins:\r\n        [\r\n            servo_classes_mixin, \r\n            selected_item_mixin, \r\n            utility_mixin, \r\n            component_methods_mixin, \r\n            component_computed_mixin\r\n        ],\r\n    components:\r\n    {\r\n        \"mekshield-type\":()=>import(\"./subcomponents/mek_shield-type.vue\"),\r\n        \"mekshield-class\":()=>import(\"./subcomponents/mek_shield-class.vue\"),\r\n        \"mekshield-defense-ability\":()=>import(\"./subcomponents/mek_shield-defense-ability.vue\"),\r\n        \"mekshield-binder\":()=>import(\"./subcomponents/mek_shield-binder.vue\"),\r\n        \"mekshield-reset-time\":()=>import(\"./subcomponents/mek_shield-reset-time.vue\"),\r\n        \"mekshield-turns-in-use\":()=>import(\"./subcomponents/mek_shield-turns-in-use.vue\"),\r\n        \"mekshield-weakness\":()=>import(\"./subcomponents/mek_shield-weakness.vue\"),\r\n        \r\n        \"mek-space-efficiency\":()=>import(\"../universal/mek-space-efficiency.vue\"),\r\n        \"mek-component-name\":()=>import(\"../universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>import(\"../universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>import(\"../universal/mek_component-stats.vue\"),\r\n\r\n        \"mek-armor-type\":()=>import(\"../universal/mek_armor-type.vue\"),\r\n        \"mek-energy-absorbing-armor\":()=>import(\"../universal/mek_energy-absorbing-armor.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.uuid=null;\r\n        obj.type=\"standard\";\r\n        obj.component_name=null;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"shield\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.shield_class={};\r\n        obj.shield_class.code=1;\r\n        obj.shield_class.stopping_power=5;\r\n        obj.shield_class.kills=null;\r\n        obj.shield_class.cost=5;\r\n        obj.shield_class.id=\"SL\";\r\n        obj.shield_class.name=\"Superlight\";\r\n\r\n        obj.defense_ability=-2;\r\n        obj.cost_multipliers={};\r\n        obj.cost_multipliers.defense_ability=1;\r\n        \r\n        obj.binder={};\r\n        obj.binder.cost=1;\r\n        obj.binder.space=0;\r\n        obj.binder.stopping_power_modifier=0;\r\n        obj.cost_multipliers.binder=1;\r\n\r\n        obj.reset_time={};\r\n        obj.reset_time.time=2;\r\n        obj.reset_time.cost=1;\r\n        obj.cost_multipliers.reset_time=1;\r\n        \r\n        obj.turns_in_use={};\r\n        obj.turns_in_use.time=\"X\";\r\n        obj.turns_in_use.cost=1;\r\n        obj.cost_multipliers.turns_in_use=1;\r\n\r\n        obj.weakness_array=[];\r\n        obj.weakness_array[0]={};\r\n        obj.weakness_array[0].weakness=\"All\";\r\n        obj.weakness_array[0].monicker=\"Shield\";\r\n        obj.weakness_array[0].cost=1;\r\n        obj.weakness_array[0].exclusive=false;\r\n        obj.cost_multipliers.weakness=1;\r\n\r\n        obj.efficiencies={};\r\n        obj.efficiencies.space={modifier:0,cost:0};\r\n\r\n        obj.armor_type={type:\"Standard\",damage_coefficient:1,cost:1};\r\n        obj.cost_multipliers.armor_type=1;\r\n\r\n        obj.absorption={absorption:0,cost:1,armor_penalty:1};\r\n        obj.cost_multipliers.absorption=1;\r\n\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_type:function(_type)\r\n        {\r\n            if(this.type.toLowerCase()==_type.toLowerCase())\r\n            {\r\n                return;\r\n            }\r\n            this.component_changed=true;\r\n            this.type=_type.toLowerCase();\r\n            if(this.type===\"reactive\")\r\n            {\r\n                this.shield_class.cost=this.shield_class.stopping_power*3;\r\n\r\n                this.defense_ability=null;\r\n                this.cost_multipliers.defense_ability=1;\r\n\r\n                this.$set(this,\"binder\",{stopping_power_modifier:0})\r\n                this.cost_multipliers.binder=1;\r\n\r\n                let reset_time=this.reset_time===null?{cost:1,time:2}:this.reset_time;\r\n                this.$set(this,\"reset_time\",reset_time);\r\n                this.cost_multipliers.reset_time=this.reset_time.cost;\r\n\r\n                let turns_in_use=this.turns_in_use===null ? {time:\"X\",cost:1} : this.turns_in_use;\r\n                this.$set(this,\"turns_in_use\",turns_in_use);\r\n                this.cost_multipliers.turns_in_use=this.turns_in_use.cost;\r\n\r\n                let weakness_array=this.weakness_array===null ? [{weakness:\"All\",monicker:\"Shield\",cost:1,exclusive:false}] : this.weakness_array;\r\n                this.$set(this,\"weakness_array\",weakness_array);\r\n                this.cost_multipliers.weakness=this.weakness_array.reduce(function(_sum,_val){return _sum*_val.cost},1);\r\n            \r\n                this.$set(this,\"armor_type\",null);\r\n                this.cost_multipliers.armor_type=1;\r\n                this.$set(this,\"absorption\",null);\r\n                this.cost_multipliers.absorption=1;\r\n            }\r\n            else if(this.type===\"active\")\r\n            {\r\n                this.shield_class.cost=this.shield_class.stopping_power*1.5;\r\n\r\n                this.defense_ability=null;\r\n                this.cost_multipliers.defense_ability=1;\r\n\r\n                if(typeof this.binder.space===\"undefined\")\r\n                {//binder is never null, as stopping_power_modifier is always at least 0\r\n                    this.$set(this,\"binder\",{cost:1,space:0,stopping_power_modifier:0});\r\n                    this.shield_name;\r\n                }\r\n                this.cost_multipliers.binder=this.binder.cost;\r\n                \r\n                this.reset_time=null\r\n                this.cost_multipliers.reset_time=1;\r\n\r\n                this.turns_in_use=null;\r\n                this.cost_multipliers.turns_in_use=1;\r\n\r\n                this.weakness_array=null;\r\n                this.cost_multipliers.weakness=1;\r\n                \r\n                if(this.armor_type===null)\r\n                {\r\n                    this.$set(this,\"armor_type\",{type:\"Standard\",damage_coefficient:1,cost:1})\r\n                    this.cost_multipliers.armor_type=1;\r\n                }\r\n                if(this.absorption===null)\r\n                {\r\n                    this.$set(this,\"absorption\",{absorption:0,cost:1,armor_penalty:1})\r\n                    this.cost_multipliers.absorption=1;\r\n                }\r\n            }\r\n            else if(this.type==\"standard\")\r\n            {\r\n                this.shield_class.cost=this.shield_class.stopping_power;\r\n\r\n                this.defense_ability=this.defense_ability===null ? -2 : this.defense_ability;\r\n                this.cost_multipliers.defense_ability=this.cost_multipliers.defense_ability===null ? 1 : this.cost_multipliers.defense_ability;\r\n                \r\n                if(this.binder===null)\r\n                {\r\n                    this.$set(this,\"binder\",{cost:1,space:0,stopping_power_modifier:0});\r\n                    this.shield_name;\r\n                }\r\n                this.cost_multipliers.binder=this.binder.cost;\r\n\r\n                this.reset_time=null;\r\n                this.cost_multipliers.reset_time=1;\r\n\r\n                this.turns_in_use=null;\r\n                this.cost_multipliers.turns_in_use=1;\r\n\r\n                this.weakness_array=null;\r\n                this.cost_multipliers.weakness=1;\r\n\r\n                if(this.armor_type===null)\r\n                {\r\n                    this.$set(this,\"armor_type\",{type:\"Standard\",damage_coefficient:1,cost:1})\r\n                    this.cost_multipliers.armor_type=1;\r\n                }\r\n                if(this.absorption===null)\r\n                {\r\n                    this.$set(this,\"absorption\",{absorption:0,cost:1,armor_penalty:1})\r\n                    this.cost_multipliers.absorption=1;\r\n                }\r\n            }\r\n            this.component_changed=true;\r\n        },\r\n        select_class_code:function(_class_code_obj)\r\n        {\r\n            this.shield_class.code=_class_code_obj.code;\r\n            this.shield_class.stopping_power=_class_code_obj.stopping_power;\r\n            this.shield_class.cost=_class_code_obj.cost;\r\n            this.shield_class.id=_class_code_obj.id;\r\n            this.shield_class.name=_class_code_obj.name;\r\n            this.component_changed=true;\r\n        },\r\n        select_da:function(_da_obj)\r\n        {\r\n            this.defense_ability=_da_obj.da;\r\n            this.cost_multipliers.defense_ability=_da_obj.cost;\r\n            this.component_changed=true;\r\n        },\r\n        select_binder:function(_binder_obj)\r\n        {\r\n            this.binder.cost=_binder_obj.cost;\r\n            this.binder.space=_binder_obj.space;\r\n            this.binder.stopping_power_modifier=_binder_obj.stopping_power_modifier;\r\n            this.cost_multipliers.binder=_binder_obj.cost;\r\n            this.shield_name;\r\n            this.component_changed=true;\r\n        },\r\n        select_reset:function(_reset_obj)\r\n        {\r\n            this.reset_time=_reset_obj;\r\n            this.cost_multipliers.reset_time=_reset_obj.cost;\r\n            this.component_changed=true;\r\n        },\r\n        select_turns:function(_turns_obj)\r\n        {\r\n            this.turns_in_use=_turns_obj;\r\n            this.cost_multipliers.turns_in_use=_turns_obj.cost;\r\n            this.component_changed=true;\r\n        },\r\n        select_weakness:function(_weakness_obj)\r\n        {\r\n            this.$set(this,\"weakness_array\",_weakness_obj);\r\n            this.cost_multipliers.weakness=this.weakness_array.reduce(function(_cost_multi,_val)\r\n            {\r\n                _cost_multi*=_val.cost;\r\n                return _cost_multi;\r\n            },1);\r\n            this.shield_class.kills=this.is_ablative ? this.calculate_stopping_power()*5 : null;\r\n            this.component_changed=true;\r\n        },\r\n        select_armor_type(_armor_type)\r\n        {\r\n            this.$set(this,\"armor_type\",JSON.parse(JSON.stringify(_armor_type)));\r\n            this.cost_multipliers.armor_type=this.armor_type.cost;\r\n        },\r\n        select_absorption(_absorption)\r\n        {\r\n            this.$set(this,\"absorption\",JSON.parse(JSON.stringify(_absorption)));\r\n            this.cost_multipliers.absorption=this.absorption.cost;\r\n        },\r\n        updateComponentName:function(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        calculate_stopping_power:function()\r\n        {\r\n            let sp_modifier=this.absorption!==null ? this.absorption.armor_penalty + this.binder.stopping_power_modifier : this.binder.stopping_power_modifier;\r\n            return this.shield_class.stopping_power - (this.shield_class.stopping_power * sp_modifier);\r\n        },\r\n        weighted_stopping_power()\r\n        {\r\n            return this.shield_class.stopping_power - (this.shield_class.stopping_power * this.binder.stopping_power_modifier);\r\n        },\r\n        updateEfficiencies:function(_data)\r\n        {\r\n            this.$set(this.efficiencies,\"space\",_data);\r\n            this.component_changed=true\r\n        },\r\n        ingest_data:function(_data_object)\r\n        {\r\n            let alertMessage=\"Shield Has No Type, resetting to 'standard' shield.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(this.component_name==this.shield_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n        },\r\n        output_shield_data:function()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"shield\";\r\n            return_data.component_name=this.component_name===null?this.shield_name:this.component_name;\r\n            return_data.type=this.type;\r\n            return_data.shield_class=JSON.parse(JSON.stringify(this.shield_class));\r\n            return_data.cost_multipliers=JSON.parse(JSON.stringify(this.cost_multipliers));\r\n            return_data.efficiencies=JSON.parse(JSON.stringify(this.efficiencies));\r\n            \r\n            return_data.cost=this.cost;\r\n            return_data.cost_multiplier=this.cost_multiplier;\r\n            return_data.is_ablative=this.is_ablative;\r\n            return_data.weight=this.weight;\r\n\r\n            switch(this.type.toLowerCase())\r\n            {\r\n                case \"standard\":\r\n                    return_data.defense_ability=JSON.parse(JSON.stringify(this.defense_ability));\r\n                    // eslint-disable-next-line\r\n                case \"active\":\r\n                    return_data.binder=JSON.parse(JSON.stringify(this.binder));\r\n                    return_data.armor_type=JSON.parse(JSON.stringify(this.armor_type));\r\n                    return_data.absorption=JSON.parse(JSON.stringify(this.absorption));\r\n                    break;\r\n                case \"reactive\":\r\n                    return_data.reset_time=JSON.parse(JSON.stringify(this.reset_time));\r\n                    return_data.turns_in_use=JSON.parse(JSON.stringify(this.turns_in_use));\r\n                    return_data.weakness_array=JSON.parse(JSON.stringify(this.weakness_array));\r\n                    return_data.surge_damage=this.surge_damage;\r\n                    break;\r\n            }\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return return_data;\r\n        },\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"clear\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_shield_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                    }\r\n                    break;\r\n                case \"clear\":\r\n                    this.uuid=null;\r\n                    this.select_type(\"standard\");\r\n                    this.shield_class.code=1;\r\n                    this.defense_ability=-2;\r\n                    this.binder.stopping_power_modifier=0;\r\n                    this.efficiencies.space.modifier=0;\r\n                    this.armor_type.type=\"Standard\";\r\n                    this.absorption.absorption=0;\r\n                    this.component_name=null;\r\n                    this.shield_name;//must call to force recompute\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        is_ablative:function()\r\n        {\r\n            if(this.weakness_array===null)\r\n            {\r\n                this.shield_class.kills=null;\r\n                return false;\r\n            }\r\n            let isAblative=this.weakness_array.some(function(_val)\r\n            {\r\n                if(_val.weakness.toLowerCase()==\"ablative\")\r\n                {\r\n                    return true;\r\n                }\r\n                return false;\r\n            },this);\r\n\r\n            return isAblative;\r\n        },\r\n        surge_damage:function()\r\n        {\r\n            if(this.weakness_array===null)\r\n            {\r\n                return false;\r\n            }\r\n            let isSurge=this.weakness_array.some(function(_val)\r\n            {\r\n                if(_val.weakness.toLowerCase()==\"surge\")\r\n                {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            return isSurge ? this.shield_class.stopping_power : null;\r\n        },\r\n        cost_multiplier:function()\r\n        {\r\n            let multiplier=1;\r\n            multiplier*=this.cost_multipliers.defense_ability;\r\n            multiplier*=this.cost_multipliers.binder;\r\n            multiplier*=this.cost_multipliers.reset_time;\r\n            multiplier*=this.cost_multipliers.turns_in_use;\r\n            multiplier*=this.cost_multipliers.weakness;\r\n\r\n            return this.round(multiplier,2);\r\n        },\r\n        raw_space:function()\r\n        {\r\n            if(this.type.toLowerCase()==\"standard\")\r\n            {\r\n                return 1;\r\n            }\r\n            let base_cost=this.shield_class.cost * this.cost_multiplier;\r\n            if(this.type.toLowerCase()==\"active\")\r\n            {\r\n                return this.round(base_cost/2, 2);\r\n            }\r\n            else if(this.type.toLowerCase()==\"reactive\")\r\n            {\r\n                return this.round(base_cost,2);\r\n            }\r\n            return undefined;\r\n        },\r\n        cost:function()\r\n        {\r\n            let subtotal_cost=this.shield_class.cost * this.cost_multiplier;\r\n            subtotal_cost *= this.cost_multipliers.armor_type;\r\n            subtotal_cost *= this.cost_multipliers.absorption;\r\n            //special consideration for armor types and energy absorbing as they do not increase space, only cost\r\n            subtotal_cost += this.efficiencies.space.cost;\r\n\r\n            return this.round(subtotal_cost,2);\r\n        },\r\n        damage_capacity()\r\n        {\r\n            return this.round(this.weighted_stopping_power(this.shield_class.code)/2,2);\r\n        },\r\n        shield_name:function()\r\n        {\r\n            let fullname=\"\";\r\n            if(this.type.toLowerCase()==\"standard\" && this.defense_ability!==null)\r\n            {\r\n                fullname=[\"Huge\",\"Large\",\"Medium\",\"Small\",\"Tiny\"][this.defense_ability*-1];\r\n            }\r\n            fullname+=\" \"+this.shield_class.name;\r\n            if(this.type.toLowerCase()==\"standard\" || this.type.toLowerCase()==\"active\")\r\n            {\r\n                this.binder;\r\n                fullname+=this.type.toLowerCase()==\"active\"?\" Active\":\"\";\r\n                fullname+=this.absorption!==null&&this.absorption.absorption>0?\" Absorbing\":\"\";\r\n                fullname+=this.armor_type!==null&&this.armor_type.type.toLowerCase()!=\"standard\" ? \" \"+this.armor_type.type : \"\";\r\n                fullname+=this.binder!==null&&this.binder.space>0?\" Binder\":\" Shield\";\r\n            }\r\n            else if(this.type.toLowerCase()==\"reactive\")\r\n            {\r\n                fullname+=\" Reactive\";\r\n                let exclusive_name=\"\";\r\n                let partialname=this.weakness_array.reduce(function(_name,_el)\r\n                {\r\n                    if(_el.exclusive)\r\n                    {\r\n                        exclusive_name=_el.monicker;\r\n                    }\r\n                    else\r\n                    {\r\n                        _name+=\" \"+_el.monicker;\r\n                    }\r\n                    return _name;\r\n                },\"\");\r\n                fullname+=\" \"+exclusive_name+\" \"+partialname;\r\n            }\r\n            fullname=fullname.replace(/\\s+/g,\" \");\r\n            return fullname;\r\n        },\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_shield-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_shield-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_shield-main.vue?vue&type=template&id=3f1f6119&\"\nimport script from \"./mek_shield-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_shield-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default\r\n{\r\n    methods:\r\n    {\r\n        universal_ingest_data(_data_object,_alertMessage)\r\n        {\r\n            this.original_component=JSON.stringify(_data_object);//store a copy as a JSON object for 'reset' purposes\r\n            if(_data_object===null)\r\n            {\r\n                this.componentSaveReset(\"clear\");\r\n                //generic error comment\r\n                this.$store.commit(\"alertMessage\",_alertMessage);\r\n            }\r\n\r\n            for(let _property in _data_object)\r\n            {//exclude computed properties that are auto updated\r\n                if(Object.keys(this._computedWatchers).includes(_property))\r\n                {\r\n                    continue;\r\n                }\r\n                if(typeof _data_object[_property]===\"object\" && !Array.isArray(_data_object[_property]))\r\n                {\r\n                    if(typeof this[_property]!==\"object\" || this[_property]===null)\r\n                    {\r\n                        this[_property]={};\r\n                    }\r\n                    for(let _sub_property in _data_object[_property])\r\n                    {\r\n                        this.$set(this[_property],[_sub_property],_data_object[_property][_sub_property]);\r\n                    }\r\n                }\r\n                else if(Array.isArray(_data_object[_property]))\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n                else\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n            }\r\n            this.$forceUpdate();\r\n        },\r\n        updateComponentName:function(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
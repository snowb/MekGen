{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/mek_shield/mek_shield-main.vue?078f","webpack:///src/components/mek_shield/mek_shield-main.vue","webpack:///./src/components/mek_shield/mek_shield-main.vue?5a95","webpack:///./src/components/mek_shield/mek_shield-main.vue"],"names":["dP","__webpack_require__","f","FProto","Function","prototype","nameRE","NAME","configurable","get","this","match","e","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","new-component","newComponent","component-name","component_name","shield_name","component-changed","component_changed","on","update-component-name","updateComponentName","type","update-type","select_type","shield_class","name","is_ablative","update-class-code","select_class_code","toLowerCase","defense_ability","cost","cost_multipliers","update-defense-ability","select_da","_e","binder","base_stopping_power","stopping_power","update-binder","select_binder","reset-time","reset_time","update-reset-time","select_reset","turns-in-use","turns_in_use","update-turns-in-use","select_turns","armor-type","armor_type","update-armor-type","select_armor_type","absorption","update-absorption","select_absorption","weakness-array","weakness_array","update-weakness","select_weakness","space_efficiency","efficiencies","space","raw_space","update-efficiencies","updateEfficiencies","cols","rows","slot","_v","_s","kills","round","calculate_stopping_power","damage_coefficient","staticStyle","padding-left","max-width","margin-left","feature_list","time","surge_damage","space_cost","weight","cost_multiplier","font-weight","save-reset-component","componentSaveReset","staticRenderFns","mek_shield_mainvue_type_script_lang_js_","mixins","utility_mixin","component_methods_mixin","component_computed_mixin","components","mek-shield-type","then","bind","mek-shield-class","mek-shield-defense-ability","mek-shield-binder","mek-shield-reset-time","mek-shield-turns-in-use","mek-shield-weakness","mek-space-efficiency","mek-component-name","mek-save-reset-component","mek-component-stats","mek-armor-type","mek-energy-absorbing-armor","data","obj","uuid","component_category","component_type","original_component","code","id","da","stopping_power_modifier","weakness","monicker","exclusive","modifier","armor_penalty","methods","_type","$set","_shield_class_obj","_da_obj","_binder_obj","_reset_obj","_turns_obj","Infinity","_weakness_obj","reduce","_cost_multi","_val","_armor_type","_absorption","_name","sp_modifier","weighted_stopping_power","_data","ingest_data","_data_object","_this","alertMessage","universal_ingest_data","$nextTick","output_shield_data","_this2","return_data","create_uuid","JSON","parse","stringify_default","_action","action","$store","commit","computed","length","isAblative","some","isSurge","multiplier","base_cost","subtotal_cost","damage_capacity","fullname","exclusive_name","partialname","_el","replace","mek_shield_mek_shield_mainvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/mek_shield-main-legacy.dc15a5bd.js","sourcesContent":["var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"mek-inline-flex-col\"},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.shield_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('div',{staticClass:\"mek-flex-col\"},[_c('mek-shield-type',{attrs:{\"type\":_vm.type},on:{\"update-type\":_vm.select_type}}),_c('mek-shield-class',{attrs:{\"shield_class\":_vm.shield_class,\"type\":_vm.type.name,\"is_ablative\":_vm.is_ablative},on:{\"update-class-code\":_vm.select_class_code}})],1),_c('span',{staticClass:\"mek-flex-col no-margin\"},[(_vm.type.name.toLowerCase()=='standard')?_c('mek-shield-defense-ability',{attrs:{\"defense_ability\":_vm.defense_ability,\"cost\":_vm.cost_multipliers.defense_ability},on:{\"update-defense-ability\":_vm.select_da}}):_vm._e(),(_vm.type.name.toLowerCase()=='standard' || _vm.type.name.toLowerCase()=='active')?_c('mek-shield-binder',{attrs:{\"binder\":_vm.binder,\"base_stopping_power\":_vm.shield_class.stopping_power},on:{\"update-binder\":_vm.select_binder}}):_vm._e(),(_vm.type.name.toLowerCase()=='reactive')?_c('mek-shield-reset-time',{attrs:{\"reset-time\":_vm.reset_time},on:{\"update-reset-time\":_vm.select_reset}}):_vm._e(),(_vm.type.name.toLowerCase()=='reactive')?_c('mek-shield-turns-in-use',{attrs:{\"turns-in-use\":_vm.turns_in_use},on:{\"update-turns-in-use\":_vm.select_turns}}):_vm._e()],1),_c('span',{staticClass:\"mek-flex-col no-margin\"},[(_vm.type.name.toLowerCase()=='standard' || _vm.type.name.toLowerCase()=='active')?_c('mek-armor-type',{attrs:{\"armor-type\":_vm.armor_type},on:{\"update-armor-type\":_vm.select_armor_type}}):_vm._e(),(_vm.type.name.toLowerCase()=='standard' || _vm.type.name.toLowerCase()=='active')?_c('mek-energy-absorbing-armor',{attrs:{\"absorption\":_vm.absorption},on:{\"update-absorption\":_vm.select_absorption}}):_vm._e()],1),(_vm.type.name.toLowerCase()=='reactive')?_c('span',{staticClass:\"mek-flex-col no-margin\"},[_c('mek-shield-weakness',{attrs:{\"weakness-array\":_vm.weakness_array},on:{\"update-weakness\":_vm.select_weakness}})],1):_vm._e(),_c('span',{staticClass:\"mek-flex-col no-margin\"},[_c('mek-space-efficiency',{attrs:{\"space_efficiency\":_vm.efficiencies.space,\"raw_space\":_vm.raw_space},on:{\"update-efficiencies\":_vm.updateEfficiencies}})],1)]),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":5}},[(_vm.is_ablative)?_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Kills: \"+_vm._s(_vm.shield_class.kills))]):_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Base Stopping Power: \"+_vm._s(_vm.round(_vm.shield_class.stopping_power,2))+\"\\n                \"),_c('br'),_vm._v(\"Final Stopping Power: \"+_vm._s(_vm.round(_vm.calculate_stopping_power(),2))+\"\\n            \")]),(_vm.armor_type.damage_coefficient!=1)?_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_vm._v(\"Armor Type: \"+_vm._s(_vm.armor_type.type))]):_vm._e(),(_vm.armor_type.damage_coefficient!=1)?_c('div',{staticStyle:{\"padding-left\":\"10px\"},attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Damage Coefficient: \"+_vm._s(_vm.armor_type.damage_coefficient))]):_vm._e(),(_vm.absorption.absorption!=0)?_c('div',{attrs:{\"slot\":\"col1-row4\"},slot:\"col1-row4\"},[_vm._v(\"Absorption: \"+_vm._s(_vm.absorption.absorption*100)+\"%\")]):_vm._e(),(_vm.type.name.toLowerCase()=='standard' || _vm.type.name.toLowerCase()=='active')?_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Binder Space: \"+_vm._s(_vm.round(_vm.binder.space,3)))]):_vm._e(),(_vm.type.name.toLowerCase()=='reactive')?_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Weakness(es):\"),_c('div',{staticStyle:{\"max-width\":\"150px\",\"margin-left\":\"10px\"}},[_vm._v(_vm._s(_vm.feature_list))])]):_vm._e(),(_vm.type.name.toLowerCase()=='reactive')?_c('div',{attrs:{\"slot\":\"col2-row2\"},slot:\"col2-row2\"},[_vm._v(\"Reset Time: \"+_vm._s(_vm.reset_time.time))]):_vm._e(),(_vm.type.name.toLowerCase()=='reactive')?_c('div',{attrs:{\"slot\":\"col2-row3\"},slot:\"col2-row3\"},[_vm._v(\"Turns in Use: \"+_vm._s(_vm.turns_in_use.time))]):_vm._e(),(_vm.type.name.toLowerCase()=='reactive')?_c('div',{attrs:{\"slot\":\"col2-row4\"},slot:\"col2-row4\"},[_vm._v(\"Surge Damage: \"+_vm._s(_vm.surge_damage))]):_vm._e(),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.raw_space))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Space: \"+_vm._s(_vm.space_cost))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.round(_vm.weight,2))+\" tons\")]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.shield_class.cost))]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.cost_multiplier))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <span class=\"mek-inline-flex-col\">\r\n        <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||shield_name\"\r\n            :component-changed=\"component_changed\"\r\n            @update-component-name=\"updateComponentName\"\r\n        ></mek-component-name>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <div class=\"mek-flex-col\">\r\n                <mek-shield-type :type=\"type\" @update-type=\"select_type\"></mek-shield-type>\r\n                <mek-shield-class :shield_class=\"shield_class\" :type=\"type.name\" :is_ablative=\"is_ablative\" @update-class-code=\"select_class_code\"></mek-shield-class>\r\n            </div>\r\n            <span class=\"mek-flex-col no-margin\">\r\n                <mek-shield-defense-ability\r\n                    v-if=\"type.name.toLowerCase()=='standard'\"\r\n                    :defense_ability=\"defense_ability\"\r\n                    :cost=\"cost_multipliers.defense_ability\" \r\n                    @update-defense-ability=\"select_da\"></mek-shield-defense-ability>\r\n                <mek-shield-binder\r\n                    v-if=\"type.name.toLowerCase()=='standard' || type.name.toLowerCase()=='active'\"\r\n                    :binder=\"binder\"\r\n                    :base_stopping_power=\"shield_class.stopping_power\"\r\n                    @update-binder=\"select_binder\"\r\n                ></mek-shield-binder>\r\n                <mek-shield-reset-time \r\n                    v-if=\"type.name.toLowerCase()=='reactive'\"\r\n                    :reset-time=\"reset_time\"\r\n                    @update-reset-time=\"select_reset\"\r\n                ></mek-shield-reset-time>\r\n                <mek-shield-turns-in-use\r\n                    v-if=\"type.name.toLowerCase()=='reactive'\"\r\n                    :turns-in-use=\"turns_in_use\"\r\n                    @update-turns-in-use=\"select_turns\"\r\n                ></mek-shield-turns-in-use>\r\n            </span>\r\n            <span class=\"mek-flex-col no-margin\">\r\n                <mek-armor-type v-if=\"type.name.toLowerCase()=='standard' || type.name.toLowerCase()=='active'\"\r\n                    :armor-type=\"armor_type\"\r\n                    @update-armor-type=\"select_armor_type\"\r\n                ></mek-armor-type>\r\n                <mek-energy-absorbing-armor\r\n                    v-if=\"type.name.toLowerCase()=='standard' || type.name.toLowerCase()=='active'\"\r\n                    :absorption=\"absorption\"\r\n                    @update-absorption=\"select_absorption\"\r\n                ></mek-energy-absorbing-armor>\r\n            </span>\r\n            <span class=\"mek-flex-col no-margin\" v-if=\"type.name.toLowerCase()=='reactive'\">\r\n                <mek-shield-weakness\r\n                    @update-weakness=\"select_weakness\"\r\n                    :weakness-array=\"weakness_array\"\r\n                ></mek-shield-weakness>\r\n            </span>\r\n            <span class=\"mek-flex-col no-margin\">\r\n                <mek-space-efficiency\r\n                    :space_efficiency=\"efficiencies.space\"\r\n                    :raw_space=\"raw_space\"\r\n                    @update-efficiencies=\"updateEfficiencies\"\r\n                ></mek-space-efficiency>\r\n            </span>\r\n        </div>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-component-stats :cols=\"4\" :rows=\"5\">\r\n                <div slot=\"col1-row1\" v-if=\"is_ablative\">Kills: {{shield_class.kills}}</div>\r\n                <div slot=\"col1-row1\" v-else>Base Stopping Power: {{round(shield_class.stopping_power,2)}}\r\n                    <br>Final Stopping Power: {{round(calculate_stopping_power(),2)}}\r\n                </div>\r\n                <div slot=\"col1-row2\" v-if=\"armor_type.damage_coefficient!=1\">Armor Type: {{armor_type.type}}</div>\r\n                <div slot=\"col1-row3\" v-if=\"armor_type.damage_coefficient!=1\" style=\"padding-left:10px;\">Damage Coefficient: {{armor_type.damage_coefficient}}</div>\r\n                <div slot=\"col1-row4\" v-if=\"absorption.absorption!=0\">Absorption: {{absorption.absorption*100}}%</div>\r\n                <div slot=\"col2-row1\" v-if=\"type.name.toLowerCase()=='standard' || type.name.toLowerCase()=='active'\">Binder Space: {{round(binder.space,3)}}</div>\r\n                <div slot=\"col2-row1\" v-if=\"type.name.toLowerCase()=='reactive'\">Weakness(es):<div style=\"max-width:150px;margin-left:10px;\">{{feature_list}}</div></div>\r\n                <div slot=\"col2-row2\" v-if=\"type.name.toLowerCase()=='reactive'\">Reset Time: {{reset_time.time}}</div>\r\n                <div slot=\"col2-row3\" v-if=\"type.name.toLowerCase()=='reactive'\">Turns in Use: {{turns_in_use.time}}</div>\r\n                <div slot=\"col2-row4\" v-if=\"type.name.toLowerCase()=='reactive'\">Surge Damage: {{surge_damage}}</div>\r\n                <div slot=\"col3-row1\">Base Space: {{raw_space}}</div>\r\n                <div slot=\"col3-row2\">Space: {{space_cost}}</div>\r\n                <div slot=\"col3-row3\">Weight: {{round(weight,2)}} tons</div>\r\n                <div slot=\"col4-row1\">Base Cost: {{shield_class.cost}}</div>\r\n                <div slot=\"col4-row1\">Multiplier: x{{cost_multiplier}}</div>\r\n                <div slot=\"col4-row1\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n            </mek-component-stats>\r\n            <mek-save-reset-component @save-reset-component=\"componentSaveReset\"></mek-save-reset-component>\r\n        </div>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\n//imports\r\nimport utility_mixin from \"../../mixins/utility_mixin.js\";\r\nimport component_methods_mixin from \"../../mixins/component_methods_mixin\";\r\nimport component_computed_mixin from \"../../mixins/component_computed_mixin\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_shield\",\r\n    mixins:\r\n        [\r\n            utility_mixin, \r\n            component_methods_mixin, \r\n            component_computed_mixin\r\n        ],\r\n    components:\r\n    {\r\n        \"mek-shield-type\":()=>import(/* webpackChunkName: \"mek-shield-type\" */\"./subcomponents/mek_shield-type.vue\"),\r\n        \"mek-shield-class\":()=>import(/* webpackChunkName: \"mek-shield-class\" */\"./subcomponents/mek_shield-class.vue\"),\r\n        \"mek-shield-defense-ability\":()=>import(/* webpackChunkName: \"mek-shield-defense-ability\" */\"./subcomponents/mek_shield-defense-ability.vue\"),\r\n        \"mek-shield-binder\":()=>import(/* webpackChunkName: \"mek-shield-binder\" */\"./subcomponents/mek_shield-binder.vue\"),\r\n        \"mek-shield-reset-time\":()=>import(/* webpackChunkName: \"mek-shield-reset-time\" */\"./subcomponents/mek_shield-reset-time.vue\"),\r\n        \"mek-shield-turns-in-use\":()=>import(/* webpackChunkName: \"mek-shield-turns-in-use\" */\"./subcomponents/mek_shield-turns-in-use.vue\"),\r\n        \"mek-shield-weakness\":()=>import(/* webpackChunkName: \"mek-shield-weakness\" */\"./subcomponents/mek_shield-weakness.vue\"),\r\n        \r\n        \"mek-space-efficiency\":()=>import(/* webpackChunkName: \"mek-space-efficiency\" */\"../universal/mek-space-efficiency.vue\"),\r\n        \"mek-component-name\":()=>import(/* webpackChunkName: \"mek_component-name\" */\"../universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>import(/* webpackChunkName: \"mek_save-reset-component\" */\"../universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>import(/* webpackChunkName: \"mek_component-stats\" */\"../universal/mek_component-stats.vue\"),\r\n\r\n        \"mek-armor-type\":()=>import(\"../universal/mek_armor-type.vue\"),\r\n        \"mek-energy-absorbing-armor\":()=>import(\"../universal/mek_energy-absorbing-armor.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.uuid=null;\r\n        obj.type={name:\"Standard\"};\r\n        obj.component_name=null;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"shield\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.shield_class={code:1,stopping_power:5,kills:25,cost:5,id:\"SL\",name:\"Superlight\"};\r\n\r\n        obj.defense_ability={da:-2,cost:1};\r\n        obj.cost_multipliers={};\r\n        obj.cost_multipliers.defense_ability=1;\r\n        \r\n        obj.binder={cost:1,space:0,stopping_power_modifier:0};\r\n        obj.cost_multipliers.binder=1;\r\n\r\n        obj.reset_time={time:2,cost:1};\r\n        obj.cost_multipliers.reset_time=1;\r\n        \r\n        obj.turns_in_use={time:\"__INFINITY__\",cost:1};\r\n        obj.cost_multipliers.turns_in_use=1;\r\n\r\n        obj.weakness_array=[{weakness:\"All\",monicker:\"Shield\",cost:1,exclusive:false}];\r\n        obj.cost_multipliers.weakness=1;\r\n\r\n        obj.efficiencies={};\r\n        obj.efficiencies.space={modifier:0,cost:0};\r\n\r\n        obj.armor_type={type:\"Standard\",damage_coefficient:1,cost:1};\r\n        obj.cost_multipliers.armor_type=1;\r\n\r\n        obj.absorption={absorption:0,cost:1,armor_penalty:0};\r\n        obj.cost_multipliers.absorption=1;\r\n\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_type:function(_type)\r\n        {\r\n            if(this.type.name.toLowerCase()==_type.name.toLowerCase())\r\n            {\r\n                return;\r\n            }\r\n            this.component_changed=true;\r\n            this.$set(this,\"type\",_type);\r\n            let type=_type.name.toLowerCase();\r\n            if(type===\"reactive\")\r\n            {\r\n                this.shield_class.cost=this.shield_class.stopping_power*3;\r\n\r\n                this.$set(this,\"defense_ability\",{da:-2,cost:1});\r\n                this.cost_multipliers.defense_ability=1;\r\n\r\n                this.$set(this,\"binder\",{cost:1,space:0,stopping_power_modifier:0});\r\n                this.cost_multipliers.binder=1;\r\n\r\n                this.$set(this,\"armor_type\",{type:\"Standard\",damage_coefficient:1,cost:1});\r\n                this.cost_multipliers.armor_type=1;\r\n                this.$set(this,\"absorption\",{absorption:0,cost:1,armor_penalty:0});\r\n                this.cost_multipliers.absorption=1;\r\n            }\r\n            else if(type===\"active\")\r\n            {\r\n                this.shield_class.cost=this.shield_class.stopping_power*1.5;\r\n\r\n                this.$set(this,\"defense_ability\",{da:-2,cost:1});\r\n                this.cost_multipliers.defense_ability=1;\r\n                \r\n                this.$set(this,\"reset_time\",{cost:1,time:2});\r\n                this.cost_multipliers.reset_time=1;\r\n\r\n                this.$set(this,\"turns_in_use\",{time:\"__INFINITY__\",cost:1});\r\n                this.cost_multipliers.turns_in_use=1;\r\n\r\n                this.$set(this,\"weakness_array\",[{weakness:\"All\",monicker:\"Shield\",cost:1,exclusive:false}]);\r\n                this.cost_multipliers.weakness=1;\r\n            }\r\n            else if(type==\"standard\")\r\n            {\r\n                this.shield_class.cost=this.shield_class.stopping_power;\r\n\r\n                this.$set(this,\"reset_time\",{cost:1,time:2});\r\n                this.cost_multipliers.reset_time=1;\r\n\r\n                this.$set(this,\"turns_in_use\",{time:\"__INFINITY__\",cost:1});\r\n                this.cost_multipliers.turns_in_use=1;\r\n\r\n                this.$set(this,\"weakness_array\",[{weakness:\"All\",monicker:\"Shield\",cost:1,exclusive:false}]);\r\n                this.cost_multipliers.weakness=1;\r\n            }\r\n            this.component_changed=true;\r\n        },\r\n        select_class_code:function(_shield_class_obj)\r\n        {\r\n            this.$set(this,\"shield_class\",_shield_class_obj);\r\n            this.component_changed=true;\r\n        },\r\n        select_da:function(_da_obj)\r\n        {\r\n            this.$set(this,\"defense_ability\",_da_obj);\r\n            this.cost_multipliers.defense_ability=_da_obj.cost;\r\n            this.component_changed=true;\r\n        },\r\n        select_binder:function(_binder_obj)\r\n        {\r\n            this.$set(this,\"binder\",_binder_obj);\r\n            this.cost_multipliers.binder=_binder_obj.cost;\r\n            this.shield_name;\r\n            this.component_changed=true;\r\n        },\r\n        select_reset:function(_reset_obj)\r\n        {\r\n            this.$set(this,\"reset_time\",_reset_obj);\r\n            this.cost_multipliers.reset_time=_reset_obj.cost;\r\n            this.component_changed=true;\r\n        },\r\n        select_turns:function(_turns_obj)\r\n        {\r\n            this.$set(this,\"turns_in_use\",_turns_obj);\r\n            this.turns_in_use.time=this.turns_in_use.time===null?Infinity:this.turns_in_use.time;\r\n            this.cost_multipliers.turns_in_use=_turns_obj.cost;\r\n            this.component_changed=true;\r\n        },\r\n        select_weakness:function(_weakness_obj)\r\n        {\r\n            this.$set(this,\"weakness_array\",_weakness_obj);\r\n            this.cost_multipliers.weakness=this.weakness_array.reduce(function(_cost_multi,_val)\r\n            {\r\n                _cost_multi*=_val.cost;\r\n                return _cost_multi;\r\n            },1);\r\n            this.component_changed=true;\r\n        },\r\n        select_armor_type(_armor_type)\r\n        {\r\n            this.$set(this,\"armor_type\",_armor_type);\r\n            this.cost_multipliers.armor_type=this.armor_type.cost;\r\n        },\r\n        select_absorption(_absorption)\r\n        {\r\n            this.$set(this,\"absorption\",_absorption);\r\n            this.cost_multipliers.absorption=this.absorption.cost;\r\n        },\r\n        updateComponentName:function(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        calculate_stopping_power:function()\r\n        {\r\n            let sp_modifier=this.absorption!=0 ? this.absorption.armor_penalty + this.binder.stopping_power_modifier : this.binder.stopping_power_modifier;\r\n            return this.shield_class.stopping_power - (this.shield_class.stopping_power * sp_modifier);\r\n        },\r\n        weighted_stopping_power()\r\n        {\r\n            return this.shield_class.stopping_power - (this.shield_class.stopping_power * this.binder.stopping_power_modifier);\r\n        },\r\n        updateEfficiencies:function(_data)\r\n        {\r\n            this.$set(this.efficiencies,\"space\",_data);\r\n            this.component_changed=true\r\n        },\r\n        ingest_data:function(_data_object)\r\n        {\r\n            let alertMessage=\"Shield Has No Type, resetting to 'standard' shield.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(this.component_name==this.shield_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n        },\r\n        output_shield_data:function()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"shield\";\r\n            return_data.component_name=this.component_name===null?this.shield_name:this.component_name;\r\n            return_data.type=JSON.parse(JSON.stringify(this.type));\r\n            return_data.shield_class=JSON.parse(JSON.stringify(this.shield_class));\r\n            return_data.cost_multipliers=JSON.parse(JSON.stringify(this.cost_multipliers));\r\n            return_data.efficiencies=JSON.parse(JSON.stringify(this.efficiencies));\r\n            \r\n            return_data.cost=this.cost;\r\n            return_data.cost_multiplier=this.cost_multiplier;\r\n            return_data.is_ablative=this.is_ablative;\r\n            return_data.weight=this.weight;\r\n\r\n            switch(this.type.name.toLowerCase())\r\n            {\r\n                case \"standard\":\r\n                    return_data.defense_ability=JSON.parse(JSON.stringify(this.defense_ability));\r\n                    // eslint-disable-next-line\r\n                case \"active\":\r\n                    return_data.binder=JSON.parse(JSON.stringify(this.binder));\r\n                    return_data.armor_type=JSON.parse(JSON.stringify(this.armor_type));\r\n                    return_data.absorption=JSON.parse(JSON.stringify(this.absorption));\r\n                    break;\r\n                case \"reactive\":\r\n                    return_data.reset_time=JSON.parse(JSON.stringify(this.reset_time));\r\n                    return_data.turns_in_use=JSON.parse(JSON.stringify(this.turns_in_use));\r\n                    return_data.turns_in_use.time=return_data.turns_in_use.time===null?\"Infinity\":return_data.turns_in_use.time;\r\n                    return_data.weakness_array=JSON.parse(JSON.stringify(this.weakness_array));\r\n                    return_data.surge_damage=this.surge_damage;\r\n                    break;\r\n            }\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return return_data;\r\n        },\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"clear\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_shield_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                    }\r\n                    break;\r\n                case \"clear\":\r\n                    this.uuid=null;\r\n                    this.select_type({name:\"Standard\"});\r\n                    this.$set(this,\"shield_class\",{code:1,stopping_power:5,kills:25,cost:5,id:\"SL\",name:\"Superlight\"});\r\n                    this.$set(this,\"defense_ability\",{da:-2,cost:1});\r\n                    this.cost_multipliers.defense_ability=1;\r\n                    this.$set(this,\"binder\",{cost:1,space:0,stopping_power_modifier:0});\r\n                    this.cost_multipliers.binder=1;\r\n                    this.efficiencies.space.modifier=0;\r\n                    this.$set(this,\"armor_type\",{type:\"Standard\",damage_coefficient:1,cost:1});\r\n                    this.cost_multipliers.armor_type=1;\r\n                    this.$set(this,\"absorption\",{absorption:0,cost:1,armor_penalty:0});\r\n                    this.cost_multipliers.absorption=1;\r\n                    this.component_name=null;\r\n                    this.shield_name;//must call to force recompute\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        is_ablative:function()\r\n        {\r\n            if(this.weakness_array===null || this.weakness_array.length==0)\r\n            {\r\n                return false;\r\n            }\r\n            let isAblative=this.weakness_array.some(function(_val)\r\n            {\r\n                if(_val.weakness.toLowerCase()==\"ablative\")\r\n                {\r\n                    return true;\r\n                }\r\n                return false;\r\n            },this);\r\n\r\n            return isAblative;\r\n        },\r\n        surge_damage:function()\r\n        {\r\n            if(this.weakness_array===null || this.weakness_array.length==0)\r\n            {\r\n                return false;\r\n            }\r\n            let isSurge=this.weakness_array.some(function(_val)\r\n            {\r\n                if(_val.weakness.toLowerCase()==\"surge\")\r\n                {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            return isSurge ? this.shield_class.stopping_power : null;\r\n        },\r\n        cost_multiplier:function()\r\n        {\r\n            let multiplier=1;\r\n            multiplier*=this.cost_multipliers.defense_ability;\r\n            multiplier*=this.cost_multipliers.binder;\r\n            multiplier*=this.cost_multipliers.reset_time;\r\n            multiplier*=this.cost_multipliers.turns_in_use;\r\n            multiplier*=this.cost_multipliers.weakness;\r\n\r\n            return this.round(multiplier,2);\r\n        },\r\n        raw_space:function()\r\n        {\r\n            if(this.type.name.toLowerCase()==\"standard\")\r\n            {\r\n                return 1;\r\n            }\r\n            let base_cost=this.shield_class.cost * this.cost_multiplier;\r\n            if(this.type.name.toLowerCase()==\"active\")\r\n            {\r\n                return this.round(base_cost/2, 2);\r\n            }\r\n            else if(this.type.name.toLowerCase()==\"reactive\")\r\n            {\r\n                return this.round(base_cost,2);\r\n            }\r\n            return undefined;\r\n        },\r\n        cost:function()\r\n        {\r\n            let subtotal_cost=this.shield_class.cost * this.cost_multiplier;\r\n            subtotal_cost *= this.cost_multipliers.armor_type;\r\n            subtotal_cost *= this.cost_multipliers.absorption;\r\n            //special consideration for armor types and energy absorbing as they do not increase space, only cost\r\n            subtotal_cost += this.efficiencies.space.cost;\r\n\r\n            return this.round(subtotal_cost,2);\r\n        },\r\n        damage_capacity()\r\n        {\r\n            return this.round(this.weighted_stopping_power(this.shield_class.code)/2,2);\r\n        },\r\n        shield_name:function()\r\n        {\r\n            let fullname=\"\";\r\n            if(this.type.name.toLowerCase()==\"standard\")\r\n            {\r\n                fullname=[\"Huge\",\"Large\",\"Medium\",\"Small\",\"Tiny\"][this.defense_ability.da*-1];\r\n            }\r\n            fullname+=\" \"+this.shield_class.name;\r\n            if(this.type.name.toLowerCase()==\"standard\" || this.type.name.toLowerCase()==\"active\")\r\n            {\r\n                this.binder;\r\n                fullname+=this.type.name.toLowerCase()==\"active\"?\" Active\":\"\";\r\n                fullname+=this.absorption!==null&&this.absorption.absorption>0?\" Absorbing\":\"\";\r\n                fullname+=this.armor_type!==null&&this.armor_type.type.toLowerCase()!=\"standard\" ? \" \"+this.armor_type.type : \"\";\r\n                fullname+=this.binder!==null&&this.binder.space>0?\" Binder\":\" Shield\";\r\n            }\r\n            else if(this.type.name.toLowerCase()==\"reactive\")\r\n            {\r\n                fullname+=\" Reactive\";\r\n                let exclusive_name=\"\";\r\n                let partialname=this.weakness_array.reduce(function(_name,_el)\r\n                {\r\n                    if(_el.exclusive)\r\n                    {\r\n                        exclusive_name=_el.monicker;\r\n                    }\r\n                    else\r\n                    {\r\n                        _name+=\" \"+_el.monicker;\r\n                    }\r\n                    return _name;\r\n                },\"\");\r\n                fullname+=\" \"+exclusive_name+\" \"+partialname;\r\n            }\r\n            fullname=fullname.replace(/\\s+/g,\" \");\r\n            return fullname;\r\n        },\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_shield-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_shield-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_shield-main.vue?vue&type=template&id=4ae1bbb8&\"\nimport script from \"./mek_shield-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_shield-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
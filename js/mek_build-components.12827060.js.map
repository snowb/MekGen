{"version":3,"sources":["webpack:///./src/build_components/mek_build-components.vue?b2ed","webpack:///src/build_components/mek_build-components.vue","webpack:///./src/build_components/mek_build-components.vue?35f0","webpack:///./src/build_components/mek_build-components.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticStyle","display","margin-top","attrs","sections","mekList","format","list","title","draggable","collapsible","clickable","selected-item","selected_uuid","on","side-menu-clicked","mek_select","section","targetBuildTab","section-list","sectionList","focus-section","focusSection","id","tag","selected-data","selected_data","saveSelectedData","resetSelectedData","staticRenderFns","mek_build_componentsvue_type_script_lang_js_","name","components","mek-top-menu","__webpack_require__","e","then","bind","mek-side-menu","mek-build-frame","mek-build-general","mek-build-config","data","obj","fullSectionList","originalMek","workingMek","methods","_section","$store","commit","prop","tab","[object Object]","_uuid","_type","_data","clonedData","JSON","parse","stringify","Array","isArray","$set","computed","Object","objectSpread","vuex_esm","listByCategoryAndType","getComponent","selectedMek","undefined","uuid","push","getters","getSelectedMek","returnObj","configurations","build_components_mek_build_componentsvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/mek_build-components.12827060.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"display\":\"flex\",\"margin-top\":\"5px\"}},[_c('mek-side-menu',{attrs:{\"sections\":_vm.mekList,\"format\":\"full\",\"list\":true,\"title\":\"Meks\",\"draggable\":true,\"collapsible\":true,\"clickable\":true,\"selected-item\":_vm.selected_uuid},on:{\"side-menu-clicked\":_vm.mek_select}}),_c('span',[_c('mek-top-menu',{attrs:{\"section\":_vm.targetBuildTab,\"section-list\":_vm.sectionList},on:{\"focus-section\":_vm.focusSection}}),_c('div',{attrs:{\"id\":\"build-main\"}},[_c(_vm.targetBuildTab,{tag:\"component\",attrs:{\"selected-data\":_vm.selected_data},on:{\"saveSelectedData\":_vm.saveSelectedData,\"resetSelectedData\":_vm.resetSelectedData}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div style=\"display:flex; margin-top:5px;\">\r\n        <mek-side-menu :sections=\"mekList\" format=\"full\" :list=\"true\" title=\"Meks\" \r\n          :draggable=\"true\" :collapsible=\"true\" :clickable=\"true\" :selected-item=\"selected_uuid\"\r\n          @side-menu-clicked=\"mek_select\"\r\n        ></mek-side-menu>\r\n        <span>\r\n            <mek-top-menu @focus-section=\"focusSection\" :section=\"targetBuildTab\" :section-list=\"sectionList\"></mek-top-menu>\r\n            <div id=\"build-main\">\r\n                <component :is=\"targetBuildTab\" :selected-data=\"selected_data\" \r\n                  @saveSelectedData=\"saveSelectedData\" @resetSelectedData=\"resetSelectedData\"\r\n                ></component>\r\n            </div>\r\n        </span>\r\n        <!--mek-alert></mek-alert-->\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport {mapGetters} from 'vuex';\r\n\r\nexport default {\r\n  name: 'build',\r\n  components:\r\n  {\r\n    \"mek-top-menu\":()=>import(/* webpackChunkName: \"mek-top-menu\" */\"@/app_components/mek_top_menu/mek_top-menu.vue\"),\r\n    //\"mek-alert\":()=>import(/* webpackChunkName: \"[request]\" */\"../app_components/universal/mek_alert.vue\"),\r\n    \"mek-side-menu\":()=>import(/* webpackChunkName: \"mek_side-menu\" */\"@/app_components/mek_side_menu/mek_side-menu.vue\"),\r\n\r\n    \"mek-build-frame\":()=>import(/* webpackChunkName: \"mek_build-frame\" */\"@/build_components/mek_frame/mek_build-frame.vue\"),\r\n    \"mek-build-general\":()=>import(/* webpackChunkName: \"mek_build-general\" */\"@/build_components/mek_general/mek_build-general.vue\"),\r\n    \"mek-build-config\":()=>import(/* webpackChunkName: \"mek_build-config\" */\"@/build_components/mek_config/mek_build-config.vue\"),\r\n  },\r\n  data:function()\r\n  {\r\n    let obj={};\r\n    obj.fullSectionList=\r\n    [\r\n      {id:\"mek-build-general\",name:\"Mek\"},\r\n      {id:\"mek-build-config\",name:\"Config\"},\r\n      //{id:\"mek-build-frame\",name:\"Frame\"},\r\n    ];\r\n    obj.originalMek={};\r\n    obj.workingMek={};\r\n    obj.selected_uuid=null;\r\n    return obj;\r\n  },\r\n  methods:\r\n  {\r\n    focusSection:function(_section)\r\n    {\r\n        this.$store.commit(\"showTab\",{prop:\"currentBuildTab\",tab:_section});\r\n    },\r\n    mek_select(_uuid)\r\n    {\r\n      this.$store.commit('selectMek',_uuid);\r\n      this.selected_uuid=_uuid;\r\n    },\r\n    saveSelectedData(_type, _data)\r\n    {\r\n      let clonedData=JSON.parse(JSON.stringify(_data));\r\n      switch(_type)\r\n      {\r\n        case \"general\":\r\n          for(let prop in clonedData)\r\n          {\r\n            if(typeof clonedData[prop]!==\"object\" && !Array.isArray(clonedData[prop]))\r\n            {\r\n              this.$set(this.workingMek,prop,clonedData[prop]);\r\n            } \r\n          }\r\n          break;\r\n        case \"config\":\r\n          this.$set(this.workingMek,\"configurations\",clonedData);\r\n          break;\r\n      }\r\n      this.$store.commit('saveComponent',this.workingMek);\r\n    },\r\n    resetSelectedData()\r\n    {\r\n      this.workingMek={};\r\n      this.originalMek={};\r\n      this.$store.commit('saveComponent',null);\r\n    }\r\n  },\r\n  computed:\r\n  {\r\n    ...mapGetters(\r\n    {\r\n        targetBuildTab:'targetBuildTab',\r\n        listByCategoryAndType:\"listByCategoryAndType\",\r\n        getComponent:\"getComponent\",\r\n        selectedMek:\"selectedMek\"\r\n    }),\r\n    mekList()\r\n    {\r\n      let mekList=this.listByCategoryAndType(\"mek\",\"mek\");\r\n      return mekList;\r\n    },\r\n    sectionList()\r\n    { \r\n      let sectionList=[{id:\"mek-build-general\",name:\"Mek\"}];\r\n      if(this.workingMek===null)\r\n      {\r\n        return sectionList;\r\n      }\r\n      if(this.workingMek.uuid!==undefined)\r\n      {\r\n        sectionList.push({id:\"mek-build-config\",name:\"Config\"});\r\n      }\r\n      return sectionList;\r\n    },\r\n    getSelectedMek()\r\n    {//responsible for ingesting data from the store)\r\n      this.originalMek=JSON.parse(JSON.stringify(this.$store.getters.selectedMek)) || {};\r\n      this.workingMek=this.originalMek;\r\n      return this.originalMek;\r\n    },\r\n    selected_data()\r\n    {\r\n      if(this.getSelectedMek===null || this.getSelectedMek===undefined)\r\n      {\r\n        return null;\r\n      }\r\n      let returnObj={};\r\n      switch(this.targetBuildTab)\r\n      {\r\n        case \"mek-build-general\":\r\n          for(let prop in this.getSelectedMek)\r\n          {\r\n            if(typeof this.getSelectedMek[prop]!==\"object\" && !Array.isArray(this.getSelectedMek[prop]))\r\n            {\r\n              returnObj[prop]=this.getSelectedMek[prop];\r\n            }\r\n          }\r\n          break;\r\n        case \"mek-build-config\":\r\n          returnObj=this.getSelectedMek.configurations;\r\n          break;\r\n      }\r\n      return returnObj;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_build-components.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_build-components.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_build-components.vue?vue&type=template&id=ddb7c6d6&\"\nimport script from \"./mek_build-components.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_build-components.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
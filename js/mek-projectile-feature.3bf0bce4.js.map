{"version":3,"sources":["webpack:///./src/mixins/alerts_mixin.js","webpack:///./src/components/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./src/components/mek_projectile/subcomponents/mek_projectile-feature.vue?d9d9","webpack:///./src/components/data_table_modules/mek_projectile/mek_projectile-feature-data-module.js","webpack:///src/components/mek_projectile/subcomponents/mek_projectile-feature.vue","webpack:///./src/components/mek_projectile/subcomponents/mek_projectile-feature.vue?0f88","webpack:///./src/components/mek_projectile/subcomponents/mek_projectile-feature.vue"],"names":["__webpack_exports__","methods","addAlert","_alert_string","this","alerts","push","publishAlerts","length","$store","commit","$set","__webpack_require__","d","partial_validate","partial_has_feature","partial_get_feature","partial_cleaned_feature","_data_table","_validation_keys","_data","Array","isArray","valid","some","_val","_keys","_key","undefined","_has_feature","found_feature","_table_val","_validator","_get_feature","_default_data","_name","_pkey","_feature","data","key_list","update","json_data","JSON","stringify","parse","render","_vm","_h","$createElement","_c","_self","attrs","items","filteredFeatureTable","pkey","selected-keys","selected_keys","headers","feature","cost","show-headers","format","flow","name","on","update-selected-data","select_feature","staticRenderFns","raw_feature_data_table","exclusive_phalanx","exclusive_personnel","filter","_el","data_table_keys","feature_data_table","data_cached","filter_data_table","_burst_value","cached_validate","feature_validate","has_feature","get_feature","is_exclusive_feature","_exclusive_target","_pkey_value","exclusive_target_array","toLowerCase","cleaned_feature","_feature_array","hasExclusiveSmokeScatter","hasExclusiveCounter","cleaned_array","error","temp_selected_feature_array","reduceRight","_cleaned_array","clean_feature","isSmokeScatter","isCounter","includes","reverse","mek_projectile_featurevue_type_script_lang_js_","props","mixins","alerts_mixin","components","mek-sub-component-table","e","then","bind","obj","suppressAlerts","selected_feature_array","_selected_feature","new_selected_feature_array","toggleFeature","cleaned_data","forEach","_alert","$emit","[object Object]","feature_array","remove_feature","computed","burstValue","featureArray","watch","_newval","_oldval","subcomponents_mek_projectile_featurevue_type_script_lang_js_","component","Object","componentNormalizer"],"mappings":"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","file":"js/mek-projectile-feature.3bf0bce4.js","sourcesContent":["export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return !_validation_keys.some((_keys)=>\r\n        {//returns true on invalid data, Not the return to return True if matching valid value is found\r\n            return _data[_keys]!=_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.filteredFeatureTable,\"pkey\":_vm.pkey,\"selected-keys\":_vm.selected_keys,\"headers\":{feature:'Feature',cost:'Cost'},\"show-headers\":true,\"format\":{cost:'multiplier'},\"flow\":\"pkey-col\",\"name\":\"Features\"},on:{\"update-selected-data\":_vm.select_feature}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature} from \"../universal/mek_partial-function-data-module\";\r\n\r\n//create new feature_data_table\r\nlet raw_feature_data_table=\r\n[\r\n    {feature:\"Long Range\",cost:1.33},\r\n    {feature:\"Hypervelocity\",cost:1.25},\r\n    {feature:\"Phalanx\",cost:0.5,exclusive_phalanx:true},\r\n    {feature:\"Variable Phalanx\",cost:1.4,exclusive_phalanx:true},\r\n    {feature:\"Anti-Personnel\",cost:1.0,exclusive_personnel:true},\r\n    {feature:\"Variable Anti-Personnel\",cost:1.8,exclusive_personnel:true},\r\n    {feature:\"Anti-Personnel Phalanx\",cost:1.6,exclusive_personnel:true,exclusive_phalanx:true},\r\n    {feature:\"All Purpose\",cost:2.6,exclusive_personnel:true,exclusive_phalanx:true}\r\n];\r\nlet exclusive_phalanx=raw_feature_data_table.filter((_el)=>{return typeof _el.exclusive_phalanx!==\"undefined\";});\r\nlet exclusive_personnel=raw_feature_data_table.filter((_el)=>{return typeof _el.exclusive_personnel!==\"undefined\";});\r\nlet data_table_keys=[\"feature\",\"cost\",\"exclusive_phalanx\",\"exclusive_personnel\"];\r\n\r\nlet feature_data_table=raw_feature_data_table;\r\nlet data_cached=false;\r\n\r\nlet filter_data_table=(_burst_value)=>\r\n{\r\n    data_cached=false;\r\n    if(_burst_value>1)\r\n    {\r\n        feature_data_table=raw_feature_data_table;\r\n        return;\r\n    }\r\n    feature_data_table=raw_feature_data_table.filter((_val)=>\r\n    {\r\n        return !_val.exclusive_phalanx\r\n    });\r\n};\r\n\r\nlet cached_validate=partial_validate(raw_feature_data_table, data_table_keys);\r\n//data validator for feature_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet feature_validate=(_data)=>\r\n{\r\n    if(data_cached)\r\n    {\r\n        return cached_validate(_data);\r\n    }\r\n    data_cached=true;\r\n    cached_validate=partial_validate(feature_data_table, data_table_keys);\r\n    return cached_validate(_data);\r\n}\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=(_pkey,_data)=>\r\n{\r\n    return partial_has_feature(feature_data_table)(_pkey,_data);\r\n}\r\n\r\n//completed function for returning matching data\r\nlet get_feature=(_pkey,_data)=>\r\n{\r\n    return partial_get_feature(feature_data_table, has_feature)(_pkey,_data);\r\n}\r\n\r\nlet is_exclusive_feature=function(_exclusive_target, _pkey, _pkey_value)\r\n{\r\n    let exclusive_target_array=null;\r\n    switch(_exclusive_target.toLowerCase())\r\n    {\r\n        case \"exclusive_phalanx\":\r\n            exclusive_target_array=exclusive_phalanx;\r\n            break;\r\n        case \"exclusive_personnel\":\r\n            exclusive_target_array=exclusive_personnel;\r\n            break;\r\n    }\r\n    if(exclusive_target_array===null)\r\n    {\r\n        return false;\r\n    }\r\n    return exclusive_target_array.some((_val)=>\r\n    {\r\n        return _val[_pkey]==_pkey_value;\r\n    });\r\n};\r\n\r\n/*****\r\n * *\r\n * *    likely need to setup create_feature_data_table taking Blast_Radius and Smart as input\r\n * *    so claned_feature will remove invalid features\r\n * *\r\n *****/\r\n\r\n\r\n/*** \r\n * \r\n * find way to switch to partial function\r\n * \r\n * ***/\r\nlet cleaned_feature=function(_feature_array, _pkey)\r\n{//takes feature_array, returns cleaned array removing multiple exclusive values\r\n    let hasExclusiveSmokeScatter=false;\r\n    let hasExclusiveCounter=false;\r\n    let update=false;\r\n    let key_list=[];\r\n    let alerts=[];\r\n    if(_feature_array.length===0)\r\n    {\r\n        return {cleaned_array:[],update:false,key_list:[],alerts:alerts};\r\n    }\r\n    if(_feature_array===undefined || _pkey===undefined)\r\n    {\r\n        alerts.push(\"Mek_Missile-Feature: \");\r\n        let error=_feature_array===undefined\r\n            ? \"**** Missing feature array. Returning default. ****\"\r\n            : \"**** No primary key provided. Returning default. ****\";\r\n        alerts.push(error);\r\n        return {cleaned_array:[],update:true,key_list:[],alerts:alerts};\r\n    }\r\n    let temp_selected_feature_array=_feature_array.reduceRight((_cleaned_array, _val)=>\r\n    {\r\n        if(_val[_pkey]===undefined)\r\n        {//if feature with pkey doesn't exist in data table, ignore\r\n            alerts.push(\"Mek_Missile-Feature: \"+JSON.stringify(_val));\r\n            alerts.push(\"**** Missing primary key. Ignoring. ****\");\r\n            return _cleaned_array;\r\n        }\r\n        let clean_feature=_val;\r\n        if(!feature_validate(_val))\r\n        {//invalid data\r\n            alerts.push(\"Mek_Missile-Feature: \"+JSON.stringify(_val))\r\n            alerts.push(\"**** Invalid data, attempting to reset. ****\")\r\n            clean_feature=get_feature(_pkey,_val[_pkey]);\r\n            update=true;\r\n            //attempt to set to corrected feature\r\n        }\r\n        if(clean_feature===null)\r\n        {//no matching feature\r\n            alerts.push(\"**** Unable to reset. No matching data. ****\")\r\n            update=true;\r\n            return _cleaned_array;\r\n            //ignore element\r\n        }\r\n        let isSmokeScatter=is_exclusive_feature(\"exclusive_phalanx\",_pkey,_val[_pkey]);\r\n        let isCounter=is_exclusive_feature(\"exclusive_personnel\",_pkey,_val[_pkey]);\r\n        \r\n        if(isSmokeScatter && !hasExclusiveSmokeScatter)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusiveSmokeScatter=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isSmokeScatter && hasExclusiveSmokeScatter)\r\n        {\r\n            alerts.push(\"Mek_Missile-Feature: \"+_val);\r\n            alerts.push(\"**** Duplicate Exclusive SmokeScatter data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n        if(isCounter && !hasExclusiveCounter)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusiveCounter=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isCounter && hasExclusiveCounter)\r\n        {\r\n            alerts.push(\"Mek_Missile-Feature: \"+_val);\r\n            alerts.push(\"**** Duplicate Exclusive Counter data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n        if(!key_list.includes(_val[_pkey]))\r\n        {\r\n            _cleaned_array.push(_val);\r\n            key_list.push(_val[_pkey]);\r\n        }\r\n        return _cleaned_array;\r\n    },[]);\r\n    temp_selected_feature_array=temp_selected_feature_array.reverse();\r\n    if(temp_selected_feature_array.length==0)\r\n    {//empty, reset to default\r\n        temp_selected_feature_array=[];\r\n        update=true;\r\n        key_list=[];\r\n        alerts.push(\"Mek_Missile-Feature: \");\r\n        alerts.push(\"**** Reseting to default ****\");\r\n    }\r\n    return {cleaned_array:temp_selected_feature_array,update:update,key_list:key_list,alerts:alerts};\r\n    //returns an object with the pruned feature array, whether it was updated, and the key_list\r\n};\r\n\r\nexport {feature_data_table, feature_validate, has_feature, get_feature, cleaned_feature, filter_data_table};\r\n","<template>\r\n    <mek-sub-component-table\r\n        :items=\"filteredFeatureTable\" :pkey=\"pkey\" :selected-keys=\"selected_keys\"\r\n        :headers=\"{feature:'Feature',cost:'Cost'}\" :show-headers=\"true\" :format=\"{cost:'multiplier'}\"\r\n        flow=\"pkey-col\" name=\"Features\"\r\n        @update-selected-data=\"select_feature\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport alerts_mixin from \"../../../mixins/alerts_mixin\";\r\n\r\nimport {feature_data_table, cleaned_feature, filter_data_table} \r\n    from \"../../data_table_modules/mek_projectile/mek_projectile-feature-data-module.js\";\r\n\r\nexport default \r\n{\r\n    name:\"mek_projectile_feature\",\r\n    props:[\"featureArray\",\"burstValue\"],\r\n    mixins:[alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"../../universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.pkey=\"feature\";\r\n        obj.alerts=[];\r\n        obj.suppressAlerts=false;\r\n        obj.selected_feature_array=[];\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_feature:function(_selected_feature)\r\n        {//refactor to external feature array cleaner\r\n            this.suppressAlerts=true;//suppress alerts, for exclusive switching\r\n            let new_selected_feature_array=this.toggleFeature(this.selected_feature_array,_selected_feature);\r\n            let cleaned_data=cleaned_feature(new_selected_feature_array, this.pkey);\r\n            new_selected_feature_array=cleaned_data.cleaned_array;\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            this.$set(this,\"selected_feature_array\",new_selected_feature_array);\r\n            this.$emit(\"update-feature\",new_selected_feature_array);\r\n            this.suppressAlerts=false;\r\n        },\r\n        toggleFeature(_feature_array,_feature)\r\n        {\r\n            let feature_array=JSON.parse(JSON.stringify(_feature_array));\r\n            \r\n            let remove_feature=feature_array.some((_val)=>\r\n            {//if _feature matches already existing feature, flag for deletion\r\n                return _val[this.pkey]==_feature[this.pkey];\r\n            },this);\r\n\r\n            if(remove_feature)\r\n            {//if flagged for removal, filter out\r\n                return feature_array.filter((_val)=>\r\n                {\r\n                    return _val[this.pkey]!=_feature[this.pkey];\r\n                },this);\r\n            }\r\n            feature_array.push(_feature);\r\n            //otherwise add feature and return\r\n            return feature_array;\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        filteredFeatureTable()\r\n        {\r\n            filter_data_table(this.burstValue);\r\n            return feature_data_table;\r\n        },\r\n        selected_keys()\r\n        {\r\n            this.burstValue;\r\n            let cleaned_data=cleaned_feature(this.featureArray,this.pkey);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.$emit(\"update-feature\",cleaned_data.cleaned_array);\r\n            }\r\n            this.$set(this,\"selected_feature_array\",cleaned_data.cleaned_array);\r\n            this.suppressAlerts=false;\r\n            return cleaned_data.key_list;\r\n        }\r\n    },\r\n    watch:\r\n    {\r\n        \"burstValue\":function(_newval,_oldval)\r\n        {//must track changes in burstValue to disable alerts for removed features on cleaned_feat\r\n            if(_newval!=_oldval)\r\n            {\r\n                this.suppressAlerts=true;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_projectile-feature.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_projectile-feature.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_projectile-feature.vue?vue&type=template&id=f90722a4&\"\nimport script from \"./mek_projectile-feature.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_projectile-feature.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
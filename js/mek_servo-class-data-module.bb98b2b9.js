(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["mek_servo-class-data-module"],{"063b":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create_class_data_table", function() { return create_class_data_table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "class_data_table", function() { return class_data_table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "servo_class_validate", function() { return servo_class_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has_feature", function() { return has_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_feature", function() { return get_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cleaned_feature", function() { return cleaned_feature; });\n/* harmony import */ var _data_table_modules_universal_servo_classes_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("a58a");\n/* harmony import */ var _data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("706d");\n//data table module, raw data output for re-use in non-vue-component formats\n\n\nlet class_data_table = [];\nlet data_table_keys = ["code", "id", "name", "cost", "kills", "damage_bonus", "throw_range"]; //create new class_data_table\n\nlet create_class_data_table = function create_class_data_table(_servo_type) {\n  //factory function to create class_data_table based on servo_type, otherwise creates a generic head-type servo\n  let type_cost_multiplier = 1;\n  let type_space_multiplier = 1;\n  let type_kills_multiplier = 1;\n  let type_cost_modifier = 0;\n  let type_space_modifier = 0;\n  let type_kills_modifier = 0;\n  let isArm = false;\n  let isLeg = false;\n  let servo_type = _servo_type !== undefined ? _servo_type.toLowerCase() : "torso";\n\n  switch (servo_type) {\n    case "torso":\n      type_cost_multiplier = 2;\n      type_space_multiplier = 2;\n      type_kills_multiplier = 2;\n      break;\n\n    case "arm":\n      isArm = true;\n      break;\n\n    case "leg":\n      isLeg = true;\n      break;\n\n    case "pod":\n      type_space_multiplier = 2;\n      type_kills_multiplier = 0;\n      break;\n    //case "head": //head, wing, tail are all just 1s\n    //case "wing":\n    //case "tail":\n    //  break;\n    //default:\n    //  assume head, x1 multipliers\n  }\n\n  let new_class_table = _data_table_modules_universal_servo_classes_data__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].map(_val => {\n    let obj = {};\n    obj.code = _val.code;\n    obj.id = _val.id;\n    obj.name = _val.name;\n    obj.cost = _val.code * type_cost_multiplier + type_cost_modifier;\n    obj.space = _val.code * type_space_multiplier + type_space_modifier;\n    obj.kills = _val.code * type_kills_multiplier + type_kills_modifier;\n\n    if (isArm || isLeg) {\n      obj.damage_bonus = isLeg ? Math.ceil(obj.code / 2) - 1 : Math.ceil(obj.code / 3) - 1;\n\n      if (isArm) {\n        obj.throw_range = Math.floor(obj.code / 2) + 1;\n      }\n    }\n\n    return obj;\n  });\n  class_data_table = new_class_table;\n};\n\ncreate_class_data_table(); //create default servo_class_table\n//data validator for class_data_table\n//call partial_validate with appropriate data for full validate\n\nlet servo_class_validate = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_1__[/* partial_validate */ "d"])(class_data_table, data_table_keys); //completed function for checking if data has data\n\nlet has_feature = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_1__[/* partial_has_feature */ "c"])(class_data_table); //completed function for returning matching data\n\nlet get_feature = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_1__[/* partial_get_feature */ "b"])(class_data_table, has_feature);\nlet default_data = get_feature("code", 1); //completed function for returning cleaed data\n\nlet cleaned_feature = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_1__[/* partial_cleaned_feature */ "a"])(servo_class_validate, has_feature, get_feature, default_data, "Mek_Servo-Class");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///063b\n')},"706d":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return partial_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return partial_has_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return partial_get_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return partial_cleaned_feature; });\n//data table module, raw data output for re-use in non-vue-component formats\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \n//          neutral and reusable across all data modules\n//partial data validator\n//called with data_table and validation_keys in data-module\nlet partial_validate = (_data_table, _validation_keys) => _data => {\n  //_data_table: Array, array of data to validate against\n  //_validation_keys: Array, keys to be compared between passed in data and data_table\n  //_data: Object, data to be compared to data table \n  if (typeof _data === "undefined" || !Array.isArray(_validation_keys) || _validation_keys.length == 0) {\n    return false;\n  }\n\n  let valid = _data_table.some(_val => {\n    return _validation_keys.every(_keys => {\n      //return true if all validation_keys in _data match an element in _data_table\n      return _data[_keys] == _val[_keys];\n    });\n  });\n\n  return valid;\n}; //partial_has_feature, determine if provided data table has matching element with provided key and val\n//called in data module to generate full function with local data\n\n\nlet partial_has_feature = _data_table => (_key, _val) => {\n  return _data_table.some(_data => {\n    return _data[_key] !== undefined && _data[_key] == _val;\n  });\n}; //partial get_feature, returns full function for data module\n//requires data_table (array) and module\'s has_feature function\n//returns full matching element in provided data table\n//has_feature must exist in data table module\n\n\nlet partial_get_feature = (_data_table, _has_feature) => (_key, _val) => {\n  let found_feature = null;\n\n  if (_has_feature(_key, _val)) {\n    _data_table.some(_table_val => {\n      if (_table_val[_key] == _val) {\n        found_feature = _table_val;\n        return true;\n      }\n    }, undefined);\n  }\n\n  return found_feature;\n};\n\nlet partial_cleaned_feature = (_validator, _has_feature, _get_feature, _default_data, _name) => (_pkey, _feature) => {\n  //input: primary key, selected feature, filtered data table\n  let data = undefined;\n  let key_list = [];\n  let update = false;\n  let alerts = [];\n  let json_data = JSON.stringify(_feature);\n\n  if (_feature === undefined || !_has_feature(_pkey, _feature[_pkey])) {\n    data = _default_data;\n    key_list = [data[_pkey]];\n    update = true;\n    alerts.push(_name + ": " + json_data);\n    alerts.push("**** Invalid data. Reseting to default. ****");\n  } else if (!_validator(_feature)) {\n    data = JSON.parse(JSON.stringify(_get_feature(_pkey, _feature[_pkey])));\n    key_list = [data[_pkey]];\n    update = true;\n    alerts.push(_name + ": " + json_data);\n    alerts.push("**** Invalid data. Reseting. ****");\n  } else {\n    data = JSON.parse(JSON.stringify(_feature));\n    key_list = [data[_pkey]];\n    update = false;\n  }\n\n  return {\n    data: data,\n    key_list: key_list,\n    update: update,\n    alerts: alerts\n  };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///706d\n')},a58a:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony default export */ __webpack_exports__["a"] = ([{\n  code: 1,\n  id: "SL",\n  name: "Superlight"\n}, {\n  code: 2,\n  id: "LW",\n  name: "Lightweight"\n}, {\n  code: 3,\n  id: "STR",\n  name: "Striker"\n}, {\n  code: 4,\n  id: "MS",\n  name: "Medium Striker"\n}, {\n  code: 5,\n  id: "HS",\n  name: "Heavy Striker"\n}, {\n  code: 6,\n  id: "MW",\n  name: "Mediumweight"\n}, {\n  code: 7,\n  id: "LH",\n  name: "Light Heavy"\n}, {\n  code: 8,\n  id: "MH",\n  name: "Medium Heavy"\n}, {\n  code: 9,\n  id: "AH",\n  name: "Armored Heavy"\n}, {\n  code: 10,\n  id: "SH",\n  name: "Super Heavy"\n}, {\n  code: 11,\n  id: "MgH",\n  name: "Mega Heavy"\n}]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZGF0YV90YWJsZV9tb2R1bGVzL3VuaXZlcnNhbC9zZXJ2b19jbGFzc2VzX2RhdGEuanM/YTU4YSJdLCJuYW1lcyI6WyJjb2RlIiwiaWQiLCJuYW1lIl0sIm1hcHBpbmdzIjoiQUFDSSwwREFDSTtBQUFDQSxNQUFJLEVBQUMsQ0FBTjtBQUFRQyxJQUFFLEVBQUMsSUFBWDtBQUFnQkMsTUFBSSxFQUFDO0FBQXJCLENBREosRUFFSTtBQUFDRixNQUFJLEVBQUMsQ0FBTjtBQUFRQyxJQUFFLEVBQUMsSUFBWDtBQUFnQkMsTUFBSSxFQUFDO0FBQXJCLENBRkosRUFHSTtBQUFDRixNQUFJLEVBQUMsQ0FBTjtBQUFRQyxJQUFFLEVBQUMsS0FBWDtBQUFpQkMsTUFBSSxFQUFDO0FBQXRCLENBSEosRUFJSTtBQUFDRixNQUFJLEVBQUMsQ0FBTjtBQUFRQyxJQUFFLEVBQUMsSUFBWDtBQUFnQkMsTUFBSSxFQUFDO0FBQXJCLENBSkosRUFLSTtBQUFDRixNQUFJLEVBQUMsQ0FBTjtBQUFRQyxJQUFFLEVBQUMsSUFBWDtBQUFnQkMsTUFBSSxFQUFDO0FBQXJCLENBTEosRUFNSTtBQUFDRixNQUFJLEVBQUMsQ0FBTjtBQUFRQyxJQUFFLEVBQUMsSUFBWDtBQUFnQkMsTUFBSSxFQUFDO0FBQXJCLENBTkosRUFPSTtBQUFDRixNQUFJLEVBQUMsQ0FBTjtBQUFRQyxJQUFFLEVBQUMsSUFBWDtBQUFnQkMsTUFBSSxFQUFDO0FBQXJCLENBUEosRUFRSTtBQUFDRixNQUFJLEVBQUMsQ0FBTjtBQUFRQyxJQUFFLEVBQUMsSUFBWDtBQUFnQkMsTUFBSSxFQUFDO0FBQXJCLENBUkosRUFTSTtBQUFDRixNQUFJLEVBQUMsQ0FBTjtBQUFRQyxJQUFFLEVBQUMsSUFBWDtBQUFnQkMsTUFBSSxFQUFDO0FBQXJCLENBVEosRUFVSTtBQUFDRixNQUFJLEVBQUMsRUFBTjtBQUFTQyxJQUFFLEVBQUMsSUFBWjtBQUFpQkMsTUFBSSxFQUFDO0FBQXRCLENBVkosRUFXSTtBQUFDRixNQUFJLEVBQUMsRUFBTjtBQUFTQyxJQUFFLEVBQUMsS0FBWjtBQUFrQkMsTUFBSSxFQUFDO0FBQXZCLENBWEosQ0FESiIsImZpbGUiOiJhNThhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHRcclxuICAgIFtcclxuICAgICAgICB7Y29kZToxLGlkOlwiU0xcIixuYW1lOlwiU3VwZXJsaWdodFwifSxcclxuICAgICAgICB7Y29kZToyLGlkOlwiTFdcIixuYW1lOlwiTGlnaHR3ZWlnaHRcIn0sXHJcbiAgICAgICAge2NvZGU6MyxpZDpcIlNUUlwiLG5hbWU6XCJTdHJpa2VyXCJ9LFxyXG4gICAgICAgIHtjb2RlOjQsaWQ6XCJNU1wiLG5hbWU6XCJNZWRpdW0gU3RyaWtlclwifSxcclxuICAgICAgICB7Y29kZTo1LGlkOlwiSFNcIixuYW1lOlwiSGVhdnkgU3RyaWtlclwifSxcclxuICAgICAgICB7Y29kZTo2LGlkOlwiTVdcIixuYW1lOlwiTWVkaXVtd2VpZ2h0XCJ9LFxyXG4gICAgICAgIHtjb2RlOjcsaWQ6XCJMSFwiLG5hbWU6XCJMaWdodCBIZWF2eVwifSxcclxuICAgICAgICB7Y29kZTo4LGlkOlwiTUhcIixuYW1lOlwiTWVkaXVtIEhlYXZ5XCJ9LFxyXG4gICAgICAgIHtjb2RlOjksaWQ6XCJBSFwiLG5hbWU6XCJBcm1vcmVkIEhlYXZ5XCJ9LFxyXG4gICAgICAgIHtjb2RlOjEwLGlkOlwiU0hcIixuYW1lOlwiU3VwZXIgSGVhdnlcIn0sXHJcbiAgICAgICAge2NvZGU6MTEsaWQ6XCJNZ0hcIixuYW1lOlwiTWVnYSBIZWF2eVwifVxyXG4gICAgXTtcclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///a58a\n')}}]);
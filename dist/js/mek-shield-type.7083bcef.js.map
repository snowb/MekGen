{"version":3,"sources":["webpack:///./src/components/mek_shield/subcomponents/mek_shield-type.vue?921e","webpack:///./src/components/data_table_modules/mek_shield/mek_shield-type-data-module.js","webpack:///src/components/mek_shield/subcomponents/mek_shield-type.vue","webpack:///./src/components/mek_shield/subcomponents/mek_shield-type.vue?5ac6","webpack:///./src/components/mek_shield/subcomponents/mek_shield-type.vue","webpack:///./src/mixins/alerts_mixin.js","webpack:///./src/components/data_table_modules/universal/mek_partial-function-data-module.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","items","type_table","headers","name","pkey","selected-keys","selected_keys","flow","show-headers","on","update-selected-data","select_type","staticRenderFns","type_data_table","data_table_keys","default_data","type_validate","partial_validate","has_feature","partial_has_feature","get_feature","partial_get_feature","cleaned_feature","partial_cleaned_feature","mek_shield_typevue_type_script_lang_js_","props","mixins","alerts_mixin","components","mek-sub-component-table","__webpack_require__","e","then","bind","data","obj","alerts","suppressAlerts","methods","_selected_type","JSON","parse","stringify","$emit","computed","[object Object]","cleaned_data","type","length","forEach","_alert","addAlert","publishAlerts","update","key_list","subcomponents_mek_shield_typevue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","_alert_string","push","$store","commit","$set","d","_data_table","_validation_keys","_data","Array","isArray","valid","some","_val","_keys","_key","undefined","_has_feature","found_feature","_table_val","_validator","_get_feature","_default_data","_name","_pkey","_feature","json_data"],"mappings":"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","file":"js/mek-shield-type.7083bcef.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.type_table,\"headers\":{name:''},\"pkey\":_vm.pkey,\"selected-keys\":_vm.selected_keys,\"name\":\"Type\",\"flow\":\"pkey-col\",\"show-headers\":false},on:{\"update-selected-data\":_vm.select_type}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature} from \"../universal/mek_partial-function-data-module\";\r\n\r\n//create new type_data_table\r\nlet type_data_table=\r\n[\r\n    {name:\"Standard\"},\r\n    {name:\"Active\"},\r\n    {name:\"Reactive\"}\r\n];\r\nlet data_table_keys=[\"name\"];\r\nlet default_data={name:\"Standard\"};\r\n\r\n//data validator for type_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet type_validate=partial_validate(type_data_table, data_table_keys);\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=partial_has_feature(type_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_feature=partial_get_feature(type_data_table, has_feature);\r\n\r\n//completed function for returning cleaed data\r\nlet cleaned_feature=\r\n    partial_cleaned_feature(type_validate, has_feature, get_feature, default_data, \"Mek_Shield-Type\");\r\n\r\nexport {type_data_table, type_validate, has_feature, get_feature, cleaned_feature};\r\n","<template>\r\n    <mek-sub-component-table\r\n        :items=\"type_table\" :headers=\"{name:''}\" :pkey=\"pkey\" :selected-keys=\"selected_keys\"\r\n        name=\"Type\" flow=\"pkey-col\" :show-headers=\"false\"\r\n        @update-selected-data=\"select_type\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport alerts_mixin from \"../../../mixins/alerts_mixin.js\";\r\nimport { type_data_table, cleaned_feature } \r\n    from '../../data_table_modules/mek_shield/mek_shield-type-data-module';\r\n\r\nexport default \r\n{\r\n    name:\"mek_shield_type\",\r\n    props:[\"type\"],\r\n    mixins:[alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"../../universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.pkey=\"name\";\r\n        obj.alerts=[];\r\n        obj.suppressAlerts=false;\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_type:function(_selected_type)\r\n        {\r\n            let data=JSON.parse(JSON.stringify(_selected_type))\r\n            this.$emit(\"update-type\",data);\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        type_table()\r\n        {\r\n            return type_data_table;\r\n        },\r\n        selected_keys()\r\n        {\r\n            let cleaned_data=cleaned_feature(this.pkey, this.type);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.select_type(cleaned_data.data);\r\n            }\r\n            return cleaned_data.key_list;\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_shield-type.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_shield-type.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_shield-type.vue?vue&type=template&id=2171e602&\"\nimport script from \"./mek_shield-type.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_shield-type.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return !_validation_keys.some((_keys)=>\r\n        {//returns true on invalid data, Not the return to return True if matching valid value is found\r\n            return _data[_keys]!=_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n"],"sourceRoot":""}
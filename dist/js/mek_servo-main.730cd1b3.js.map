{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_string-at.js","webpack:///./node_modules/core-js/modules/_advance-string-index.js","webpack:///./node_modules/core-js/modules/_flags.js","webpack:///./node_modules/core-js/modules/_fix-re-wks.js","webpack:///./node_modules/core-js/modules/_classof.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/core-js/modules/_regexp-exec.js","webpack:///./node_modules/core-js/modules/_regexp-exec-abstract.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./src/mixins/component_computed_mixin.js","webpack:///./src/mixins/utility_mixin.js","webpack:///./src/design_components/mek_servo/mek_servo-main.vue?32d4","webpack:///src/design_components/mek_servo/mek_servo-main.vue","webpack:///./src/design_components/mek_servo/mek_servo-main.vue?5fed","webpack:///./src/design_components/mek_servo/mek_servo-main.vue","webpack:///./node_modules/core-js/modules/es6.regexp.replace.js","webpack:///./node_modules/core-js/modules/es6.regexp.exec.js","webpack:///./src/mixins/component_methods_mixin.js"],"names":["toInteger","__webpack_require__","defined","module","exports","TO_STRING","that","pos","a","b","s","String","i","l","length","undefined","charCodeAt","charAt","slice","at","S","index","unicode","anObject","this","result","global","ignoreCase","multiline","sticky","redefine","hide","fails","wks","regexpExec","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","re","exec","groups","replace","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","apply","arguments","split","KEY","SYMBOL","DELEGATES_TO_SYMBOL","O","DELEGATES_TO_EXEC","execCalled","constructor","nativeRegExpMethod","fns","nativeMethod","regexp","str","arg2","forceStringMethod","done","value","call","strfn","rxfn","prototype","RegExp","string","arg","cof","TAG","ARG","tryGet","it","key","e","T","B","Object","callee","flags","f","configurable","get","regexpFlags","nativeExec","nativeReplace","patchedExec","LAST_INDEX","UPDATES_LAST_INDEX_WRONG","re1","re2","NPCG_INCLUDED","PATCH","lastIndex","reCopy","match","source","classof","builtinExec","R","TypeError","$flags","DESCRIPTORS","$toString","define","fn","concat","name","__webpack_exports__","computed","space_cost","round","raw_space","efficiencies","space","modifier","cost_multiplier","multi","cost_multipliers","submulti","weight","damage_capacity","feature_list","feature_array","reduce","_string","_val","_index","feature","newComponent","selectedComponent","JSON","parse","stringify","$store","getters","uuid","component_category","component_type","ingest_data","methods","_number","_decimals","Math","multiplier","floor","ceiling","decimalPad","toPrecision","create_uuid","c","crypto","getRandomValues","Uint8Array","toString","invisible_pad","_array_of_items","longestString","forEach","_element","isNumeric","_input","isNaN","parseFloat","isFinite","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","width","attrs","new-component","component-name","component_name","servo_name","component-changed","component_changed","on","update-component-name","updateComponentName","align-self","servo-type","selected_servo_type","update-servo-type","updateServoType","alert-generated","handleAlert","base_kills","selected_servo_class","kills","kills_modifier","kills_space_trade","space_modifier","base_space","update-extra-space","updateExtraSpace","type","servo-class","update-servo-class","updateServoClass","armor","selected_armor","max-armor","code","update-armor","updateArmor","cost","armor-type","selected_armor_type","update-armor-type","updateArmorType","_e","absorption","selected_absorption","update-absorption","updateAbsorption","cols","rows","slot","_v","_s","total_kills","stopping_power","final_stopping_power","padding-left","damage_coefficient","is_arm","is_leg","damage_bonus","throw_range","available_space","base_cost","armor_cost_multiplier","font-weight","save-reset-component","componentSaveReset","staticRenderFns","mek_servo_mainvue_type_script_lang_js_","props","mixins","utility_mixin","component_methods_mixin","component_computed_mixin","components","mek-servo-type","then","bind","mek-servo-class","mek-servo-kills-space-trade","mek-component-name","mek-save-reset-component","mek-component-stats","mek-armor","mek-armor-type","mek-armor-ram","data","obj","custom_component_name","original_component","id","armor_penalty","hasAlert","[object Object]","_name","_servo_type","$set","_servo_class","_armor","_armor_type","_absorption","_kills_space_trade","_data_object","alertMessage","universal_ingest_data","$nextTick","return_data","_action","action","commit","output_data","armor_type","_alert_status","servo_class","reinforced","absorbing","additional","trim","servo_kills","kills_space_trade_sp_loss","toLowerCase","mek_servo_mek_servo_mainvue_type_script_lang_js_","component","componentNormalizer","toObject","toLength","advanceStringIndex","regExpExec","max","min","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","REPLACE","$replace","maybeCallNative","searchValue","replaceValue","res","rx","functionalReplace","fullUnicode","results","push","matchStr","accumulatedResult","nextSourcePosition","matched","position","captures","j","namedCaptures","replacerArgs","replacement","getSubstitution","tailPos","m","symbols","ch","capture","n","target","proto","forced","_alertMessage","data_object","_property","keys","_computedWatchers","includes","Array","isArray","_sub_property","$forceUpdate","addAlert","_alert_string","alerts","publishAlerts"],"mappings":"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","file":"js/mek_servo-main.730cd1b3.js","sourcesContent":["var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","'use strict';\nvar at = require('./_string-at')(true);\n\n // `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? at(S, index).length : 1);\n};\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nrequire('./es6.regexp.exec');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\nvar regexpExec = require('./_regexp-exec');\n\nvar SPECIES = wks('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {\n  // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length === 2 && result[0] === 'a' && result[1] === 'b';\n})();\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n    re.exec = function () { execCalled = true; return null; };\n    if (KEY === 'split') {\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n    }\n    re[SYMBOL]('');\n    return !execCalled;\n  }) : undefined;\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var fns = exec(\n      defined,\n      SYMBOL,\n      ''[KEY],\n      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {\n        if (regexp.exec === regexpExec) {\n          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n            // The native String method already delegates to @@method (this\n            // polyfilled function), leasing to infinite recursion.\n            // We avoid it by directly calling the native @@method method.\n            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n          }\n          return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n        }\n        return { done: false };\n      }\n    );\n    var strfn = fns[0];\n    var rxfn = fns[1];\n\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","'use strict';\n\nvar regexpFlags = require('./_flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar LAST_INDEX = 'lastIndex';\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/,\n      re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      // eslint-disable-next-line no-loop-func\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\n\nvar classof = require('./_classof');\nvar builtinExec = RegExp.prototype.exec;\n\n // `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n  if (classof(R) !== 'RegExp') {\n    throw new TypeError('RegExp#exec called on incompatible receiver');\n  }\n  return builtinExec.call(R, S);\n};\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","export default\r\n{\r\n    computed:\r\n    {\r\n        space_cost()\r\n        {\r\n            return this.round(this.raw_space - this.efficiencies.space.modifier,2);\r\n        },\r\n        cost_multiplier()\r\n        {\r\n            let cost_multiplier=1;\r\n            for(let multi in this.cost_multipliers)\r\n            {\r\n                if(typeof this.cost_multipliers[multi]===\"object\")\r\n                {\r\n                    for(let submulti in this.cost_multipliers[multi])\r\n                    {\r\n                        cost_multiplier*=this.cost_multipliers[multi][submulti];\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    cost_multiplier*=this.cost_multipliers[multi];\r\n                }\r\n            }\r\n            return this.round(cost_multiplier,2);\r\n        },\r\n        weight()\r\n        {\r\n            return this.round((this.damage_capacity / 2),2);\r\n        },\r\n        feature_list()\r\n        {\r\n            if(typeof this.feature_array===\"undefined\")\r\n            {\r\n                return \"\";\r\n            }\r\n            return this.feature_array.reduce(function(_string, _val, _index)\r\n            {\r\n                _string+=_index>0 ? \", \" : \"\";\r\n                _string+=_val.feature;\r\n                return _string;\r\n            },\"\");\r\n        },\r\n        newComponent()\r\n        {//responsible for ingesting data from the store\r\n            let selectedComponent=JSON.parse(JSON.stringify(this.$store.getters.selectedComponent));\r\n\r\n            if(typeof selectedComponent!==\"undefined\" && selectedComponent!==null)\r\n            {\r\n                if(selectedComponent.uuid!==this.uuid \r\n                    && selectedComponent.component_category==this.component_category\r\n                    && selectedComponent.component_type==this.component_type)\r\n                {\r\n                    this.ingest_data(selectedComponent);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n    }\r\n};","export default\r\n{\r\n    methods:\r\n    {\r\n        round:function(_number, _decimals)\r\n        {\r\n            if(typeof _decimals===\"undefined\" || +_decimals==0)\r\n            {\r\n                return Math.round(+_number)\r\n            }\r\n            let multiplier=10 ** +_decimals;\r\n            return Math.round(+_number * multiplier)/multiplier;\r\n        },\r\n        floor:function(_number)\r\n        {\r\n            return Math.floor(+_number);\r\n        },\r\n        ceiling:function(_number)\r\n        {\r\n            return Math.ceiling(+_number);\r\n        },\r\n        decimalPad(_number)\r\n        {\r\n            return +_number%1===0 ? _number.toPrecision(2) : _number;\r\n        },\r\n        create_uuid:function()\r\n        {\r\n            return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\r\n                (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n            )\r\n              \r\n        },\r\n        invisible_pad:function(_array_of_items)\r\n        {\r\n            let longestString=\"\";\r\n            _array_of_items.forEach(function(_element)\r\n            {\r\n                if(_element.length > longestString.length)\r\n                {\r\n                    longestString=_element;\r\n                }\r\n            },0);\r\n            return longestString+\"XX\";\r\n        },\r\n        isNumeric:function isNumeric(_input)\r\n        {\r\n            return typeof _input!=='undefined' && !isNaN(parseFloat(_input)) && isFinite(_input);\r\n        },\r\n    }\r\n};","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"mek-inline-flex-col\",staticStyle:{\"width\":\"100%\"}},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.servo_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('span',{staticClass:\"mek-inline-flex-row\"},[_c('span',{staticClass:\"mek-inline-flex-col\"},[_c('mek-servo-type',{staticStyle:{\"align-self\":\"flex-start\"},attrs:{\"servo-type\":_vm.selected_servo_type},on:{\"update-servo-type\":_vm.updateServoType,\"alert-generated\":_vm.handleAlert}}),_c('mek-servo-kills-space-trade',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"base_kills\":_vm.selected_servo_class.kills,\"kills_modifier\":_vm.kills_space_trade.kills_modifier,\"space_modifier\":_vm.kills_space_trade.space_modifier,\"base_space\":_vm.selected_servo_class.space},on:{\"update-extra-space\":_vm.updateExtraSpace,\"alert-generated\":_vm.handleAlert}})],1),_c('mek-servo-class',{attrs:{\"servo-type\":_vm.selected_servo_type.type,\"servo-class\":_vm.selected_servo_class},on:{\"update-servo-class\":_vm.updateServoClass,\"alert-generated\":_vm.handleAlert}}),_c('mek-armor',{attrs:{\"armor\":_vm.selected_armor,\"max-armor\":_vm.selected_servo_class.code+2},on:{\"update-armor\":_vm.updateArmor,\"alert-generated\":_vm.handleAlert}}),_c('span',{staticClass:\"mek-inline-flex-col\"},[(_vm.selected_armor.cost!=0)?_c('mek-armor-type',{attrs:{\"armor-type\":_vm.selected_armor_type},on:{\"update-armor-type\":_vm.updateArmorType,\"alert-generated\":_vm.handleAlert}}):_vm._e(),(_vm.selected_armor.cost!=0)?_c('mek-armor-ram',{attrs:{\"absorption\":_vm.selected_absorption},on:{\"update-absorption\":_vm.updateAbsorption,\"alert-generated\":_vm.handleAlert}}):_vm._e()],1)],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":6}},[_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Base Kills: \"+_vm._s(_vm.selected_servo_class.kills))]),_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_vm._v(\"Total Kills: \"+_vm._s(_vm.total_kills))]),(_vm.selected_armor.cost!=0)?_c('div',{attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Base Armor Stopping Power: \"+_vm._s(_vm.round(_vm.selected_armor.stopping_power,2))+\"\\n                \"),_c('br'),_vm._v(\"Final Stopping Power: \"+_vm._s(_vm.round(_vm.final_stopping_power,2))+\"\\n            \")]):_vm._e(),(_vm.selected_armor.cost!=0)?_c('div',{attrs:{\"slot\":\"col1-row4\"},slot:\"col1-row4\"},[_vm._v(\"Armor Type: \"+_vm._s(_vm.selected_armor_type.type))]):_vm._e(),(_vm.selected_armor.cost!=0)?_c('div',{staticStyle:{\"padding-left\":\"10px\"},attrs:{\"slot\":\"col1-row5\"},slot:\"col1-row5\"},[_vm._v(\"Damage Coefficient: \"+_vm._s(_vm.selected_armor_type.damage_coefficient))]):_vm._e(),(_vm.selected_absorption.cost!=1)?_c('div',{attrs:{\"slot\":\"col1-row6\"},slot:\"col1-row6\"},[_vm._v(\"Absorption: \"+_vm._s(_vm.selected_absorption.absorption*100)+\"%\")]):_vm._e(),(_vm.is_arm | _vm.is_leg)?_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Damage Bonus: \"+_vm._s(_vm.selected_servo_class.damage_bonus))]):_vm._e(),(_vm.is_arm)?_c('div',{attrs:{\"slot\":\"col2-row2\"},slot:\"col2-row2\"},[_vm._v(\"Throw Range: \"+_vm._s(_vm.selected_servo_class.throw_range))]):_vm._e(),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.selected_servo_class.space))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Available Space: \"+_vm._s(_vm.available_space))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.weight)+\" tons\")]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.base_cost))]),_c('div',{attrs:{\"slot\":\"col4-row2\"},slot:\"col4-row2\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.armor_cost_multiplier))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row3\"},slot:\"col4-row3\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <span class=\"mek-inline-flex-col\" style=\"width:100%;\">\r\n        <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||servo_name\"\r\n            :component-changed=\"component_changed\"\r\n            @update-component-name=\"updateComponentName\"\r\n        ></mek-component-name>\r\n        <span class=\"mek-inline-flex-row\">\r\n            <span class=\"mek-inline-flex-col\">\r\n                <mek-servo-type :servo-type=\"selected_servo_type\" \r\n                    @update-servo-type=\"updateServoType\" @alert-generated=\"handleAlert\"\r\n                    style=\"align-self:flex-start;\"\r\n                ></mek-servo-type>\r\n                <mek-servo-kills-space-trade style=\"align-self:baseline;\"\r\n                    :base_kills=\"selected_servo_class.kills\" :kills_modifier=\"kills_space_trade.kills_modifier\" \r\n                    :space_modifier=\"kills_space_trade.space_modifier\" :base_space=\"selected_servo_class.space\"\r\n                    @update-extra-space=\"updateExtraSpace\" @alert-generated=\"handleAlert\"\r\n                ></mek-servo-kills-space-trade>\r\n                <!--- ADD KILLS FOR SPACE CONVERTER --->\r\n                <!--- add reinforcing component --->\r\n            </span>\r\n            <mek-servo-class @update-servo-class=\"updateServoClass\" @alert-generated=\"handleAlert\"\r\n                :servo-type=\"selected_servo_type.type\" :servo-class=\"selected_servo_class\"\r\n            ></mek-servo-class>\r\n            <mek-armor :armor=\"selected_armor\"  :max-armor=\"selected_servo_class.code+2\"\r\n                @update-armor=\"updateArmor\" @alert-generated=\"handleAlert\"\r\n            ></mek-armor>\r\n            <span class=\"mek-inline-flex-col\">\r\n                <mek-armor-type :armor-type=\"selected_armor_type\" v-if=\"selected_armor.cost!=0\"\r\n                    @update-armor-type=\"updateArmorType\" @alert-generated=\"handleAlert\"\r\n                ></mek-armor-type>\r\n                <mek-armor-ram :absorption=\"selected_absorption\" v-if=\"selected_armor.cost!=0\"\r\n                    @update-absorption=\"updateAbsorption\" @alert-generated=\"handleAlert\"\r\n                ></mek-armor-ram>\r\n            </span>\r\n        </span>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-component-stats :cols=\"4\" :rows=\"6\">\r\n                <div slot=\"col1-row1\">Base Kills: {{selected_servo_class.kills}}</div>\r\n                <div slot=\"col1-row2\">Total Kills: {{total_kills}}</div>\r\n                <div slot=\"col1-row3\" v-if=\"selected_armor.cost!=0\">Base Armor Stopping Power: {{round(selected_armor.stopping_power,2)}}\r\n                    <br>Final Stopping Power: {{round(final_stopping_power,2)}}\r\n                </div>\r\n                <div slot=\"col1-row4\" v-if=\"selected_armor.cost!=0\">Armor Type: {{selected_armor_type.type}}</div>\r\n                <div slot=\"col1-row5\" v-if=\"selected_armor.cost!=0\" style=\"padding-left:10px;\">Damage Coefficient: {{selected_armor_type.damage_coefficient}}</div>\r\n                <div slot=\"col1-row6\" v-if=\"selected_absorption.cost!=1\">Absorption: {{selected_absorption.absorption*100}}%</div>\r\n\r\n                <div slot=\"col2-row1\" v-if=\"is_arm | is_leg\">Damage Bonus: {{selected_servo_class.damage_bonus}}</div>\r\n                <div slot=\"col2-row2\" v-if=\"is_arm\">Throw Range: {{selected_servo_class.throw_range}}</div>\r\n\r\n                <div slot=\"col3-row1\">Base Space: {{selected_servo_class.space}}</div>\r\n                <div slot=\"col3-row2\">Available Space: {{available_space}}</div>\r\n                <div slot=\"col3-row3\">Weight: {{weight}} tons</div>\r\n                \r\n                <div slot=\"col4-row1\">Base Cost: {{base_cost}}</div>\r\n                <div slot=\"col4-row2\">Multiplier: x{{armor_cost_multiplier}}</div>\r\n                <div slot=\"col4-row3\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n            </mek-component-stats>\r\n            <mek-save-reset-component @save-reset-component=\"componentSaveReset\"></mek-save-reset-component>\r\n        </div>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\nimport utility_mixin from \"@/mixins/utility_mixin.js\";\r\nimport component_methods_mixin from \"@/mixins/component_methods_mixin\";\r\nimport component_computed_mixin from \"@/mixins/component_computed_mixin\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_servo\",\r\n    props:[],\r\n    mixins:\r\n        [\r\n            utility_mixin, \r\n            component_methods_mixin, \r\n            component_computed_mixin\r\n        ],\r\n    components:\r\n    {\r\n        \"mek-servo-type\":()=>import(/* webpackChunkName: \"mek_servo-type\" */\"./subcomponents/mek_servo-type.vue\"),\r\n        \"mek-servo-class\":()=>import(/* webpackChunkName: \"mek_servo-class\" */\"./subcomponents/mek_servo-class.vue\"),\r\n        \"mek-servo-kills-space-trade\":()=>import(/* webpackChunkName: \"mek_servo-kills-space-trade\" */\"./subcomponents/mek_servo-kills-space-trade.vue\"),\r\n\r\n        \"mek-component-name\":()=>import(/* webpackChunkName: \"mek-component-name\" */\"@/design_components/universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>import(/* webpackChunkName: \"mek-save-reset-component\" */\"@/design_components/universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>import(/* webpackChunkName: \"mek_component-stats\" */\"@/design_components/universal/mek_component-stats.vue\"),\r\n\r\n        \"mek-armor\":()=>import(/* webpackChunkName: \"mek_armor\" */\"@/design_components/universal/mek_armor.vue\"),\r\n        \"mek-armor-type\":()=>import(/* webpackChunkName: \"mek_armor-type\" */\"@/design_components/universal/mek_armor-type.vue\"),\r\n        \"mek-armor-ram\":()=>import(/* webpackChunkName: \"mek_armor-RAM\" */\"@/design_components/universal/mek_armor-RAM.vue\"),\r\n        \r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.uuid=null;\r\n        obj.component_name=null;\r\n        obj.custom_component_name=false;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"servo\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.selected_servo_type={type:\"Torso\"};\r\n        obj.selected_servo_class={code:1,name:\"Superlight\",space:2,cost:2,kills:2,id:\"SL\"};\r\n\r\n        obj.cost_multipliers={};\r\n\r\n        obj.selected_armor={name:\"None\",cost:0,stopping_power:0,code:0};\r\n        obj.cost_multipliers.armor={};\r\n        \r\n        obj.selected_armor_type={type:\"Standard\",damage_coefficient:1,cost:1};\r\n        obj.cost_multipliers.armor.selected_armor_type=1;\r\n\r\n        obj.selected_absorption={absorption:0,cost:1,armor_penalty:0};\r\n        obj.cost_multipliers.armor.selected_absorption=1;\r\n\r\n        obj.kills_space_trade={};\r\n        obj.kills_space_trade.space_modifier=0;\r\n        obj.kills_space_trade.kills_modifier=0;\r\n        obj.kills_space_trade.cost=0;\r\n\r\n        obj.hasAlert=false;\r\n\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        updateComponentName(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.custom_component_name=true;\r\n            this.component_changed=true;\r\n        },\r\n        updateServoType(_servo_type)\r\n        {   \r\n            this.component_type=_servo_type.type;\r\n            this.$set(this,\"selected_servo_type\",_servo_type);\r\n            this.component_changed=true;\r\n        },\r\n        updateServoClass(_servo_class)\r\n        {\r\n            this.$set(this,\"selected_servo_class\",_servo_class);\r\n            this.component_changed=true;\r\n        },\r\n        updateArmor(_armor)\r\n        {\r\n            this.$set(this,\"selected_armor\",_armor);\r\n            this.component_changed=true;\r\n            if(_armor.stopping_power==0)\r\n            {//reset RAM and Armor type on selecting No-Armor\r\n                this.updateAbsorption({absorption:0,cost:1,armor_penalty:0});\r\n                this.updateArmorType({type:\"Standard\",damage_coefficient:1,cost:1});\r\n            }\r\n        },\r\n        updateArmorType(_armor_type)\r\n        {\r\n            this.$set(this,\"selected_armor_type\",JSON.parse(JSON.stringify(_armor_type)));\r\n            this.cost_multipliers.armor.selected_armor_type=this.selected_armor_type.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateAbsorption(_absorption)\r\n        {\r\n            this.$set(this,\"selected_absorption\",JSON.parse(JSON.stringify(_absorption)));\r\n            this.cost_multipliers.armor.selected_absorption=this.selected_absorption.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateExtraSpace(_kills_space_trade)\r\n        {\r\n            this.kills_space_trade.space_modifier=_kills_space_trade.space;\r\n            this.kills_space_trade.kills_modifier=_kills_space_trade.kills;\r\n            this.kills_space_trade.cost=_kills_space_trade.cost;\r\n            this.component_changed=true;\r\n        },\r\n        ingest_data(_data_object)\r\n        {\r\n            let alertMessage=\"Torso bad, resetting to 'standard' shield.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(!this.custom_component_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=this.hasAlert;});\r\n        },\r\n        output_data()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"servo\";\r\n            return_data.component_name=this.component_name===null?this.servo_name:this.component_name;\r\n            return_data.custom_component_name=this.custom_component_name;\r\n\r\n            return_data.selected_servo_type=this.selected_servo_type;\r\n            return_data.selected_servo_class=this.selected_servo_class;\r\n            return_data.selected_armor=this.selected_armor;\r\n            return_data.selected_armor_type=this.selected_armor_type;\r\n            return_data.selected_absorption=this.selected_absorption;\r\n            return_data.cost_multipliers=this.cost_multipliers;\r\n            return_data.kills_space_trade=this.kills_space_trade;\r\n            \r\n            return_data.cost=this.cost;\r\n            return_data.armor_cost_multiplier=this.armor_cost_multiplier;\r\n            return_data.weight=this.weight;\r\n            return_data.total_kills=this.total_kills;\r\n            return_data.available_space=this.available_space;\r\n\r\n            this.$nextTick(()=>{this.component_changed=this.hasAlert;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return JSON.parse(this.original_component);\r\n        },\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"clear\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                        break;\r\n                    }\r\n                    // eslint-disable-next-line\r\n                case \"clear\":\r\n                    this.uuid=null;\r\n                    this.$set(this,\"selected_servo_type\",{type:\"Torso\"});\r\n                    this.$set(this,\"selected_servo_class\",{code:1,name:\"Superlight\",space:2,cost:2,kills:2,id:\"SL\"})\r\n                    this.$set(this,\"selected_armor\",{name:\"None\",cost:0,stopping_power:0,code:0});\r\n                    this.$set(this,\"selected_armor_type\",{type:\"Standard\",damage_coefficient:1,cost:1});\r\n                    this.cost_multipliers.armor.armor_type=1;\r\n                    this.$set(this,\"selected_absorption\",{absorption:0,cost:1,armor_penalty:0});\r\n                    this.cost_multipliers.armor.absorption=1;\r\n                    this.$set(this,\"kills_space_trade\",{space_modifier:0,kills_modifier:0,cost:0});\r\n                    this.component_name=null;\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        },\r\n        handleAlert(_alert_status)\r\n        {\r\n            this.hasAlert=_alert_status;\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        servo_name()\r\n        {\r\n            let type=this.selected_servo_type.type;\r\n            let servo_class=this.selected_servo_class.name;\r\n            let reinforced=this.kills_space_trade.kills_modifier>0 ? \" Reinforced \" : \"\";\r\n            let armor_type=this.selected_armor_type.type;\r\n            let armor=this.selected_armor.cost>0 && this.selected_armor_type.cost==1 ? \" Armored \" :\r\n                        this.selected_armor.cost>0 && this.selected_armor_type.cost!=1 ? \" \"+armor_type+\"-Armored \" :\r\n                        \"\";\r\n            let absorbing=this.selected_absorption.cost>1 ? \" Absorbing \":\"\";\r\n            let additional=reinforced!=\"\"||this.selected_armor.cost>0 ? \" - \" : \"\";\r\n            let name=type+\" \"+servo_class+\" Servo\"+additional+reinforced+absorbing+armor;\r\n            name=name.trim();\r\n            name=name.replace(/\\s+/gi,\" \");\r\n            return name;\r\n        },\r\n        base_cost()\r\n        {\r\n            return this.selected_servo_class.cost + this.selected_armor.cost + this.kills_space_trade.cost;\r\n        },\r\n        cost()\r\n        {\r\n            let cost=this.selected_servo_class.cost + (this.selected_armor.cost*this.armor_cost_multiplier) + this.kills_space_trade.cost;\r\n            return this.round(cost,2);\r\n        }\r\n        ,\r\n        available_space()\r\n        {\r\n            return this.selected_servo_class.space + this.kills_space_trade.space_modifier;\r\n        },\r\n        damage_capacity()\r\n        {\r\n            let servo_kills=this.selected_servo_class.kills;\r\n            let kills_space_trade_sp_loss=this.kills_space_trade.kills_modifier;\r\n            return servo_kills + this.final_stopping_power + kills_space_trade_sp_loss;\r\n        },\r\n        total_kills()\r\n        {\r\n            return this.selected_servo_class.kills + this.kills_space_trade.kills_modifier;\r\n        },\r\n        weight()\r\n        {\r\n            return this.round(this.damage_capacity/2,2);\r\n        },\r\n        final_stopping_power()\r\n        {\r\n            return this.selected_armor.stopping_power-(this.selected_armor.stopping_power*this.selected_absorption.armor_penalty);\r\n        },\r\n        is_arm()\r\n        {\r\n            return this.selected_servo_type.type.toLowerCase()==\"arm\";\r\n        },\r\n        is_leg()\r\n        {\r\n            return this.selected_servo_type.type.toLowerCase()==\"leg\";\r\n        },\r\n        armor_cost_multiplier()\r\n        {\r\n            let cost_multiplier=1;\r\n            for(let multi in this.cost_multipliers.armor)\r\n            {\r\n                cost_multiplier*=this.cost_multipliers.armor[multi];\r\n            }\r\n            return this.round(cost_multiplier,2);\r\n        }\r\n    }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_servo-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_servo-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_servo-main.vue?vue&type=template&id=58d84a2c&\"\nimport script from \"./mek_servo-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_servo-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\n\nvar anObject = require('./_an-object');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined\n        ? fn.call(searchValue, O, replaceValue)\n        : $replace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","'use strict';\nvar regexpExec = require('./_regexp-exec');\nrequire('./_export')({\n  target: 'RegExp',\n  proto: true,\n  forced: regexpExec !== /./.exec\n}, {\n  exec: regexpExec\n});\n","export default\r\n{\r\n    methods:\r\n    {\r\n        universal_ingest_data(_data_object,_alertMessage)\r\n        {\r\n            this.original_component=JSON.stringify(_data_object);//store a copy as a JSON object for 'reset' purposes\r\n            let data_object=JSON.parse(this.original_component);\r\n            if(_data_object===null)\r\n            {\r\n                this.componentSaveReset(\"clear\");\r\n                //generic error comment\r\n                this.$store.commit(\"alertMessage\",_alertMessage);\r\n            }\r\n\r\n            for(let _property in data_object)\r\n            {//exclude computed properties that are auto updated\r\n                if(Object.keys(this._computedWatchers).includes(_property))\r\n                {\r\n                    continue;\r\n                }\r\n                if(typeof data_object[_property]===\"object\" && !Array.isArray(data_object[_property]))\r\n                {\r\n                    if(typeof this[_property]!==\"object\" || this[_property]===null)\r\n                    {\r\n                        this[_property]={};\r\n                    }\r\n                    for(let _sub_property in data_object[_property])\r\n                    {\r\n                        this.$set(this[_property],[_sub_property],data_object[_property][_sub_property]);\r\n                    }\r\n                }\r\n                else if(Array.isArray(data_object[_property]))\r\n                {\r\n                    this.$set(this,_property,data_object[_property]);\r\n                }\r\n                else\r\n                {\r\n                    this.$set(this,_property,data_object[_property]);\r\n                }\r\n            }\r\n            this.$forceUpdate();\r\n        },\r\n        updateComponentName(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/mixins/component_computed_mixin.js","webpack:///./src/components/mek_projectile/mek_projectile-main.vue?7fd5","webpack:///src/components/mek_projectile/mek_projectile-main.vue","webpack:///./src/components/mek_projectile/mek_projectile-main.vue?1cd6","webpack:///./src/components/mek_projectile/mek_projectile-main.vue","webpack:///./src/mixins/component_methods_mixin.js"],"names":["__webpack_exports__","computed","space_cost","this","round","raw_space","efficiencies","space","modifier","cost_multiplier","multi","cost_multipliers","weight","damage_capacity","feature_list","feature_array","reduce","_string","_val","_index","feature","newComponent","selectedComponent","JSON","parse","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","$store","getters","uuid","component_category","component_type","ingest_data","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","width","attrs","new-component","component-name","component_name","projectile_name","component-changed","component_changed","on","update-component-name","updateComponentName","damage","selected_damage","update-damage","updateDamage","accuracy","selected_accuracy","update-accuracy","updateAccuracy","burst-value","selected_burst_value","update-burst-value","updateBurstValue","multi-feed","selected_multi_feed","update-multi-feed","updateMultiFeed","align-self","range-mod","selected_range_mod","base-range","range","update-range-mod","updateRangeMod","feature-array","burst_value","update-feature","updateFeature","space_efficiency","update-efficiencies","updateEfficiencies","cols","rows","slot","_v","_s","range_mod","max-width","margin-left","cost","font-weight","save-reset-component","componentSaveReset","staticRenderFns","mek_projectile_mainvue_type_script_lang_js_","name","props","mixins","selected_item_mixin","utility_mixin","component_computed_mixin","component_methods_mixin","components","mek-projectile-damage","__webpack_require__","e","then","bind","mek-projectile-accuracy","mek-projectile-multi-feed","mek-projectile-range-mod","mek-projectile-burst-value","mek-projectile-feature","mek-space-efficiency","mek-component-name","mek-save-reset-component","mek-component-stats","data","obj","original_component","feeds","multi_feed","methods","_name","_data","$set","_damage","_accuracy","_multi_feed","_burst_value","_range_mod","_featureArray","_multi","_action","action","commit","output_data","feeds1","_this","return_data","create_uuid","stringify_default","final_damage","$nextTick","_data_object","_this2","alertMessage","universal_ingest_data","subtotal_cost","length","replace","mek_projectile_mek_projectile_mainvue_type_script_lang_js_","component","Object","componentNormalizer","_alertMessage","_property","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_5___default","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_keys__WEBPACK_IMPORTED_MODULE_2___default","_computedWatchers","includes","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0___default","_sub_property","$forceUpdate"],"mappings":"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","file":"js/mek_projectile-main.fa0f2231.js","sourcesContent":["export default\r\n{\r\n    computed:\r\n    {\r\n        space_cost()\r\n        {\r\n            return this.round(this.raw_space - this.efficiencies.space.modifier,2);\r\n        },\r\n        cost_multiplier()\r\n        {\r\n            let cost_multiplier=1;\r\n            for(let multi in this.cost_multipliers)\r\n            {\r\n                cost_multiplier*=this.cost_multipliers[multi];\r\n            }\r\n            return this.round(cost_multiplier,2);\r\n        },\r\n        weight()\r\n        {\r\n            return this.round((this.damage_capacity / 2),2);\r\n        },\r\n        feature_list()\r\n        {\r\n            if(typeof this.feature_array===\"undefined\")\r\n            {\r\n                return \"\";\r\n            }\r\n            return this.feature_array.reduce(function(_string, _val, _index)\r\n            {\r\n                _string+=_index>0 ? \", \" : \"\";\r\n                _string+=_val.feature;\r\n                return _string;\r\n            },\"\");\r\n        },\r\n        newComponent()\r\n        {//responsible for ingesting data from the store\r\n            let selectedComponent=JSON.parse(JSON.stringify(this.$store.getters.selectedComponent));\r\n\r\n            if(typeof selectedComponent!==\"undefined\" && selectedComponent!==null)\r\n            {\r\n                if(selectedComponent.uuid!==this.uuid \r\n                    && selectedComponent.component_category==this.component_category\r\n                    && selectedComponent.component_type==this.component_type)\r\n                {\r\n                    this.ingest_data(selectedComponent);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n    }\r\n};","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"mek-inline-flex-col\",staticStyle:{\"width\":\"100%\"}},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.projectile_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-projectile-damage',{attrs:{\"damage\":_vm.selected_damage},on:{\"update-damage\":_vm.updateDamage}}),_c('mek-projectile-accuracy',{attrs:{\"accuracy\":_vm.selected_accuracy},on:{\"update-accuracy\":_vm.updateAccuracy}}),_c('mek-projectile-burst-value',{attrs:{\"burst-value\":_vm.selected_burst_value},on:{\"update-burst-value\":_vm.updateBurstValue}}),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('div',{staticClass:\"mek-inline-flex-col\"},[_c('mek-projectile-multi-feed',{attrs:{\"multi-feed\":_vm.selected_multi_feed},on:{\"update-multi-feed\":_vm.updateMultiFeed}})],1),_c('mek-projectile-range-mod',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"range-mod\":_vm.selected_range_mod,\"base-range\":_vm.selected_damage.range},on:{\"update-range-mod\":_vm.updateRangeMod}}),_c('mek-projectile-feature',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"feature-array\":_vm.feature_array,\"burst-value\":_vm.selected_burst_value.burst_value},on:{\"update-feature\":_vm.updateFeature}}),_c('mek-space-efficiency',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"space_efficiency\":_vm.efficiencies.space,\"raw_space\":_vm.raw_space},on:{\"update-efficiencies\":_vm.updateEfficiencies}})],1)],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":5}},[_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Kills: \"+_vm._s(_vm.selected_damage.damage)+\" K\")]),_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_vm._v(\"Damage Capacity: \"+_vm._s(_vm.damage_capacity)+\" K\")]),_c('div',{attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Final Range: \"+_vm._s(_vm.selected_damage.range * _vm.selected_range_mod.range_mod))]),_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Feature(s):\"),_c('div',{staticStyle:{\"max-width\":\"150px\",\"margin-left\":\"10px\"}},[_vm._v(_vm._s(_vm.feature_list))])]),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.raw_space))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Space: \"+_vm._s(_vm.space_cost))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.round(_vm.weight,2))+\" tons\")]),_c('div',{attrs:{\"slot\":\"col3-row4\"},slot:\"col3-row4\"},[_vm._v(\" \")]),_c('div',{attrs:{\"slot\":\"col3-row5\"},slot:\"col3-row5\"},[_vm._v(\"Standard Ammo Cost: \"+_vm._s(_vm.round(_vm.cost*0.01,2))+\"/shot\")]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.selected_damage.cost))]),_c('div',{attrs:{\"slot\":\"col4-row2\"},slot:\"col4-row2\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.cost_multiplier))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row3\"},slot:\"col4-row3\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <span class=\"mek-inline-flex-col\" style=\"width:100%;\">\r\n        <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||projectile_name\"\r\n            :component-changed=\"component_changed\"\r\n            @update-component-name=\"updateComponentName\"\r\n        ></mek-component-name>\r\n        \r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-projectile-damage @update-damage=\"updateDamage\" :damage=\"selected_damage\"></mek-projectile-damage>\r\n            <mek-projectile-accuracy \r\n                @update-accuracy=\"updateAccuracy\" \r\n                :accuracy=\"selected_accuracy\"\r\n            ></mek-projectile-accuracy>\r\n            <mek-projectile-burst-value \r\n                    @update-burst-value=\"updateBurstValue\" \r\n                    :burst-value=\"selected_burst_value\"\r\n                ></mek-projectile-burst-value>\r\n            <div class=\"mek-inline-flex-row\">\r\n                <div class=\"mek-inline-flex-col\">\r\n                    <mek-projectile-multi-feed \r\n                        @update-multi-feed=\"updateMultiFeed\" \r\n                        :multi-feed=\"selected_multi_feed\"\r\n                    ></mek-projectile-multi-feed>\r\n                    <!-- not using for now\r\n                    mek-projectile-mount-type \r\n                        @update-mount-type=\"updateMountType\" \r\n                        :mount-type=\"selected_mount_type\"\r\n                    ></mek-projectile-mount-type-->\r\n                </div>\r\n                <mek-projectile-range-mod style=\"align-self:baseline;\"\r\n                    @update-range-mod=\"updateRangeMod\"\r\n                    :range-mod=\"selected_range_mod\"\r\n                    :base-range=\"selected_damage.range\"\r\n                ></mek-projectile-range-mod>\r\n                <mek-projectile-feature style=\"align-self:baseline;\"\r\n                        @update-feature=\"updateFeature\"\r\n                        :feature-array=\"feature_array\"\r\n                        :burst-value=\"selected_burst_value.burst_value\"\r\n                    ></mek-projectile-feature>\r\n                <mek-space-efficiency style=\"align-self:baseline;\"\r\n                    :space_efficiency=\"efficiencies.space\"\r\n                    :raw_space=\"raw_space\"\r\n                    @update-efficiencies=\"updateEfficiencies\"\r\n                ></mek-space-efficiency>\r\n            </div>                \r\n        </div>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-component-stats :cols=\"4\" :rows=\"5\">\r\n                <div slot=\"col1-row1\">Kills: {{selected_damage.damage}} K</div>\r\n                <div slot=\"col1-row2\">Damage Capacity: {{damage_capacity}} K</div>\r\n                <div slot=\"col1-row3\">Final Range: {{selected_damage.range * selected_range_mod.range_mod}}</div>\r\n\r\n                <div slot=\"col2-row1\">Feature(s):<div style=\"max-width:150px;margin-left:10px;\">{{feature_list}}</div></div>\r\n\r\n                <div slot=\"col3-row1\">Base Space: {{raw_space}}</div>\r\n                <div slot=\"col3-row2\">Space: {{space_cost}}</div>\r\n                <div slot=\"col3-row3\">Weight: {{round(weight,2)}} tons</div>\r\n                <div slot=\"col3-row4\">&nbsp;</div>\r\n                <div slot=\"col3-row5\">Standard Ammo Cost: {{round(cost*0.01,2)}}/shot</div>\r\n\r\n                <div slot=\"col4-row1\">Base Cost: {{selected_damage.cost}}</div>\r\n                <div slot=\"col4-row2\">Multiplier: x{{cost_multiplier}}</div>\r\n                <div slot=\"col4-row3\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n            </mek-component-stats>\r\n            <mek-save-reset-component @save-reset-component=\"componentSaveReset\"></mek-save-reset-component>\r\n        </div>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\nimport selected_item_mixin from \"../../mixins/selected_item_mixin\";\r\nimport utility_mixin from \"../../mixins/utility_mixin\";\r\nimport component_computed_mixin from \"../../mixins/component_computed_mixin\";\r\nimport component_methods_mixin from \"../../mixins/component_methods_mixin\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_projectile\",\r\n    props:[],\r\n    mixins:[selected_item_mixin, utility_mixin, component_computed_mixin,component_methods_mixin],\r\n    components:\r\n    {\r\n        \"mek-projectile-damage\":()=>import(\"./subcomponents/mek_projectile-damage.vue\"),\r\n        \"mek-projectile-accuracy\":()=>import(\"./subcomponents/mek_projectile-accuracy.vue\"),\r\n        \"mek-projectile-multi-feed\":()=>import(\"./subcomponents/mek_projectile-multi-feed.vue\"),\r\n        \"mek-projectile-range-mod\":()=>import(\"./subcomponents/mek_projectile-range-mod.vue\"),\r\n        \"mek-projectile-burst-value\":()=>import(\"./subcomponents/mek_projectile-burst-value.vue\"),\r\n        \"mek-projectile-feature\":()=>import(\"./subcomponents/mek_projectile-feature.vue\"),\r\n        //\"mek-projectile-mount-type\":mek_projectile_mount_type,\r\n\r\n        \"mek-space-efficiency\":()=>import(\"../universal/mek-space-efficiency.vue\"),\r\n        \"mek-component-name\":()=>import(\"../universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>import(\"../universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>import(\"../universal/mek_component-stats.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.uuid=null;\r\n        obj.component_name=null;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"projectile\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.selected_damage={damage:1,cost:1,range:3};\r\n        obj.selected_accuracy={accuracy:0,cost:1};\r\n        obj.selected_range_mod={range_mod:1,cost:1};\r\n        obj.selected_multi_feed={feeds:1,cost:1};\r\n        obj.selected_burst_value={burst_value:1,cost:1};\r\n\r\n        obj.damage_capacity=1;\r\n\r\n        obj.feature_array=[];\r\n\r\n        obj.efficiencies={};\r\n        obj.efficiencies.space={};\r\n        obj.efficiencies.space.cost=0;\r\n        obj.efficiencies.space.modifier=0;\r\n\r\n        obj.cost_multipliers={};\r\n        obj.cost_multipliers.accuracy=1;\r\n        obj.cost_multipliers.feature=1;\r\n        obj.cost_multipliers.multi_feed=1;\r\n        obj.cost_multipliers.burst_value=1;\r\n        obj.cost_multipliers.range_mod=1;\r\n\r\n        //obj.selected_mount_type={mount_type:\"Servo-Mounted\"};\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        updateComponentName(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        updateEfficiencies(_data)\r\n        {\r\n            this.$set(this.efficiencies,\"space\",_data);\r\n            this.component_changed=true;\r\n        },\r\n        updateDamage(_damage)\r\n        {\r\n            this.selected_damage.damage=_damage.damage;\r\n            this.selected_damage.cost=_damage.cost;\r\n            this.selected_damage.range=_damage.range;\r\n            this.component_changed=true;\r\n            this.damage_capacity=_damage.damage;\r\n        },\r\n        updateAccuracy(_accuracy)\r\n        {\r\n            this.selected_accuracy.accuracy=_accuracy.accuracy;\r\n            this.selected_accuracy.cost=_accuracy.cost;\r\n            this.cost_multipliers.accuracy=_accuracy.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateMultiFeed(_multi_feed)\r\n        {\r\n            this.selected_multi_feed.feeds=_multi_feed.feeds;\r\n            this.selected_multi_feed.cost=_multi_feed.cost;\r\n            this.cost_multipliers.multi_feed=_multi_feed.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateBurstValue(_burst_value)\r\n        {\r\n            this.selected_burst_value.burst_value=_burst_value.burst_value;\r\n            this.selected_burst_value.cost=_burst_value.cost;\r\n            this.cost_multipliers.burst_value=_burst_value.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateRangeMod(_range_mod)\r\n        {\r\n            this.selected_range_mod.range_mod=_range_mod.range_mod;\r\n            this.selected_range_mod.cost=_range_mod.cost;\r\n            this.cost_multipliers.range_mod=_range_mod.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateFeature(_featureArray)\r\n        {\r\n            this.$set(this,\"feature_array\",_featureArray);\r\n            this.cost_multipliers.feature=this.feature_array.reduce((_multi,_val)=>{return _multi*=_val.cost},1);\r\n            this.projectile_name;\r\n        },\r\n        /* updateMountType(_mountType)\r\n        {\r\n            this.$set(this,\"selected_mount_type\",_mountType);\r\n            this.projectile_name;\r\n        }, */\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"clear\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                    }\r\n                    break;\r\n                case \"clear\":\r\n                    this.uuid=null;\r\n                    this.efficiencies.space.modifier=0;\r\n                    this.component_name=null;\r\n                    this.selected_damage.damage=1;\r\n                    this.selected_accuracy.accuracy=1;\r\n                    this.selected_range_mod.range_mod=1;\r\n                    this.selected_multi_feed.feeds1;\r\n                    this.selected_burst_value.burst_value=1;\r\n                    //this.mount_type.mount_type=\"Servo-Mounted\";\r\n                    this.$set(this,\"feature_array\",[]);\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        },\r\n        output_data()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"projectile\";\r\n            return_data.component_name=this.component_name===null?this.projectile_name:this.component_name;\r\n\r\n            return_data.cost_multipliers=JSON.parse(JSON.stringify(this.cost_multipliers));\r\n            return_data.efficiencies=JSON.parse(JSON.stringify(this.efficiencies));\r\n\r\n            return_data.selected_damage=JSON.parse(JSON.stringify(this.selected_damage));\r\n            return_data.selected_accuracy=JSON.parse(JSON.stringify(this.selected_accuracy));\r\n            return_data.feature_array=JSON.parse(JSON.stringify(this.feature_array));\r\n            return_data.selected_range_mod=JSON.parse(JSON.stringify(this.selected_range_mod));\r\n            return_data.selected_multi_feed=JSON.parse(JSON.stringify(this.selected_multi_feed));\r\n            return_data.selected_burst_value=JSON.parse(JSON.stringify(this.selected_burst_value));\r\n            //return_data.selected_mount_type=JSON.parse(JSON.stringify(this.selected_mount_type));\r\n\r\n            return_data.cost=this.cost;\r\n            return_data.cost_multiplier=this.cost_multiplier;\r\n            return_data.weight=this.weight;\r\n            return_data.final_damage=this.final_damage;\r\n            return_data.damage_capacity=this.damage_capacity;\r\n\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return return_data;\r\n        },\r\n        ingest_data(_data_object)\r\n        {\r\n            let alertMessage=\"Projectile is not valid, resetting.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(this.component_name==this.projectile_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n        },\r\n    },\r\n    computed:\r\n    {\r\n        raw_space()\r\n        {\r\n            return this.round(this.selected_damage.cost * this.cost_multiplier,2);\r\n        },\r\n        cost:function()\r\n        {\r\n            let subtotal_cost=this.selected_damage.cost * this.cost_multiplier;\r\n            subtotal_cost += this.efficiencies.space.cost;\r\n\r\n            return this.round(subtotal_cost,2);\r\n        },\r\n        projectile_name()\r\n        {\r\n            let projectile_name=this.selected_burst_value.burst_value>1?\"Burst-\"+this.selected_burst_value.burst_value+\" \":\"\";\r\n\r\n            projectile_name=this.feature_array.reduce((_name,_val)=>\r\n            {\r\n                return _name+_val.feature+\" \";\r\n            },projectile_name);\r\n\r\n            //projectile_name=projectile_name+\" \"+this.selected_mount_type.mount_type+\" Gun\";\r\n            projectile_name=projectile_name.length>0?projectile_name+\" Gun\":\"Gun\";\r\n\r\n            return projectile_name.replace(/\\s+/g,\" \");\r\n        }\r\n    }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_projectile-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_projectile-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_projectile-main.vue?vue&type=template&id=1bad1578&\"\nimport script from \"./mek_projectile-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_projectile-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default\r\n{\r\n    methods:\r\n    {\r\n        universal_ingest_data(_data_object,_alertMessage)\r\n        {\r\n            this.original_component=JSON.stringify(_data_object);//store a copy as a JSON object for 'reset' purposes\r\n            if(_data_object===null)\r\n            {\r\n                this.componentSaveReset(\"clear\");\r\n                //generic error comment\r\n                this.$store.commit(\"alertMessage\",_alertMessage);\r\n            }\r\n\r\n            for(let _property in _data_object)\r\n            {//exclude computed properties that are auto updated\r\n                if(Object.keys(this._computedWatchers).includes(_property))\r\n                {\r\n                    continue;\r\n                }\r\n                if(typeof _data_object[_property]===\"object\" && !Array.isArray(_data_object[_property]))\r\n                {\r\n                    if(typeof this[_property]!==\"object\" || this[_property]===null)\r\n                    {\r\n                        this[_property]={};\r\n                    }\r\n                    for(let _sub_property in _data_object[_property])\r\n                    {\r\n                        this.$set(this[_property],[_sub_property],_data_object[_property][_sub_property]);\r\n                    }\r\n                }\r\n                else if(Array.isArray(_data_object[_property]))\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n                else\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n            }\r\n            this.$forceUpdate();\r\n        },\r\n        updateComponentName:function(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["mek_beam_validator"],{"504c":function(module,exports,__webpack_require__){eval('var DESCRIPTORS = __webpack_require__("9e1e");\nvar getKeys = __webpack_require__("0d58");\nvar toIObject = __webpack_require__("6821");\nvar isEnum = __webpack_require__("52a7").f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtdG8tYXJyYXkuanM/NTA0YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IsbUJBQU8sQ0FBQyxNQUFnQjtBQUMxQyxjQUFjLG1CQUFPLENBQUMsTUFBZ0I7QUFDdEMsZ0JBQWdCLG1CQUFPLENBQUMsTUFBZTtBQUN2QyxhQUFhLG1CQUFPLENBQUMsTUFBZTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjUwNGMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciBpc0VudW0gPSByZXF1aXJlKCcuL19vYmplY3QtcGllJykuZjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGlzRW50cmllcykge1xuICByZXR1cm4gZnVuY3Rpb24gKGl0KSB7XG4gICAgdmFyIE8gPSB0b0lPYmplY3QoaXQpO1xuICAgIHZhciBrZXlzID0gZ2V0S2V5cyhPKTtcbiAgICB2YXIgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChsZW5ndGggPiBpKSB7XG4gICAgICBrZXkgPSBrZXlzW2krK107XG4gICAgICBpZiAoIURFU0NSSVBUT1JTIHx8IGlzRW51bS5jYWxsKE8sIGtleSkpIHtcbiAgICAgICAgcmVzdWx0LnB1c2goaXNFbnRyaWVzID8gW2tleSwgT1trZXldXSA6IE9ba2V5XSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///504c\n')},c84c:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateComponent", function() { return validateComponent; });\n/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("ac6a");\n/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es7_object_entries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("ffc1");\n/* harmony import */ var core_js_modules_es7_object_entries__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_object_entries__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar validators = {};\n__webpack_require__.e(/* import() | mek_beam-accuracy-data-module */ "mek_beam-accuracy-data-module").then(__webpack_require__.bind(null, "4c09")).then(function (_module) {\n  validators.accuracy = _module.cleaned_feature;\n});\n__webpack_require__.e(/* import() | mek_beam-burst-value-data-module */ "mek_beam-burst-value-data-module").then(__webpack_require__.bind(null, "0959")).then(function (_module) {\n  validators.burst_value = _module.cleaned_feature;\n});\n__webpack_require__.e(/* import() | mek_beam-damage-data-module */ "mek_beam-damage-data-module").then(__webpack_require__.bind(null, "999d")).then(function (_module) {\n  validators.damage = _module.cleaned_feature;\n});\n__webpack_require__.e(/* import() | mek_beam-feature-data-module */ "mek_beam-feature-data-module").then(__webpack_require__.bind(null, "b8e7")).then(function (_module) {\n  validators.filter_feature = _module.filter_data_table; //filter based on burst_value\n\n  validators.feature = _module.cleaned_feature;\n});\n__webpack_require__.e(/* import() | mek_beam-range-mod-data-module */ "mek_beam-range-mod-data-module").then(__webpack_require__.bind(null, "8e68")).then(function (_module) {\n  validators.update_range_mod = _module.create_range_mod_data_table; //filter based on base_range\n\n  validators.range_mod = _module.cleaned_feature;\n});\n__webpack_require__.e(/* import() | mek_beam-shots-data-module */ "mek_beam-shots-data-module").then(__webpack_require__.bind(null, "d919")).then(function (_module) {\n  validators.update_shots = _module.filter_shots_data_table; //update based on magfed feature\n\n  validators.shots = _module.cleaned_feature;\n});\n__webpack_require__.e(/* import() | mek_beam-warm-up-data-module */ "mek_beam-warm-up-data-module").then(__webpack_require__.bind(null, "1265")).then(function (_module) {\n  validators.warm_up = _module.cleaned_feature;\n});\n__webpack_require__.e(/* import() | mek_beam-wide-angle-data-module */ "mek_beam-wide-angle-data-module").then(__webpack_require__.bind(null, "4536")).then(function (_module) {\n  validators.wide_angle = _module.cleaned_feature;\n});\n__webpack_require__.e(/* import() | mek_space-efficiency-data-module */ "mek_space-efficiency-data-module").then(__webpack_require__.bind(null, "16e1")).then(function (_module) {\n  validators.space_efficiency = _module.validate_efficiency;\n});\nvar loopValidators, updateMultipliers, round;\n__webpack_require__.e(/* import() | validator_functions */ "validator_functions").then(__webpack_require__.bind(null, "07de")).then(function (_module) {\n  loopValidators = _module.loopValidators;\n  updateMultipliers = _module.updateMultipliers;\n  round = _module.round;\n});\n\nvalidators.derived = function (_component) {\n  var cleanedComponent = _component;\n  var alerts = [];\n  var validatedData;\n  var updateList = ["selected_burst_value", "selected_accuracy", "selected_warm_up_time", "selected_wide_angle", "selected_range_mod", "feature_array", "selected_shots"]; //update cost_multipliers for components needing update\n\n  validatedData = updateMultipliers(updateList, cleanedComponent, "Mek-Beam");\n  cleanedComponent.cost_multipliers = validatedData.data;\n  alerts = alerts.concat(validatedData.alerts); //update cost_multiplier\n\n  var cost_multiplier = Object.entries(cleanedComponent.cost_multipliers).reduce(function (_multi, _val) {\n    //calc new cost_multiplier\n    return _multi * _val[1];\n  }, 1);\n  cost_multiplier = round(cost_multiplier, 2);\n\n  if (cleanedComponent.cost_multiplier != cost_multiplier) {\n    alerts.push("Mek-Beam: cost_multiplier");\n    alerts.push("**** Invalid Cost Multiplier. Correcting. ****");\n    cleanedComponent.cost_multiplier = round(cost_multiplier, 2);\n  }\n\n  var newDamageCapacity = cleanedComponent.selected_damage.damage;\n\n  if (cleanedComponent.damage_capacity != newDamageCapacity) {\n    alerts.push("Mek-Beam: damage_capacity");\n    alerts.push("**** Invalid Damage Capacity. Correcting. ****");\n    cleanedComponent.damage_capacity = newDamageCapacity;\n  }\n\n  var isFragile = cleanedComponent.feature_array.some(function (_val) {\n    return _val.feature == "Fragile";\n  });\n  var newWeight = isFragile ? 1 : newDamageCapacity / 2;\n\n  if (cleanedComponent.weight != newWeight) {\n    alerts.push("Mek-Beam: weight");\n    alerts.push("**** Invalid Weight. Correcting. ****");\n    cleanedComponent.weight = newWeight;\n  }\n\n  var magFed = cleanedComponent.feature_array.some(function (_val) {\n    return _val.feature == "Mag-Fed";\n  });\n  magFed = magFed ? 1 : 0;\n  var newCost = cleanedComponent.selected_damage.cost * cost_multiplier + cleanedComponent.efficiencies.space.cost + magFed;\n  newCost = round(newCost, 2);\n\n  if (cleanedComponent.cost != newCost) {\n    alerts.push("Mek-Beam: cost");\n    alerts.push("**** Invalid Cost. Correcting. ****");\n    cleanedComponent.cost = newCost;\n  }\n\n  return {\n    data: cleanedComponent,\n    alerts: alerts\n  };\n};\n\nvar validateComponent = function validateComponent(_component) {\n  var cleanedComponent = _component;\n  var validatedData;\n  var loopAlerts;\n  var alerts = []; //loop thru independent validations\n\n  var componentsToValidate = [{\n    validator: validators.damage,\n    pkey: "damage",\n    component_prop: "selected_damage"\n  }, {\n    validator: validators.burst_value,\n    pkey: "burst_value",\n    component_prop: "selected_burst_value"\n  }, {\n    validator: validators.accuracy,\n    pkey: "accuracy",\n    component_prop: \'selected_accuracy\'\n  }, {\n    validator: validators.warm_up,\n    pkey: "time",\n    component_prop: \'selected_warm_up_time\'\n  }, {\n    validator: validators.wide_angle,\n    pkey: "angle",\n    component_prop: \'selected_wide_angle\'\n  }];\n\n  var _loopValidators = loopValidators(componentsToValidate, cleanedComponent);\n\n  cleanedComponent = _loopValidators.cleanedComponent;\n  loopAlerts = _loopValidators.loopAlerts;\n  alerts = alerts.concat(loopAlerts); //update range_mod table\n\n  validators.update_range_mod(cleanedComponent.selected_damage.range); //update feature table\n\n  validators.filter_feature(cleanedComponent.selected_burst_value.burst_value); //extract if Mag-Fed\n\n  var magFed = cleanedComponent.feature_array.some(function (_val) {\n    return _val.feature == "Mag-Fed";\n  }); //update shots table\n\n  validators.update_shots(magFed); //loop thru dependent validations\n\n  componentsToValidate = [{\n    validator: validators.range_mod,\n    pkey: "range_mod",\n    component_prop: "selected_range_mod"\n  }, {\n    validator: validators.feature,\n    pkey: "feature",\n    component_prop: "feature_array"\n  }, {\n    validator: validators.shots,\n    pkey: "shots",\n    component_prop: \'selected_shots\'\n  }];\n\n  var _loopValidators2 = loopValidators(componentsToValidate, cleanedComponent);\n\n  cleanedComponent = _loopValidators2.cleanedComponent;\n  loopAlerts = _loopValidators2.loopAlerts;\n  alerts = alerts.concat(loopAlerts); //update derived values, and cost_multi\n\n  validatedData = validators.derived(cleanedComponent);\n  cleanedComponent = validatedData.data;\n  alerts = alerts.concat(validatedData.alerts);\n  var base_cost = cleanedComponent.selected_damage.cost * cleanedComponent.cost_multiplier; //validate space efficiency\n\n  validatedData = validators.space_efficiency(cleanedComponent.efficiencies.space, base_cost, "Mek-Beam");\n  alerts = alerts.concat(validatedData.alerts);\n  cleanedComponent.efficiencies.space = validatedData.data;\n  return {\n    data: cleanedComponent,\n    alerts: alerts\n  };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///c84c\n')},ffc1:function(module,exports,__webpack_require__){eval('// https://github.com/tc39/proposal-object-values-entries\nvar $export = __webpack_require__("5ca1");\nvar $entries = __webpack_require__("504c")(true);\n\n$export($export.S, \'Object\', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5vYmplY3QuZW50cmllcy5qcz9mZmMxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLE1BQVc7QUFDakMsZUFBZSxtQkFBTyxDQUFDLE1BQW9COztBQUUzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJmaWxlIjoiZmZjMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLW9iamVjdC12YWx1ZXMtZW50cmllc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZW50cmllcyA9IHJlcXVpcmUoJy4vX29iamVjdC10by1hcnJheScpKHRydWUpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHtcbiAgZW50cmllczogZnVuY3Rpb24gZW50cmllcyhpdCkge1xuICAgIHJldHVybiAkZW50cmllcyhpdCk7XG4gIH1cbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///ffc1\n')}}]);
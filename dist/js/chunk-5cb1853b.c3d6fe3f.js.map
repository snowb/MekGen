{"version":3,"sources":["webpack:///./src/mixins/servo_classes_mixin.js","webpack:///./src/mixins/component_computed_mixin.js","webpack:///./src/components/mek_servo/mek_servo-main.vue?bddc","webpack:///src/components/mek_servo/mek_servo-main.vue","webpack:///./src/components/mek_servo/mek_servo-main.vue?716b","webpack:///./src/components/mek_servo/mek_servo-main.vue","webpack:///./src/mixins/component_methods_mixin.js"],"names":["__webpack_exports__","data","servo_classes","code","id","name","computed","space_cost","this","round","raw_space","efficiencies","space","modifier","cost_multiplier","multi","cost_multipliers","weight","damage_capacity","feature_list","feature_array","reduce","_string","_val","_index","feature","newComponent","selectedComponent","JSON","parse","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","$store","getters","uuid","component_category","component_type","ingest_data","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","width","attrs","new-component","component-name","component_name","servo_name","component-changed","component_changed","on","update-component-name","updateComponentName","align-self","servo-type","selected_servo_type","update-servo-type","updateServoType","base_kills","selected_servo_class","kills","kills_modifier","kills_space_trade","space_modifier","base_space","update-extra-space","updateExtraSpace","type","servo-class","update-servo-class","updateServoClass","armor","selected_armor","max-armor","update-armor","updateArmor","cost","armor-type","selected_armor_type","update-armor-type","updateArmorType","_e","absorption","selected_absorption","update-absorption","updateAbsorption","cols","rows","slot","_v","_s","total_kills","stopping_power","final_stopping_power","padding-left","damage_coefficient","is_arm","is_leg","damage_bonus","throw_range","available_space","base_cost","font-weight","save-reset-component","componentSaveReset","staticRenderFns","mek_servo_mainvue_type_script_lang_js_","props","mixins","servo_classes_mixin","selected_item_mixin","utility_mixin","component_methods_mixin","component_computed_mixin","components","mek-servo-type","__webpack_require__","e","then","bind","mek-servo-class","mek-servo-kills-space-trade","mek-component-name","mek-save-reset-component","mek-component-stats","mek-armor","mek-armor-type","mek-energy-absorbing-armor","obj","original_component","armor_type","armor_penalty","extra_kills","methods","_servo_type","$set","_servo_class","_armor","_armor_type","stringify_default","_absorption","_kills_space_trade","_data_object","_this","alertMessage","universal_ingest_data","shield_name","$nextTick","output_data","_this2","return_data","create_uuid","_action","action","commit","servo_kills","kills_space_trade_sp_loss","toLowerCase","mek_servo_mek_servo_mainvue_type_script_lang_js_","component","Object","componentNormalizer","_alertMessage","_property","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_5___default","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_keys__WEBPACK_IMPORTED_MODULE_2___default","_computedWatchers","includes","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0___default","_sub_property","$forceUpdate","_name"],"mappings":"kHACAA,EAAA,MACIC,KAAK,WAED,MAAO,CACHC,cACI,CACI,CAACC,KAAK,EAAEC,GAAG,KAAKC,KAAK,cACrB,CAACF,KAAK,EAAEC,GAAG,KAAKC,KAAK,eACrB,CAACF,KAAK,EAAEC,GAAG,MAAMC,KAAK,WACtB,CAACF,KAAK,EAAEC,GAAG,KAAKC,KAAK,kBACrB,CAACF,KAAK,EAAEC,GAAG,KAAKC,KAAK,iBACrB,CAACF,KAAK,EAAEC,GAAG,KAAKC,KAAK,gBACrB,CAACF,KAAK,EAAEC,GAAG,KAAKC,KAAK,eACrB,CAACF,KAAK,EAAEC,GAAG,KAAKC,KAAK,gBACrB,CAACF,KAAK,EAAEC,GAAG,KAAKC,KAAK,iBACrB,CAACF,KAAK,GAAGC,GAAG,KAAKC,KAAK,eACtB,CAACF,KAAK,GAAGC,GAAG,MAAMC,KAAK,gFChB3CL,EAAA,MACIM,SACA,CACIC,WADJ,WAGQ,OAAOC,KAAKC,MAAMD,KAAKE,UAAYF,KAAKG,aAAaC,MAAMC,SAAS,IAExEC,gBALJ,WAOQ,IAAIA,EAAgB,EACpB,IAAI,IAAIC,KAASP,KAAKQ,iBAElBF,GAAiBN,KAAKQ,iBAAiBD,GAE3C,OAAOP,KAAKC,MAAMK,EAAgB,IAEtCG,OAdJ,WAgBQ,OAAOT,KAAKC,MAAOD,KAAKU,gBAAkB,EAAG,IAEjDC,aAlBJ,WAoBQ,MAA+B,qBAArBX,KAAKY,cAEJ,GAEJZ,KAAKY,cAAcC,OAAO,SAASC,EAASC,EAAMC,GAIrD,OAFAF,GAASE,EAAO,EAAI,KAAO,GAC3BF,GAASC,EAAKE,QACPH,GACT,KAENI,aA/BJ,WAiCQ,IAAIC,EAAkBC,KAAKC,MAAMC,IAAetB,KAAKuB,OAAOC,QAAQL,oBAEpE,MAA8B,qBAApBA,GAAuD,OAApBA,IAEtCA,EAAkBM,OAAOzB,KAAKyB,MAC1BN,EAAkBO,oBAAoB1B,KAAK0B,oBAC3CP,EAAkBQ,gBAAgB3B,KAAK2B,gBAE1C3B,KAAK4B,YAAYT,IAEd,gDC9CvB,IAAAU,EAAA,WAA0B,IAAAC,EAAA9B,KAAa+B,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,QAAkBE,YAAA,sBAAAC,YAAA,CAA+CC,MAAA,SAAgB,CAAAJ,EAAA,sBAA2BK,MAAA,CAAOC,gBAAAT,EAAAZ,aAAAsB,iBAAAV,EAAAW,gBAAAX,EAAAY,WAAAC,oBAAAb,EAAAc,mBAA+HC,GAAA,CAAKC,wBAAAhB,EAAAiB,uBAAiDd,EAAA,QAAaE,YAAA,uBAAkC,CAAAF,EAAA,QAAaE,YAAA,uBAAkC,CAAAF,EAAA,kBAAuBG,YAAA,CAAaY,aAAA,cAA0BV,MAAA,CAAQW,aAAAnB,EAAAoB,qBAAqCL,GAAA,CAAKM,oBAAArB,EAAAsB,mBAAyCnB,EAAA,+BAAoCG,YAAA,CAAaY,aAAA,YAAwBV,MAAA,CAAQe,WAAAvB,EAAAwB,qBAAAC,MAAAC,eAAA1B,EAAA2B,kBAAAD,eAAAE,eAAA5B,EAAA2B,kBAAAC,eAAAC,WAAA7B,EAAAwB,qBAAAlD,OAAoMyC,GAAA,CAAKe,qBAAA9B,EAAA+B,qBAA2C,GAAA5B,EAAA,mBAA4BK,MAAA,CAAOW,aAAAnB,EAAAoB,oBAAAY,KAAAC,cAAAjC,EAAAwB,sBAAiFT,GAAA,CAAKmB,qBAAAlC,EAAAmC,oBAA2ChC,EAAA,aAAkBK,MAAA,CAAO4B,MAAApC,EAAAqC,eAAAC,YAAAtC,EAAAwB,qBAAA3D,KAAA,GAAuEkD,GAAA,CAAKwB,eAAAvC,EAAAwC,eAAgCrC,EAAA,QAAaE,YAAA,uBAAkC,IAAAL,EAAAqC,eAAAI,KAAAtC,EAAA,kBAAoDK,MAAA,CAAOkC,aAAA1C,EAAA2C,qBAAqC5B,GAAA,CAAK6B,oBAAA5C,EAAA6C,mBAAyC7C,EAAA8C,KAAA,GAAA9C,EAAAqC,eAAAI,KAAAtC,EAAA,8BAAyEK,MAAA,CAAOuC,WAAA/C,EAAAgD,qBAAqCjC,GAAA,CAAKkC,oBAAAjD,EAAAkD,oBAA0ClD,EAAA8C,MAAA,OAAA3C,EAAA,OAA6BE,YAAA,uBAAkC,CAAAF,EAAA,uBAA4BK,MAAA,CAAO2C,KAAA,EAAAC,KAAA,IAAmB,CAAAjD,EAAA,OAAYK,MAAA,CAAO6C,KAAA,aAAmBA,KAAA,aAAkB,CAAArD,EAAAsD,GAAA,eAAAtD,EAAAuD,GAAAvD,EAAAwB,qBAAAC,UAAAtB,EAAA,OAA4EK,MAAA,CAAO6C,KAAA,aAAmBA,KAAA,aAAkB,CAAArD,EAAAsD,GAAA,gBAAAtD,EAAAuD,GAAAvD,EAAAwD,gBAAA,GAAAxD,EAAAqC,eAAAI,KAAAtC,EAAA,OAA2FK,MAAA,CAAO6C,KAAA,aAAmBA,KAAA,aAAkB,CAAArD,EAAAsD,GAAA,8BAAAtD,EAAAuD,GAAAvD,EAAA7B,MAAA6B,EAAAqC,eAAAoB,eAAA,0BAAAtD,EAAA,MAAAH,EAAAsD,GAAA,yBAAAtD,EAAAuD,GAAAvD,EAAA7B,MAAA6B,EAAA0D,qBAAA,wBAAA1D,EAAA8C,KAAA,GAAA9C,EAAAqC,eAAAI,KAAAtC,EAAA,OAA+QK,MAAA,CAAO6C,KAAA,aAAmBA,KAAA,aAAkB,CAAArD,EAAAsD,GAAA,eAAAtD,EAAAuD,GAAAvD,EAAA2C,oBAAAX,SAAAhC,EAAA8C,KAAA,GAAA9C,EAAAqC,eAAAI,KAAAtC,EAAA,OAAgHG,YAAA,CAAaqD,eAAA,QAAsBnD,MAAA,CAAQ6C,KAAA,aAAmBA,KAAA,aAAkB,CAAArD,EAAAsD,GAAA,uBAAAtD,EAAAuD,GAAAvD,EAAA2C,oBAAAiB,uBAAA5D,EAAA8C,KAAA,GAAA9C,EAAAgD,oBAAAP,KAAAtC,EAAA,OAA2IK,MAAA,CAAO6C,KAAA,aAAmBA,KAAA,aAAkB,CAAArD,EAAAsD,GAAA,eAAAtD,EAAAuD,GAAA,IAAAvD,EAAAgD,oBAAAD,YAAA,OAAA/C,EAAA8C,KAAA9C,EAAA6D,OAAA7D,EAAA8D,OAAA3D,EAAA,OAA2HK,MAAA,CAAO6C,KAAA,aAAmBA,KAAA,aAAkB,CAAArD,EAAAsD,GAAA,iBAAAtD,EAAAuD,GAAAvD,EAAAwB,qBAAAuC,iBAAA/D,EAAA8C,KAAA9C,EAAA,OAAAG,EAAA,OAA2GK,MAAA,CAAO6C,KAAA,aAAmBA,KAAA,aAAkB,CAAArD,EAAAsD,GAAA,gBAAAtD,EAAAuD,GAAAvD,EAAAwB,qBAAAwC,gBAAAhE,EAAA8C,KAAA3C,EAAA,OAA4FK,MAAA,CAAO6C,KAAA,aAAmBA,KAAA,aAAkB,CAAArD,EAAAsD,GAAA,eAAAtD,EAAAuD,GAAAvD,EAAAwB,qBAAAlD,UAAA6B,EAAA,OAA4EK,MAAA,CAAO6C,KAAA,aAAmBA,KAAA,aAAkB,CAAArD,EAAAsD,GAAA,oBAAAtD,EAAAuD,GAAAvD,EAAAiE,oBAAA9D,EAAA,OAAsEK,MAAA,CAAO6C,KAAA,aAAmBA,KAAA,aAAkB,CAAArD,EAAAsD,GAAA,WAAAtD,EAAAuD,GAAAvD,EAAArB,QAAA,WAAAwB,EAAA,OAA4DK,MAAA,CAAO6C,KAAA,aAAmBA,KAAA,aAAkB,CAAArD,EAAAsD,GAAA,cAAAtD,EAAAuD,GAAAvD,EAAAkE,cAAA/D,EAAA,OAA0DK,MAAA,CAAO6C,KAAA,aAAmBA,KAAA,aAAkB,CAAArD,EAAAsD,GAAA,gBAAAtD,EAAAuD,GAAAvD,EAAAxB,oBAAA2B,EAAA,OAAkEG,YAAA,CAAa6D,cAAA,QAAqB3D,MAAA,CAAQ6C,KAAA,aAAmBA,KAAA,aAAkB,CAAArD,EAAAsD,GAAA,eAAAtD,EAAAuD,GAAAvD,EAAAyC,WAAAtC,EAAA,4BAA6EY,GAAA,CAAIqD,uBAAApE,EAAAqE,uBAA+C,QACpzHC,EAAA,oFCoEAC,EAAA,CACAxG,KAAA,YACAyG,MAAA,GACAC,OACA,CACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,MAEAC,WACA,CACAC,iBAAA,kBAAAC,EAAAC,EAAA,kBAAAC,KAAAF,EAAAG,KAAA,eACAC,kBAAA,kBAAAJ,EAAAC,EAAA,kBAAAC,KAAAF,EAAAG,KAAA,eACAE,8BAAA,kBAAAL,EAAAC,EAAA,kBAAAC,KAAAF,EAAAG,KAAA,eAEAG,qBAAA,kBAAAN,EAAAC,EAAA,sBAAAC,KAAAF,EAAAG,KAAA,eACAI,2BAAA,kBAAAP,EAAAC,EAAA,4BAAAC,KAAAF,EAAAG,KAAA,eACAK,sBAAA,kBAAAR,EAAAC,EAAA,uBAAAC,KAAAF,EAAAG,KAAA,eAEAM,YAAA,kBAAAT,EAAAC,EAAA,kBAAAC,KAAAF,EAAAG,KAAA,eACAO,iBAAA,kBAAAV,EAAAC,EAAA,kBAAAC,KAAAF,EAAAG,KAAA,eACAQ,6BAAA,kBAAAX,EAAAC,EAAA,kBAAAC,KAAAF,EAAAG,KAAA,gBAGAzH,KAAA,WAEA,IAAAkI,EAAA,CACAlG,KAAA,KACAgB,eAAA,KACAf,mBAAA,YACAC,eAAA,QACAiG,mBAAA,KACAhF,mBAAA,EAEAM,oBAAA,CAAAY,KAAA,SACAR,qBAAA,CAAA3D,KAAA,EAAAE,KAAA,aAAAO,MAAA,EAAAmE,KAAA,EAAAhB,MAAA,GAEA/C,iBAAA,GAEA2D,eAAA,CAAAtE,KAAA,OAAA0E,KAAA,EAAAgB,eAAA,GAEAd,oBAAA,CAAAX,KAAA,WAAA4B,mBAAA,EAAAnB,KAAA,IAeA,OAdAoD,EAAAnH,iBAAAqH,WAAA,EAEAF,EAAA7C,oBAAA,CAAAD,WAAA,EAAAN,KAAA,EAAAuD,cAAA,GACAH,EAAAnH,iBAAAqE,WAAA,EAEA8C,EAAAlE,kBAAA,GACAkE,EAAAlE,kBAAAC,eAAA,EACAiE,EAAAlE,kBAAAD,eAAA,EACAmE,EAAAlE,kBAAAc,KAAA,EAEAoD,EAAAI,YAAA,GACAJ,EAAAI,YAAAxE,MAAA,EACAoE,EAAAI,YAAAxD,KAAA,EAEAoD,GAEAK,QACA,CACA5E,gBADA,SACA6E,GAEAjI,KAAA2B,eAAAsG,EAAAnE,KACA9D,KAAAkI,KAAAlI,KAAA,sBAAAiI,IAEAhE,iBANA,SAMAkE,GAEAnI,KAAAkI,KAAAlI,KAAA,uBAAAmI,IAEA7D,YAVA,SAUA8D,GAEApI,KAAAkI,KAAAlI,KAAA,iBAAAoI,IAEAzD,gBAdA,SAcA0D,GAEArI,KAAAkI,KAAAlI,KAAA,sBAAAoB,KAAAC,MAAAiH,IAAAD,KACArI,KAAAQ,iBAAAqH,WAAA7H,KAAAyE,oBAAAF,MAEAS,iBAnBA,SAmBAuD,GAEAvI,KAAAkI,KAAAlI,KAAA,sBAAAoB,KAAAC,MAAAiH,IAAAC,KACAvI,KAAAQ,iBAAAqE,WAAA7E,KAAA8E,oBAAAP,MAEAV,iBAxBA,SAwBA2E,GAEAxI,KAAAyD,kBAAAC,eAAA8E,EAAApI,MACAJ,KAAAyD,kBAAAD,eAAAgF,EAAAjF,MACAvD,KAAAyD,kBAAAc,KAAAiE,EAAAjE,MAEA3C,YA9BA,SA8BA6G,GACA,IAAAC,EAAA1I,KACA2I,EAAA,6CACA3I,KAAA4I,sBAAAH,EAAAE,GACA3I,KAAAyC,gBAAAzC,KAAA6I,aAEA7I,KAAAkI,KAAAlI,KAAA,uBAEAA,KAAA8I,UAAA,WAAAJ,EAAA9F,mBAAA,KAEAmG,YAxCA,WAyCA,IAAAC,EAAAhJ,KACAiJ,EAAA,GAsBA,OArBAjJ,KAAAyB,KAAA,OAAAzB,KAAAyB,KAAAzB,KAAAkJ,cAAAlJ,KAAAyB,KACAwH,EAAAxH,KAAAzB,KAAAyB,KACAwH,EAAAvH,mBAAA,YACAuH,EAAAtH,eAAA,QACAsH,EAAAxG,eAAA,OAAAzC,KAAAyC,eAAAzC,KAAA0C,WAAA1C,KAAAyC,eACAwG,EAAA/F,oBAAA9B,KAAAC,MAAAiH,IAAAtI,KAAAkD,sBACA+F,EAAA3F,qBAAAlC,KAAAC,MAAAiH,IAAAtI,KAAAsD,uBACA2F,EAAA9E,eAAA/C,KAAAC,MAAAiH,IAAAtI,KAAAmE,iBACA8E,EAAAxE,oBAAArD,KAAAC,MAAAiH,IAAAtI,KAAAyE,sBACAwE,EAAAnE,oBAAA1D,KAAAC,MAAAiH,IAAAtI,KAAA8E,sBACAmE,EAAAzI,iBAAAY,KAAAC,MAAAiH,IAAAtI,KAAAQ,mBACAyI,EAAAxF,kBAAArC,KAAAC,MAAAiH,IAAAtI,KAAAyD,oBAEAwF,EAAA1E,KAAAvE,KAAAuE,KACA0E,EAAA3I,gBAAAN,KAAAM,gBACA2I,EAAAxI,OAAAT,KAAAS,OACAwI,EAAA3D,YAAAtF,KAAAsF,YACA2D,EAAAlD,gBAAA/F,KAAA+F,gBAEA/F,KAAA8I,UAAA,WAAAE,EAAApG,mBAAA,IACA5C,KAAA4H,mBAAAU,IAAAW,GACAA,GAEA9C,mBAAA,SAAAgD,GAEA,IAAAC,EAAA,SAAAD,GAAA,MAAAnJ,KAAA4H,mBAAA,QAAAuB,EACA,OAAAC,GAEA,WACApJ,KAAAuB,OAAA8H,OAAA,gBAAArJ,KAAA+I,eACA,MACA,YACA,OAAA/I,KAAA4H,oBAEA5H,KAAA4B,YAAAR,KAAAC,MAAArB,KAAA4H,qBAEA,MACA,YACA5H,KAAAyB,KAAA,KACAzB,KAAAkD,oBAAAY,KAAA,QACA9D,KAAAkI,KAAAlI,KAAA,wBAAAL,KAAA,EAAAE,KAAA,aAAAO,MAAA,EAAAmE,KAAA,EAAAhB,MAAA,IACAvD,KAAAkI,KAAAlI,KAAA,kBAAAH,KAAA,OAAA0E,KAAA,EAAAgB,eAAA,IACAvF,KAAAkI,KAAAlI,KAAA,uBAAA8D,KAAA,WAAA4B,mBAAA,EAAAnB,KAAA,IACAvE,KAAAQ,iBAAAqH,WAAA,EACA7H,KAAAkI,KAAAlI,KAAA,uBAAA6E,WAAA,EAAAN,KAAA,EAAAuD,cAAA,IACA9H,KAAAQ,iBAAAqE,WAAA,EACA7E,KAAAuB,OAAA8H,OAAA,sBACA,SAIAvJ,SACA,CACA4C,WADA,WAGA,OAAA1C,KAAAkD,oBAAAY,MAEAkC,UALA,WAOA,OAAAhG,KAAAsD,qBAAAiB,KAAAvE,KAAAmE,eAAAI,KAAAvE,KAAAyD,kBAAAc,MAEAA,KATA,WAWA,OAAAvE,KAAAsD,qBAAAiB,KAAAvE,KAAAmE,eAAAI,KAAAvE,KAAAM,gBAAAN,KAAA+H,YAAAxD,MAEAwB,gBAbA,WAeA,OAAA/F,KAAAsD,qBAAAlD,MAAAJ,KAAAyD,kBAAAC,gBAEAhD,gBAjBA,WAmBA,IAAA4I,EAAAtJ,KAAAsD,qBAAAC,MACAgG,EAAAvJ,KAAAyD,kBAAAD,eACA,OAAA8F,EAAAtJ,KAAAwF,qBAAA+D,GAEAjE,YAvBA,WAyBA,OAAAtF,KAAAsD,qBAAAC,MAAAvD,KAAAyD,kBAAAD,gBAEA/C,OA3BA,WA6BA,OAAAT,KAAAC,MAAAD,KAAAU,gBAAA,MAEA8E,qBA/BA,WAiCA,OAAAxF,KAAAmE,eAAAoB,eAAAvF,KAAAmE,eAAAoB,eAAAvF,KAAA8E,oBAAAgD,eAEAnC,OAnCA,WAqCA,aAAA3F,KAAAkD,oBAAAY,KAAA0F,eAEA5D,OAvCA,WAyCA,aAAA5F,KAAAkD,oBAAAY,KAAA0F,iBC1QuWC,EAAA,cCOvWC,EAAgBC,OAAAC,EAAA,KAAAD,CACdF,EACA5H,EACAuE,GACF,EACA,KACA,KACA,MAIe5G,EAAA,WAAAkK,kJCjBflK,EAAA,MACIwI,QACA,CACIY,sBADJ,SAC0BH,EAAaoB,GAU/B,IAAI,IAAIC,KARR9J,KAAK4H,mBAAmBmC,IAAetB,GACrB,OAAfA,IAECzI,KAAKmG,mBAAmB,SAExBnG,KAAKuB,OAAO8H,OAAO,eAAeQ,IAGjBpB,EAEjB,IAAGuB,IAAYhK,KAAKiK,mBAAmBC,SAASJ,GAIhD,GAAoC,WAAjCH,OAAAQ,EAAA,KAAAR,CAAOlB,EAAaqB,KAA0BM,IAAc3B,EAAaqB,IAWpEM,IAAc3B,EAAaqB,IAE/B9J,KAAKkI,KAAKlI,KAAK8J,EAAUrB,EAAaqB,SAPtC,IAAI,IAAIO,IAJoB,WAAzBV,OAAAQ,EAAA,KAAAR,CAAO3J,KAAK8J,KAA2C,OAAlB9J,KAAK8J,KAEzC9J,KAAK8J,GAAW,IAEKrB,EAAaqB,GAElC9J,KAAKkI,KAAKlI,KAAK8J,GAAW,CAACO,GAAe5B,EAAaqB,GAAWO,IAY9ErK,KAAKsK,gBAETvH,oBAAoB,SAASwH,GAEzBvK,KAAKyC,eAAe8H,EACpBvK,KAAK4C,mBAAkB","file":"js/chunk-5cb1853b.c3d6fe3f.js","sourcesContent":["export default\r\n{\r\n    data:()=>\r\n    {\r\n        return {\r\n            servo_classes:\r\n                [\r\n                    {code:1,id:\"SL\",name:\"Superlight\"},\r\n                    {code:2,id:\"LW\",name:\"Lightweight\"},\r\n                    {code:3,id:\"STR\",name:\"Striker\"},\r\n                    {code:4,id:\"MS\",name:\"Medium Striker\"},\r\n                    {code:5,id:\"HS\",name:\"Heavy Striker\"},\r\n                    {code:6,id:\"MW\",name:\"Mediumweight\"},\r\n                    {code:7,id:\"LH\",name:\"Light Heavy\"},\r\n                    {code:8,id:\"MH\",name:\"Medium Heavy\"},\r\n                    {code:9,id:\"AH\",name:\"Armored Heavy\"},\r\n                    {code:10,id:\"SH\",name:\"Super Heavy\"},\r\n                    {code:11,id:\"MgH\",name:\"Mega Heavy\"}\r\n                ]};\r\n    }\r\n}\r\n","export default\r\n{\r\n    computed:\r\n    {\r\n        space_cost()\r\n        {\r\n            return this.round(this.raw_space - this.efficiencies.space.modifier,2);\r\n        },\r\n        cost_multiplier()\r\n        {\r\n            let cost_multiplier=1;\r\n            for(let multi in this.cost_multipliers)\r\n            {\r\n                cost_multiplier*=this.cost_multipliers[multi];\r\n            }\r\n            return this.round(cost_multiplier,2);\r\n        },\r\n        weight()\r\n        {\r\n            return this.round((this.damage_capacity / 2),2);\r\n        },\r\n        feature_list()\r\n        {\r\n            if(typeof this.feature_array===\"undefined\")\r\n            {\r\n                return \"\";\r\n            }\r\n            return this.feature_array.reduce(function(_string, _val, _index)\r\n            {\r\n                _string+=_index>0 ? \", \" : \"\";\r\n                _string+=_val.feature;\r\n                return _string;\r\n            },\"\");\r\n        },\r\n        newComponent()\r\n        {//responsible for ingesting data from the store\r\n            let selectedComponent=JSON.parse(JSON.stringify(this.$store.getters.selectedComponent));\r\n\r\n            if(typeof selectedComponent!==\"undefined\" && selectedComponent!==null)\r\n            {\r\n                if(selectedComponent.uuid!==this.uuid \r\n                    && selectedComponent.component_category==this.component_category\r\n                    && selectedComponent.component_type==this.component_type)\r\n                {\r\n                    this.ingest_data(selectedComponent);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n    }\r\n};","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"mek-inline-flex-col\",staticStyle:{\"width\":\"100%\"}},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.servo_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('span',{staticClass:\"mek-inline-flex-row\"},[_c('span',{staticClass:\"mek-inline-flex-col\"},[_c('mek-servo-type',{staticStyle:{\"align-self\":\"flex-start\"},attrs:{\"servo-type\":_vm.selected_servo_type},on:{\"update-servo-type\":_vm.updateServoType}}),_c('mek-servo-kills-space-trade',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"base_kills\":_vm.selected_servo_class.kills,\"kills_modifier\":_vm.kills_space_trade.kills_modifier,\"space_modifier\":_vm.kills_space_trade.space_modifier,\"base_space\":_vm.selected_servo_class.space},on:{\"update-extra-space\":_vm.updateExtraSpace}})],1),_c('mek-servo-class',{attrs:{\"servo-type\":_vm.selected_servo_type.type,\"servo-class\":_vm.selected_servo_class},on:{\"update-servo-class\":_vm.updateServoClass}}),_c('mek-armor',{attrs:{\"armor\":_vm.selected_armor,\"max-armor\":_vm.selected_servo_class.code+2},on:{\"update-armor\":_vm.updateArmor}}),_c('span',{staticClass:\"mek-inline-flex-col\"},[(_vm.selected_armor.cost!=0)?_c('mek-armor-type',{attrs:{\"armor-type\":_vm.selected_armor_type},on:{\"update-armor-type\":_vm.updateArmorType}}):_vm._e(),(_vm.selected_armor.cost!=0)?_c('mek-energy-absorbing-armor',{attrs:{\"absorption\":_vm.selected_absorption},on:{\"update-absorption\":_vm.updateAbsorption}}):_vm._e()],1)],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":6}},[_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Base Kills: \"+_vm._s(_vm.selected_servo_class.kills))]),_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_vm._v(\"Total Kills: \"+_vm._s(_vm.total_kills))]),(_vm.selected_armor.cost!=0)?_c('div',{attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Base Armor Stopping Power: \"+_vm._s(_vm.round(_vm.selected_armor.stopping_power,2))+\"\\n                \"),_c('br'),_vm._v(\"Final Stopping Power: \"+_vm._s(_vm.round(_vm.final_stopping_power,2))+\"\\n            \")]):_vm._e(),(_vm.selected_armor.cost!=0)?_c('div',{attrs:{\"slot\":\"col1-row4\"},slot:\"col1-row4\"},[_vm._v(\"Armor Type: \"+_vm._s(_vm.selected_armor_type.type))]):_vm._e(),(_vm.selected_armor.cost!=0)?_c('div',{staticStyle:{\"padding-left\":\"10px\"},attrs:{\"slot\":\"col1-row5\"},slot:\"col1-row5\"},[_vm._v(\"Damage Coefficient: \"+_vm._s(_vm.selected_armor_type.damage_coefficient))]):_vm._e(),(_vm.selected_absorption.cost!=1)?_c('div',{attrs:{\"slot\":\"col1-row6\"},slot:\"col1-row6\"},[_vm._v(\"Absorption: \"+_vm._s(_vm.selected_absorption.absorption*100)+\"%\")]):_vm._e(),(_vm.is_arm | _vm.is_leg)?_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Damage Bonus: \"+_vm._s(_vm.selected_servo_class.damage_bonus))]):_vm._e(),(_vm.is_arm)?_c('div',{attrs:{\"slot\":\"col2-row2\"},slot:\"col2-row2\"},[_vm._v(\"Throw Range: \"+_vm._s(_vm.selected_servo_class.throw_range))]):_vm._e(),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.selected_servo_class.space))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Available Space: \"+_vm._s(_vm.available_space))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.weight)+\" tons\")]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.base_cost))]),_c('div',{attrs:{\"slot\":\"col4-row2\"},slot:\"col4-row2\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.cost_multiplier))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row3\"},slot:\"col4-row3\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <span class=\"mek-inline-flex-col\" style=\"width:100%;\">\r\n        <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||servo_name\"\r\n            :component-changed=\"component_changed\"\r\n            @update-component-name=\"updateComponentName\"\r\n        ></mek-component-name>\r\n        <span class=\"mek-inline-flex-row\">\r\n            <span class=\"mek-inline-flex-col\">\r\n                <mek-servo-type :servo-type=\"selected_servo_type\" @update-servo-type=\"updateServoType\"\r\n                    style=\"align-self:flex-start;\"\r\n                ></mek-servo-type>\r\n                <mek-servo-kills-space-trade style=\"align-self:baseline;\"\r\n                    :base_kills=\"selected_servo_class.kills\" :kills_modifier=\"kills_space_trade.kills_modifier\" \r\n                    :space_modifier=\"kills_space_trade.space_modifier\" :base_space=\"selected_servo_class.space\"\r\n                    @update-extra-space=\"updateExtraSpace\"\r\n                ></mek-servo-kills-space-trade>\r\n                <!--- ADD KILLS FOR SPACE CONVERTER --->\r\n                <!--- add reinforcing component --->\r\n            </span>\r\n            <mek-servo-class @update-servo-class=\"updateServoClass\"\r\n                :servo-type=\"selected_servo_type.type\" :servo-class=\"selected_servo_class\"\r\n            ></mek-servo-class>\r\n            <mek-armor :armor=\"selected_armor\"  :max-armor=\"selected_servo_class.code+2\"\r\n                @update-armor=\"updateArmor\"\r\n            ></mek-armor>\r\n            <span class=\"mek-inline-flex-col\">\r\n                <mek-armor-type :armor-type=\"selected_armor_type\" v-if=\"selected_armor.cost!=0\"\r\n                    @update-armor-type=\"updateArmorType\"\r\n                ></mek-armor-type>\r\n                <mek-energy-absorbing-armor :absorption=\"selected_absorption\" v-if=\"selected_armor.cost!=0\"\r\n                    @update-absorption=\"updateAbsorption\"\r\n                ></mek-energy-absorbing-armor>\r\n            </span>\r\n        </span>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-component-stats :cols=\"4\" :rows=\"6\">\r\n                <div slot=\"col1-row1\">Base Kills: {{selected_servo_class.kills}}</div>\r\n                <div slot=\"col1-row2\">Total Kills: {{total_kills}}</div>\r\n                <div slot=\"col1-row3\" v-if=\"selected_armor.cost!=0\">Base Armor Stopping Power: {{round(selected_armor.stopping_power,2)}}\r\n                    <br>Final Stopping Power: {{round(final_stopping_power,2)}}\r\n                </div>\r\n                <div slot=\"col1-row4\" v-if=\"selected_armor.cost!=0\">Armor Type: {{selected_armor_type.type}}</div>\r\n                <div slot=\"col1-row5\" v-if=\"selected_armor.cost!=0\" style=\"padding-left:10px;\">Damage Coefficient: {{selected_armor_type.damage_coefficient}}</div>\r\n                <div slot=\"col1-row6\" v-if=\"selected_absorption.cost!=1\">Absorption: {{selected_absorption.absorption*100}}%</div>\r\n\r\n                <div slot=\"col2-row1\" v-if=\"is_arm | is_leg\">Damage Bonus: {{selected_servo_class.damage_bonus}}</div>\r\n                <div slot=\"col2-row2\" v-if=\"is_arm\">Throw Range: {{selected_servo_class.throw_range}}</div>\r\n\r\n                <div slot=\"col3-row1\">Base Space: {{selected_servo_class.space}}</div>\r\n                <div slot=\"col3-row2\">Available Space: {{available_space}}</div>\r\n                <div slot=\"col3-row3\">Weight: {{weight}} tons</div>\r\n                \r\n                <div slot=\"col4-row1\">Base Cost: {{base_cost}}</div>\r\n                <div slot=\"col4-row2\">Multiplier: x{{cost_multiplier}}</div>\r\n                <div slot=\"col4-row3\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n            </mek-component-stats>\r\n            <mek-save-reset-component @save-reset-component=\"componentSaveReset\"></mek-save-reset-component>\r\n        </div>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\nimport servo_classes_mixin from \"../../mixins/servo_classes_mixin.js\";\r\nimport selected_item_mixin from \"../../mixins/selected_item_mixin.js\";\r\nimport utility_mixin from \"../../mixins/utility_mixin.js\";\r\nimport component_methods_mixin from \"../../mixins/component_methods_mixin\";\r\nimport component_computed_mixin from \"../../mixins/component_computed_mixin\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_servo\",\r\n    props:[],\r\n    mixins:\r\n        [\r\n            servo_classes_mixin, \r\n            selected_item_mixin, \r\n            utility_mixin, \r\n            component_methods_mixin, \r\n            component_computed_mixin\r\n        ],\r\n    components:\r\n    {\r\n        \"mek-servo-type\":()=>import(\"./subcomponents/mek_servo-type.vue\"),\r\n        \"mek-servo-class\":()=>import(\"./subcomponents/mek_servo-class.vue\"),\r\n        \"mek-servo-kills-space-trade\":()=>import(\"./subcomponents/mek_servo-kills-space-trade.vue\"),\r\n\r\n        \"mek-component-name\":()=>import(\"../universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>import(\"../universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>import(\"../universal/mek_component-stats.vue\"),\r\n\r\n        \"mek-armor\":()=>import(\"../universal/mek_armor.vue\"),\r\n        \"mek-armor-type\":()=>import(\"../universal/mek_armor-type.vue\"),\r\n        \"mek-energy-absorbing-armor\":()=>import(\"../universal/mek_energy-absorbing-armor.vue\"),\r\n        \r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.uuid=null;\r\n        obj.component_name=null;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"servo\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.selected_servo_type={type:\"Torso\"};\r\n        obj.selected_servo_class={code:1,name:\"Superlight\",space:2,cost:2,kills:2};\r\n\r\n        obj.cost_multipliers={};\r\n\r\n        obj.selected_armor={name:\"None\",cost:0,stopping_power:0};\r\n        \r\n        obj.selected_armor_type={type:\"Standard\",damage_coefficient:1,cost:1};\r\n        obj.cost_multipliers.armor_type=1;\r\n\r\n        obj.selected_absorption={absorption:0,cost:1,armor_penalty:1};\r\n        obj.cost_multipliers.absorption=1;\r\n\r\n        obj.kills_space_trade={};\r\n        obj.kills_space_trade.space_modifier=0;\r\n        obj.kills_space_trade.kills_modifier=0;\r\n        obj.kills_space_trade.cost=0;\r\n\r\n        obj.extra_kills={};\r\n        obj.extra_kills.kills=0;\r\n        obj.extra_kills.cost=0;\r\n\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        updateServoType(_servo_type)\r\n        {   \r\n            this.component_type=_servo_type.type;\r\n            this.$set(this,\"selected_servo_type\",_servo_type)\r\n        },\r\n        updateServoClass(_servo_class)\r\n        {\r\n            this.$set(this,\"selected_servo_class\",_servo_class)\r\n        },\r\n        updateArmor(_armor)\r\n        {\r\n            this.$set(this,\"selected_armor\",_armor)\r\n        },\r\n        updateArmorType(_armor_type)\r\n        {\r\n            this.$set(this,\"selected_armor_type\",JSON.parse(JSON.stringify(_armor_type)));\r\n            this.cost_multipliers.armor_type=this.selected_armor_type.cost;\r\n        },\r\n        updateAbsorption(_absorption)\r\n        {\r\n            this.$set(this,\"selected_absorption\",JSON.parse(JSON.stringify(_absorption)));\r\n            this.cost_multipliers.absorption=this.selected_absorption.cost;\r\n        },\r\n        updateExtraSpace(_kills_space_trade)\r\n        {\r\n            this.kills_space_trade.space_modifier=_kills_space_trade.space;\r\n            this.kills_space_trade.kills_modifier=_kills_space_trade.kills;\r\n            this.kills_space_trade.cost=_kills_space_trade.cost;\r\n        },\r\n        ingest_data(_data_object)\r\n        {\r\n            let alertMessage=\"Torso bad, resetting to 'standard' shield.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(this.component_name==this.shield_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n        },\r\n        output_data()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"servo\";\r\n            return_data.component_name=this.component_name===null?this.servo_name:this.component_name;\r\n            return_data.selected_servo_type=JSON.parse(JSON.stringify(this.selected_servo_type));\r\n            return_data.selected_servo_class=JSON.parse(JSON.stringify(this.selected_servo_class));\r\n            return_data.selected_armor=JSON.parse(JSON.stringify(this.selected_armor));\r\n            return_data.selected_armor_type=JSON.parse(JSON.stringify(this.selected_armor_type));\r\n            return_data.selected_absorption=JSON.parse(JSON.stringify(this.selected_absorption));\r\n            return_data.cost_multipliers=JSON.parse(JSON.stringify(this.cost_multipliers));\r\n            return_data.kills_space_trade=JSON.parse(JSON.stringify(this.kills_space_trade));\r\n            \r\n            return_data.cost=this.cost;\r\n            return_data.cost_multiplier=this.cost_multiplier;\r\n            return_data.weight=this.weight;\r\n            return_data.total_kills=this.total_kills;\r\n            return_data.available_space=this.available_space;\r\n\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return return_data;\r\n        },\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"clear\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                    }\r\n                    break;\r\n                case \"clear\":\r\n                    this.uuid=null;\r\n                    this.selected_servo_type.type=\"Torso\";\r\n                    this.$set(this,\"selected_servo_class\",{code:1,name:\"Superlight\",space:2,cost:2,kills:2})\r\n                    this.$set(this,\"selected_armor\",{name:\"None\",cost:0,stopping_power:0});\r\n                    this.$set(this,\"selected_armor_type\",{type:\"Standard\",damage_coefficient:1,cost:1});\r\n                    this.cost_multipliers.armor_type=1;\r\n                    this.$set(this,\"selected_absorption\",{absorption:0,cost:1,armor_penalty:1});\r\n                    this.cost_multipliers.absorption=1;\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        servo_name()\r\n        {\r\n            return this.selected_servo_type.type;\r\n        },\r\n        base_cost()\r\n        {\r\n            return this.selected_servo_class.cost + this.selected_armor.cost + this.kills_space_trade.cost;\r\n        },\r\n        cost()\r\n        {\r\n            return this.selected_servo_class.cost + (this.selected_armor.cost*this.cost_multiplier) + this.extra_kills.cost;\r\n        },\r\n        available_space()\r\n        {\r\n            return this.selected_servo_class.space + this.kills_space_trade.space_modifier;\r\n        },\r\n        damage_capacity()\r\n        {\r\n            let servo_kills=this.selected_servo_class.kills;\r\n            let kills_space_trade_sp_loss=this.kills_space_trade.kills_modifier;\r\n            return servo_kills + this.final_stopping_power + kills_space_trade_sp_loss;\r\n        },\r\n        total_kills()\r\n        {\r\n            return this.selected_servo_class.kills + this.kills_space_trade.kills_modifier;\r\n        },\r\n        weight()\r\n        {\r\n            return this.round(this.damage_capacity/2,2);\r\n        },\r\n        final_stopping_power()\r\n        {\r\n            return this.selected_armor.stopping_power-(this.selected_armor.stopping_power*this.selected_absorption.armor_penalty);\r\n        },\r\n        is_arm()\r\n        {\r\n            return this.selected_servo_type.type.toLowerCase()==\"arm\";\r\n        },\r\n        is_leg()\r\n        {\r\n            return this.selected_servo_type.type.toLowerCase()==\"leg\";\r\n        }\r\n    }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_servo-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_servo-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_servo-main.vue?vue&type=template&id=219daf4c&\"\nimport script from \"./mek_servo-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_servo-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default\r\n{\r\n    methods:\r\n    {\r\n        universal_ingest_data(_data_object,_alertMessage)\r\n        {\r\n            this.original_component=JSON.stringify(_data_object);//store a copy as a JSON object for 'reset' purposes\r\n            if(_data_object===null)\r\n            {\r\n                this.componentSaveReset(\"clear\");\r\n                //generic error comment\r\n                this.$store.commit(\"alertMessage\",_alertMessage);\r\n            }\r\n\r\n            for(let _property in _data_object)\r\n            {//exclude computed properties that are auto updated\r\n                if(Object.keys(this._computedWatchers).includes(_property))\r\n                {\r\n                    continue;\r\n                }\r\n                if(typeof _data_object[_property]===\"object\" && !Array.isArray(_data_object[_property]))\r\n                {\r\n                    if(typeof this[_property]!==\"object\" || this[_property]===null)\r\n                    {\r\n                        this[_property]={};\r\n                    }\r\n                    for(let _sub_property in _data_object[_property])\r\n                    {\r\n                        this.$set(this[_property],[_sub_property],_data_object[_property][_sub_property]);\r\n                    }\r\n                }\r\n                else if(Array.isArray(_data_object[_property]))\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n                else\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n            }\r\n            this.$forceUpdate();\r\n        },\r\n        updateComponentName:function(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
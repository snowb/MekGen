{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/_object-to-array.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/entries.js","webpack:///./node_modules/core-js/library/modules/_parse-int.js","webpack:///./node_modules/core-js/library/modules/es6.parse-int.js","webpack:///./node_modules/core-js/library/modules/es7.object.entries.js","webpack:///./src/store/modules/validators/mek_magazine_validator.js","webpack:///./node_modules/core-js/library/modules/_string-trim.js","webpack:///./node_modules/core-js/library/fn/object/entries.js","webpack:///./node_modules/core-js/library/fn/parse-int.js","webpack:///./node_modules/core-js/library/modules/_string-ws.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js"],"names":["getKeys","__webpack_require__","toIObject","isEnum","f","module","exports","isEntries","it","key","O","keys","length","i","result","call","push","$parseInt","parseInt","$trim","trim","ws","hex","str","radix","string","String","test","$export","G","F","$entries","S","entries","updateMultipliers","round","validators","e","then","bind","_module","filter_data_table","ammo","cleaned_feature","derive","_component","cleanedComponent","alerts","newShots","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_parse_int__WEBPACK_IMPORTED_MODULE_1___default","selected_shots","isNaN","newBaseCost","selected_gun","cost","base_cost","damage_capacity","newCost","cost_multiplier","newWeight","weight","data","validateComponent","updateList","hasBlastRadius","feature_array","some","_feat","feature","hasBlast","validatedData","cleaned_array","concat","cost_multipliers","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_entries__WEBPACK_IMPORTED_MODULE_0___default","reduce","_multi","_val","defined","fails","spaces","space","non","ltrim","RegExp","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","fn","P","TYPE","replace","Object"],"mappings":"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","file":"js/mek_magazine_validator-legacy.99665107.js","sourcesContent":["var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n","module.exports = require(\"core-js/library/fn/object/entries\");","var $parseInt = require('./_global').parseInt;\nvar $trim = require('./_string-trim').trim;\nvar ws = require('./_string-ws');\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 18.2.5 parseInt(string, radix)\n$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","let validators={};\r\n\r\nimport(/* webpackChunkName: \"mek_ammo-list-data-module\" */\r\n    \"@/data_table_modules/mek_magazine/mek_ammo-list-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.filter_data_table=_module.filter_data_table;\r\n    validators.ammo=_module.cleaned_feature;\r\n});\r\n\r\nlet updateMultipliers, round;\r\nimport(/* webpackChunkName: \"validator_functions\" */\"./validator_functions\")\r\n.then((_module)=>\r\n{\r\n    ({updateMultipliers, round} = _module);\r\n});\r\n\r\nvalidators.derive=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let alerts=[];\r\n\r\n    let newShots=parseInt(cleanedComponent.selected_shots);\r\n    if(cleanedComponent.selected_shots!=newShots)\r\n    {//validate shots\r\n        alerts.push(\"Mek-Magazine: selected_shots\");\r\n        alerts.push(\"**** Invalid Selected Shots. Correcting. ****\");\r\n        cleanedComponent.selected_shots=isNaN(newShots) ? 1 : newShots;\r\n    }\r\n    let newBaseCost=round(cleanedComponent.selected_gun.cost*0.01*cleanedComponent.selected_shots);\r\n    if(cleanedComponent.base_cost!=newBaseCost)\r\n    {//validate base_cost\r\n        alerts.push(\"Mek-Magazine: base_cost\");\r\n        alerts.push(\"**** Invalid Base Cost. Correcting. ****\");\r\n        cleanedComponent.base_cost=newBaseCost;\r\n    }\r\n    if(cleanedComponent.damage_capacity!=newBaseCost)\r\n    {//validate damage_capacity\r\n        alerts.push(\"Mek-Magazine: damage_capacity\");\r\n        alerts.push(\"**** Invalid Base Damage Capacity. Correcting. ****\");\r\n        cleanedComponent.damage_capacity=newBaseCost;\r\n    }\r\n    let newCost=newBaseCost * cleanedComponent.cost_multiplier;\r\n    newCost=round(newCost,2);\r\n    if(cleanedComponent.cost!=newCost)\r\n    {//validate cost\r\n        alerts.push(\"Mek-Magazine: cost\");\r\n        alerts.push(\"**** Invalid Cost. Correcting. ****\");\r\n        cleanedComponent.cost=newCost;\r\n    }\r\n    let newWeight=round(newBaseCost/2,2);\r\n    if(cleanedComponent.weight!=newWeight)\r\n    {//validate weight\r\n        alerts.push(\"Mek-Magazine: weight\");\r\n        alerts.push(\"**** Invalid Weight. Correcting. ****\");\r\n        cleanedComponent.weight=newWeight;\r\n    }\r\n    return {data:cleanedComponent,alerts:alerts};\r\n};\r\n\r\nlet validateComponent=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let updateList=[\"feature_array\"];\r\n    let alerts=[];\r\n    let hasBlastRadius=cleanedComponent.feature_array.some((_feat)=>\r\n    {\r\n        return /blast/gi.test(_feat.feature);\r\n    });\r\n    validators.filter_data_table(hasBlastRadius);\r\n    if(cleanedComponent.hasBlast!=hasBlastRadius)\r\n    {//validate blast radius prop\r\n        alerts.push(\"Mek-Magazine: hasBlast\");\r\n        alerts.push(\"**** Invalid hasBlast. Correcting. ****\");\r\n        cleanedComponent.hasBlast=hasBlastRadius;\r\n    }\r\n    //validate ammo array\r\n    let validatedData=validators.ammo(cleanedComponent.feature_array,\"type\");\r\n    cleanedComponent.feature_array=validatedData.cleaned_array;\r\n    alerts=alerts.concat(validatedData.alerts);\r\n\r\n    //update cost_multipliers for components needing update\r\n    validatedData=updateMultipliers(updateList,cleanedComponent,\"Mek-Magazine\");\r\n    cleanedComponent.cost_multipliers=validatedData.data;\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    //validate space efficiency\r\n    cleanedComponent.cost_multiplier=Object.entries(cleanedComponent.cost_multipliers).reduce((_multi, _val)=>\r\n    {//calc new cost_mulitplier\r\n        return _multi*_val[1];\r\n    },1);\r\n    cleanedComponent.cost_multiplier=round(cleanedComponent.cost_multiplier,2);\r\n    cleanedComponent.cost=cleanedComponent.selected_gun.cost * cleanedComponent.cost_multiplier;\r\n    \r\n    return {data:cleanedComponent,alerts:alerts};\r\n};\r\n\r\nexport {validateComponent};","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n","require('../modules/es6.parse-int');\nmodule.exports = require('../modules/_core').parseInt;\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","module.exports = require(\"core-js/library/fn/parse-int\");"],"sourceRoot":""}
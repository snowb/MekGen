(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["mek_emw-damage-data-module"],{"706d":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return partial_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return partial_has_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return partial_get_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return partial_cleaned_feature; });\n//data table module, raw data output for re-use in non-vue-component formats\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \n//          neutral and reusable across all data modules\n//partial data validator\n//called with data_table and validation_keys in data-module\nlet partial_validate = (_data_table, _validation_keys) => _data => {\n  //_data_table: Array, array of data to validate against\n  //_validation_keys: Array, keys to be compared between passed in data and data_table\n  //_data: Object, data to be compared to data table \n  if (typeof _data === "undefined" || !Array.isArray(_validation_keys) || _validation_keys.length == 0) {\n    return false;\n  }\n\n  let valid = _data_table.some(_val => {\n    return _validation_keys.every(_keys => {\n      //return true if all validation_keys in _data match an element in _data_table\n      return _data[_keys] == _val[_keys];\n    });\n  });\n\n  return valid;\n}; //partial_has_feature, determine if provided data table has matching element with provided key and val\n//called in data module to generate full function with local data\n\n\nlet partial_has_feature = _data_table => (_key, _val) => {\n  return _data_table.some(_data => {\n    return _data[_key] !== undefined && _data[_key] == _val;\n  });\n}; //partial get_feature, returns full function for data module\n//requires data_table (array) and module\'s has_feature function\n//returns full matching element in provided data table\n//has_feature must exist in data table module\n\n\nlet partial_get_feature = (_data_table, _has_feature) => (_key, _val) => {\n  let found_feature = null;\n\n  if (_has_feature(_key, _val)) {\n    _data_table.some(_table_val => {\n      if (_table_val[_key] == _val) {\n        found_feature = _table_val;\n        return true;\n      }\n    }, undefined);\n  }\n\n  return found_feature;\n};\n\nlet partial_cleaned_feature = (_validator, _has_feature, _get_feature, _default_data, _name) => (_pkey, _feature) => {\n  //input: primary key, selected feature, filtered data table\n  let data = undefined;\n  let key_list = [];\n  let update = false;\n  let alerts = [];\n  let json_data = JSON.stringify(_feature);\n\n  if (_feature === undefined || !_has_feature(_pkey, _feature[_pkey])) {\n    data = _default_data;\n    key_list = [data[_pkey]];\n    update = true;\n    alerts.push(_name + ": " + json_data);\n    alerts.push("**** Invalid data. Reseting to default. ****");\n  } else if (!_validator(_feature)) {\n    data = JSON.parse(JSON.stringify(_get_feature(_pkey, _feature[_pkey])));\n    key_list = [data[_pkey]];\n    update = true;\n    alerts.push(_name + ": " + json_data);\n    alerts.push("**** Invalid data. Reseting. ****");\n  } else {\n    data = JSON.parse(JSON.stringify(_feature));\n    key_list = [data[_pkey]];\n    update = false;\n  }\n\n  return {\n    data: data,\n    key_list: key_list,\n    update: update,\n    alerts: alerts\n  };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///706d\n')},"77b7":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "damage_data_table", function() { return damage_data_table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "damage_validate", function() { return damage_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has_feature", function() { return has_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_feature", function() { return get_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cleaned_feature", function() { return cleaned_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create_damage_data_table", function() { return create_damage_data_table; });\n/* harmony import */ var _data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("706d");\n//data table module, raw data output for re-use in non-vue-component formats\n //create new damage_data_table\n\nlet raw_damage_data_table = Array.apply({}, Array(20)).map((_el, _index) => {\n  let damage = _index + 1;\n  let cost = damage;\n  return {\n    damage: damage,\n    cost: cost\n  };\n});\nlet data_table_keys = ["damage", "cost"];\nlet default_data = {\n  damage: 1,\n  cost: 1\n};\nlet damage_data_table = JSON.parse(JSON.stringify(raw_damage_data_table));\nlet data_cached = false; //update damage data table\n\nlet create_damage_data_table = _is_nonvariable_beam_shield => {\n  if (!_is_nonvariable_beam_shield) {\n    damage_data_table = JSON.parse(JSON.stringify(raw_damage_data_table));\n    default_data = {\n      damage: 1,\n      cost: 1\n    };\n  } else {\n    damage_data_table = raw_damage_data_table.map(_elem => {\n      let newElem = {\n        damage: _elem.damage / 2,\n        cost: _elem.cost\n      };\n      return newElem;\n    });\n    default_data = {\n      damage: 0.5,\n      cost: 1\n    };\n  }\n\n  data_cached = false;\n};\n\nlet cached_validate = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_validate */ "d"])(damage_data_table, data_table_keys); //data validator for damage_data_table\n//call partial_validate with appropriate data for full validate\n\nlet damage_validate = _data => {\n  if (data_cached) {\n    return cached_validate(_data);\n  }\n\n  data_cached = true;\n  cached_validate = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_validate */ "d"])(damage_data_table, data_table_keys);\n  return cached_validate(_data);\n}; //completed function for checking if data has data\n\n\nlet has_feature = (_pkey, _data) => {\n  return Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_has_feature */ "c"])(damage_data_table)(_pkey, _data);\n}; //completed function for returning matching data\n\n\nlet get_feature = (_pkey, _data) => {\n  return Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_get_feature */ "b"])(damage_data_table, has_feature)(_pkey, _data);\n}; //completed function for returning cleaed data\n\n\nlet cleaned_feature = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_cleaned_feature */ "a"])(damage_validate, has_feature, get_feature, default_data, "Mek_EMW-Damage");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZGF0YV90YWJsZV9tb2R1bGVzL21la19lbXcvbWVrX2Vtdy1kYW1hZ2UtZGF0YS1tb2R1bGUuanM/NzdiNyJdLCJuYW1lcyI6WyJyYXdfZGFtYWdlX2RhdGFfdGFibGUiLCJBcnJheSIsImFwcGx5IiwibWFwIiwiX2VsIiwiX2luZGV4IiwiZGFtYWdlIiwiY29zdCIsImRhdGFfdGFibGVfa2V5cyIsImRlZmF1bHRfZGF0YSIsImRhbWFnZV9kYXRhX3RhYmxlIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiZGF0YV9jYWNoZWQiLCJjcmVhdGVfZGFtYWdlX2RhdGFfdGFibGUiLCJfaXNfbm9udmFyaWFibGVfYmVhbV9zaGllbGQiLCJfZWxlbSIsIm5ld0VsZW0iLCJjYWNoZWRfdmFsaWRhdGUiLCJwYXJ0aWFsX3ZhbGlkYXRlIiwiZGFtYWdlX3ZhbGlkYXRlIiwiX2RhdGEiLCJoYXNfZmVhdHVyZSIsIl9wa2V5IiwicGFydGlhbF9oYXNfZmVhdHVyZSIsImdldF9mZWF0dXJlIiwicGFydGlhbF9nZXRfZmVhdHVyZSIsImNsZWFuZWRfZmVhdHVyZSIsInBhcnRpYWxfY2xlYW5lZF9mZWF0dXJlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Q0FJQTs7QUFDQSxJQUFJQSxxQkFBcUIsR0FBQ0MsS0FBSyxDQUFDQyxLQUFOLENBQVksRUFBWixFQUFnQkQsS0FBSyxDQUFDLEVBQUQsQ0FBckIsRUFBMkJFLEdBQTNCLENBQStCLENBQUNDLEdBQUQsRUFBS0MsTUFBTCxLQUN6RDtBQUNJLE1BQUlDLE1BQU0sR0FBQ0QsTUFBTSxHQUFDLENBQWxCO0FBQ0EsTUFBSUUsSUFBSSxHQUFDRCxNQUFUO0FBQ0EsU0FBTztBQUFDQSxVQUFNLEVBQUNBLE1BQVI7QUFBZUMsUUFBSSxFQUFDQTtBQUFwQixHQUFQO0FBQ0gsQ0FMeUIsQ0FBMUI7QUFNQSxJQUFJQyxlQUFlLEdBQUMsQ0FBQyxRQUFELEVBQVUsTUFBVixDQUFwQjtBQUNBLElBQUlDLFlBQVksR0FBQztBQUFDSCxRQUFNLEVBQUMsQ0FBUjtBQUFVQyxNQUFJLEVBQUM7QUFBZixDQUFqQjtBQUVBLElBQUlHLGlCQUFpQixHQUFDQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxTQUFMLENBQWViLHFCQUFmLENBQVgsQ0FBdEI7QUFFQSxJQUFJYyxXQUFXLEdBQUMsS0FBaEIsQyxDQUNBOztBQUNBLElBQUlDLHdCQUF3QixHQUFFQywyQkFBRCxJQUM3QjtBQUNJLE1BQUcsQ0FBQ0EsMkJBQUosRUFDQTtBQUNJTixxQkFBaUIsR0FBQ0MsSUFBSSxDQUFDQyxLQUFMLENBQVdELElBQUksQ0FBQ0UsU0FBTCxDQUFlYixxQkFBZixDQUFYLENBQWxCO0FBQ0FTLGdCQUFZLEdBQUM7QUFBQ0gsWUFBTSxFQUFDLENBQVI7QUFBVUMsVUFBSSxFQUFDO0FBQWYsS0FBYjtBQUNILEdBSkQsTUFNQTtBQUNJRyxxQkFBaUIsR0FBQ1YscUJBQXFCLENBQUNHLEdBQXRCLENBQTJCYyxLQUFELElBQzVDO0FBQ0ksVUFBSUMsT0FBTyxHQUFDO0FBQUNaLGNBQU0sRUFBQ1csS0FBSyxDQUFDWCxNQUFOLEdBQWEsQ0FBckI7QUFBd0JDLFlBQUksRUFBQ1UsS0FBSyxDQUFDVjtBQUFuQyxPQUFaO0FBQ0EsYUFBT1csT0FBUDtBQUNILEtBSmlCLENBQWxCO0FBS0FULGdCQUFZLEdBQUM7QUFBQ0gsWUFBTSxFQUFDLEdBQVI7QUFBWUMsVUFBSSxFQUFDO0FBQWpCLEtBQWI7QUFDSDs7QUFDRE8sYUFBVyxHQUFDLEtBQVo7QUFDSCxDQWpCRDs7QUFtQkEsSUFBSUssZUFBZSxHQUFDQywrSEFBZ0IsQ0FBQ1YsaUJBQUQsRUFBb0JGLGVBQXBCLENBQXBDLEMsQ0FDQTtBQUNBOztBQUNBLElBQUlhLGVBQWUsR0FBRUMsS0FBRCxJQUNwQjtBQUNJLE1BQUdSLFdBQUgsRUFDQTtBQUNJLFdBQU9LLGVBQWUsQ0FBQ0csS0FBRCxDQUF0QjtBQUNIOztBQUNEUixhQUFXLEdBQUMsSUFBWjtBQUNBSyxpQkFBZSxHQUFDQywrSEFBZ0IsQ0FBQ1YsaUJBQUQsRUFBb0JGLGVBQXBCLENBQWhDO0FBQ0EsU0FBT1csZUFBZSxDQUFDRyxLQUFELENBQXRCO0FBQ0gsQ0FURCxDLENBWUE7OztBQUNBLElBQUlDLFdBQVcsR0FBQyxDQUFDQyxLQUFELEVBQU9GLEtBQVAsS0FDaEI7QUFDSSxTQUFPRyxrSUFBbUIsQ0FBQ2YsaUJBQUQsQ0FBbkIsQ0FBdUNjLEtBQXZDLEVBQTZDRixLQUE3QyxDQUFQO0FBQ0gsQ0FIRCxDLENBS0E7OztBQUNBLElBQUlJLFdBQVcsR0FBQyxDQUFDRixLQUFELEVBQU9GLEtBQVAsS0FDaEI7QUFDSSxTQUFPSyxrSUFBbUIsQ0FBQ2pCLGlCQUFELEVBQW9CYSxXQUFwQixDQUFuQixDQUFvREMsS0FBcEQsRUFBMERGLEtBQTFELENBQVA7QUFDSCxDQUhELEMsQ0FLQTs7O0FBQ0EsSUFBSU0sZUFBZSxHQUNmQyxzSUFBdUIsQ0FBQ1IsZUFBRCxFQUFrQkUsV0FBbEIsRUFBK0JHLFdBQS9CLEVBQTRDakIsWUFBNUMsRUFBMEQsZ0JBQTFELENBRDNCIiwiZmlsZSI6Ijc3YjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL2RhdGEgdGFibGUgbW9kdWxlLCByYXcgZGF0YSBvdXRwdXQgZm9yIHJlLXVzZSBpbiBub24tdnVlLWNvbXBvbmVudCBmb3JtYXRzXHJcbmltcG9ydCB7cGFydGlhbF92YWxpZGF0ZSwgcGFydGlhbF9oYXNfZmVhdHVyZSwgcGFydGlhbF9nZXRfZmVhdHVyZSwgcGFydGlhbF9jbGVhbmVkX2ZlYXR1cmV9IFxyXG4gICAgZnJvbSBcIkAvZGF0YV90YWJsZV9tb2R1bGVzL3VuaXZlcnNhbC9tZWtfcGFydGlhbC1mdW5jdGlvbi1kYXRhLW1vZHVsZVwiO1xyXG5cclxuLy9jcmVhdGUgbmV3IGRhbWFnZV9kYXRhX3RhYmxlXHJcbmxldCByYXdfZGFtYWdlX2RhdGFfdGFibGU9QXJyYXkuYXBwbHkoe30sIEFycmF5KDIwKSkubWFwKChfZWwsX2luZGV4KT0+XHJcbntcclxuICAgIGxldCBkYW1hZ2U9X2luZGV4KzE7XHJcbiAgICBsZXQgY29zdD1kYW1hZ2U7XHJcbiAgICByZXR1cm4ge2RhbWFnZTpkYW1hZ2UsY29zdDpjb3N0fTtcclxufSk7XHJcbmxldCBkYXRhX3RhYmxlX2tleXM9W1wiZGFtYWdlXCIsXCJjb3N0XCJdO1xyXG5sZXQgZGVmYXVsdF9kYXRhPXtkYW1hZ2U6MSxjb3N0OjF9O1xyXG5cclxubGV0IGRhbWFnZV9kYXRhX3RhYmxlPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocmF3X2RhbWFnZV9kYXRhX3RhYmxlKSk7XHJcblxyXG5sZXQgZGF0YV9jYWNoZWQ9ZmFsc2U7XHJcbi8vdXBkYXRlIGRhbWFnZSBkYXRhIHRhYmxlXHJcbmxldCBjcmVhdGVfZGFtYWdlX2RhdGFfdGFibGU9KF9pc19ub252YXJpYWJsZV9iZWFtX3NoaWVsZCk9PlxyXG57XHJcbiAgICBpZighX2lzX25vbnZhcmlhYmxlX2JlYW1fc2hpZWxkKVxyXG4gICAge1xyXG4gICAgICAgIGRhbWFnZV9kYXRhX3RhYmxlPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocmF3X2RhbWFnZV9kYXRhX3RhYmxlKSk7XHJcbiAgICAgICAgZGVmYXVsdF9kYXRhPXtkYW1hZ2U6MSxjb3N0OjF9O1xyXG4gICAgfVxyXG4gICAgZWxzZVxyXG4gICAge1xyXG4gICAgICAgIGRhbWFnZV9kYXRhX3RhYmxlPXJhd19kYW1hZ2VfZGF0YV90YWJsZS5tYXAoKF9lbGVtKT0+XHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBsZXQgbmV3RWxlbT17ZGFtYWdlOl9lbGVtLmRhbWFnZS8yLCBjb3N0Ol9lbGVtLmNvc3R9O1xyXG4gICAgICAgICAgICByZXR1cm4gbmV3RWxlbTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBkZWZhdWx0X2RhdGE9e2RhbWFnZTowLjUsY29zdDoxfTtcclxuICAgIH1cclxuICAgIGRhdGFfY2FjaGVkPWZhbHNlO1xyXG59O1xyXG5cclxubGV0IGNhY2hlZF92YWxpZGF0ZT1wYXJ0aWFsX3ZhbGlkYXRlKGRhbWFnZV9kYXRhX3RhYmxlLCBkYXRhX3RhYmxlX2tleXMpO1xyXG4vL2RhdGEgdmFsaWRhdG9yIGZvciBkYW1hZ2VfZGF0YV90YWJsZVxyXG4vL2NhbGwgcGFydGlhbF92YWxpZGF0ZSB3aXRoIGFwcHJvcHJpYXRlIGRhdGEgZm9yIGZ1bGwgdmFsaWRhdGVcclxubGV0IGRhbWFnZV92YWxpZGF0ZT0oX2RhdGEpPT5cclxue1xyXG4gICAgaWYoZGF0YV9jYWNoZWQpXHJcbiAgICB7XHJcbiAgICAgICAgcmV0dXJuIGNhY2hlZF92YWxpZGF0ZShfZGF0YSk7XHJcbiAgICB9XHJcbiAgICBkYXRhX2NhY2hlZD10cnVlO1xyXG4gICAgY2FjaGVkX3ZhbGlkYXRlPXBhcnRpYWxfdmFsaWRhdGUoZGFtYWdlX2RhdGFfdGFibGUsIGRhdGFfdGFibGVfa2V5cyk7XHJcbiAgICByZXR1cm4gY2FjaGVkX3ZhbGlkYXRlKF9kYXRhKTtcclxufTtcclxuXHJcblxyXG4vL2NvbXBsZXRlZCBmdW5jdGlvbiBmb3IgY2hlY2tpbmcgaWYgZGF0YSBoYXMgZGF0YVxyXG5sZXQgaGFzX2ZlYXR1cmU9KF9wa2V5LF9kYXRhKT0+XHJcbntcclxuICAgIHJldHVybiBwYXJ0aWFsX2hhc19mZWF0dXJlKGRhbWFnZV9kYXRhX3RhYmxlKShfcGtleSxfZGF0YSk7XHJcbn07XHJcblxyXG4vL2NvbXBsZXRlZCBmdW5jdGlvbiBmb3IgcmV0dXJuaW5nIG1hdGNoaW5nIGRhdGFcclxubGV0IGdldF9mZWF0dXJlPShfcGtleSxfZGF0YSk9PlxyXG57XHJcbiAgICByZXR1cm4gcGFydGlhbF9nZXRfZmVhdHVyZShkYW1hZ2VfZGF0YV90YWJsZSwgaGFzX2ZlYXR1cmUpKF9wa2V5LF9kYXRhKTtcclxufTtcclxuXHJcbi8vY29tcGxldGVkIGZ1bmN0aW9uIGZvciByZXR1cm5pbmcgY2xlYWVkIGRhdGFcclxubGV0IGNsZWFuZWRfZmVhdHVyZT1cclxuICAgIHBhcnRpYWxfY2xlYW5lZF9mZWF0dXJlKGRhbWFnZV92YWxpZGF0ZSwgaGFzX2ZlYXR1cmUsIGdldF9mZWF0dXJlLCBkZWZhdWx0X2RhdGEsIFwiTWVrX0VNVy1EYW1hZ2VcIik7XHJcblxyXG5leHBvcnQge2RhbWFnZV9kYXRhX3RhYmxlLCBkYW1hZ2VfdmFsaWRhdGUsIGhhc19mZWF0dXJlLCBnZXRfZmVhdHVyZSwgY2xlYW5lZF9mZWF0dXJlLCBjcmVhdGVfZGFtYWdlX2RhdGFfdGFibGV9O1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///77b7\n')}}]);
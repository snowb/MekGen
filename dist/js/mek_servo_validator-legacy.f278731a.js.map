{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./src/store/modules/validators/mek_servo_validator.js","webpack:///./node_modules/core-js/modules/es7.object.entries.js"],"names":["DESCRIPTORS","__webpack_require__","getKeys","toIObject","isEnum","f","module","exports","isEntries","it","key","O","keys","length","i","result","call","push","loopValidators","updateMultipliers","round","validators","e","then","bind","_module","servo_class","cleaned_feature","create_class_table","create_class_data_table","servo_trade","servo_type","armor","armor_filter","filter_data_table","armor_type","armor_RAM","derived","_component","cleanedComponent","alerts","updateList","validatedData","cost_multipliers","data","concat","cost_multiplier","Object","entries","reduce","_multi","_val","armor_cost_multiplier","newCost","selected_servo_class","cost","selected_armor","kills_space_trade","newWeight","total_kills","stopping_power","weight","newTotalKills","kills","kills_modifier","newAvailSpace","space","space_modifier","available_space","validateComponent","loopAlerts","componentsToValidate","validator","pkey","component_prop","skipUpdateList","_loopValidators","selected_servo_type","type","trade_formatted","code","$export","$entries","S"],"mappings":"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","file":"js/mek_servo_validator-legacy.f278731a.js","sourcesContent":["var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","let validators={};\r\n\r\nimport(/* webpackChunkName: \"mek_servo-class-data-module\" */\"@/data_table_modules/mek_servo/mek_servo-class-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.servo_class=_module.cleaned_feature;\r\n    validators.create_class_table=_module.create_class_data_table;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_servo-kills-space-trade-data-module\" */\"@/data_table_modules/mek_servo/mek_servo-kills-space-trade-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.servo_trade=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_servo-type-data-module\" */\"@/data_table_modules/mek_servo/mek_servo-type-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.servo_type=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_armor-data-module\" */\"@/data_table_modules/mek_armor/mek_armor-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.armor=_module.cleaned_feature;\r\n    validators.armor_filter=_module.filter_data_table;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_armor-type-data-module\" */\"@/data_table_modules/mek_armor/mek_armor-type-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.armor_type=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_armor-RAM-data-module\" */\"@/data_table_modules/mek_armor/mek_armor-RAM-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.armor_RAM=_module.cleaned_feature;\r\n});\r\n\r\nlet loopValidators, updateMultipliers, round;\r\nimport(/* webpackChunkName: \"validator_functions\" */\"./validator_functions\")\r\n.then((_module)=>\r\n{\r\n    ({loopValidators, updateMultipliers, round} = _module);\r\n});\r\n\r\nvalidators.derived=(_component)=>\r\n{//component unique derived value validation\r\n    let cleanedComponent=_component;\r\n    let alerts=[];\r\n    let updateList=[\"selected_armor_type\",\"selected_absorption\"];\r\n    //update multipliers\r\n    let validatedData=updateMultipliers(updateList,cleanedComponent,\"Mek-Servo\");\r\n    cleanedComponent.cost_multipliers.armor=validatedData.data;\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    let cost_multiplier=Object.entries(cleanedComponent.cost_multipliers.armor).reduce((_multi, _val)=>\r\n    {//calc new cost_multiplier\r\n        return _multi*_val[1];\r\n    },1);\r\n    cost_multiplier=round(cost_multiplier,2);\r\n    if(cleanedComponent.armor_cost_multiplier!=cost_multiplier)\r\n    {//correct cost_multiplier if mismatch\r\n        alerts.push(\"Mek-Servo: cost_multiplier.armor\");\r\n        alerts.push(\"**** Invalid Armor Cost Multiplier. Correcting. ****\");\r\n        cleanedComponent.armor_cost_multiplier=cost_multiplier;\r\n    }\r\n    let newCost=cleanedComponent.selected_servo_class.cost\r\n                + (cleanedComponent.selected_armor.cost * cleanedComponent.armor_cost_multiplier)\r\n                + cleanedComponent.kills_space_trade.cost;\r\n    newCost=round(newCost,2);\r\n    if(cleanedComponent.cost!=newCost)\r\n    {//correct cost if mismatch\r\n        alerts.push(\"Mek-Servo: cost\");\r\n        alerts.push(\"**** Invalid Cost. Correcting. ****\");\r\n        cleanedComponent.cost=newCost;\r\n    }\r\n    let newWeight=(cleanedComponent.total_kills + cleanedComponent.selected_armor.stopping_power)/2;\r\n    newWeight=round(newWeight,2);\r\n    if(cleanedComponent.weight!=newWeight)\r\n    {//correct weight if mismatch\r\n        alerts.push(\"Mek-Servo: weight\");\r\n        alerts.push(\"**** Invalid Weight. Correcting. ****\");\r\n        cleanedComponent.weight=newWeight;\r\n    }\r\n    // update total kills\r\n    let newTotalKills=cleanedComponent.selected_servo_class.kills \r\n                        + cleanedComponent.kills_space_trade.kills_modifier;\r\n    if(cleanedComponent.total_kills!=newTotalKills)\r\n    {\r\n        alerts.push(\"Mek-Servo: total_kills\");\r\n        alerts.push(\"**** Invalid Total Kills. Correcting. ****\");\r\n        cleanedComponent.total_kills=newTotalKills\r\n    }\r\n    // update available_space\r\n    let newAvailSpace=cleanedComponent.selected_servo_class.space \r\n                        + cleanedComponent.kills_space_trade.space_modifier;\r\n    if(cleanedComponent.available_space!=newAvailSpace)\r\n    {\r\n        alerts.push(\"Mek-Servo: available_space\");\r\n        alerts.push(\"**** Invalid Available Space. Correcting. ****\");\r\n        cleanedComponent.available_space=newAvailSpace\r\n    }\r\n        \r\n    return {data:cleanedComponent,alerts:alerts}\r\n};\r\n\r\nlet validateComponent=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let validatedData;\r\n    //let updateList=[\"selected_armor_type\",\"selected_absorption\"];\r\n    let loopAlerts;\r\n    let alerts=[];\r\n    let componentsToValidate=\r\n    [\r\n        {validator:validators.servo_type,pkey:\"type\",component_prop:\"selected_servo_type\",skipUpdateList:true},\r\n        {validator:validators.armor_type,pkey:\"damage_coefficient\",component_prop:\"selected_armor_type\",},\r\n        {validator:validators.armor_RAM,pkey:\"absorption\",component_prop:'selected_absorption'},\r\n    ];\r\n    ({cleanedComponent, loopAlerts} = loopValidators(componentsToValidate, cleanedComponent));\r\n    alerts=alerts.concat(loopAlerts)\r\n    //update mek_servo class table based on mek servo type\r\n    validators.create_class_table(_component.selected_servo_type.type);\r\n    //validate servo-class\r\n    validatedData=validators.servo_class(\"code\",_component.selected_servo_class);\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.selected_servo_class=validatedData.data;\r\n    //generate properly formatted kill-space-trade data\r\n    let trade_formatted=\r\n        {\r\n            kills_modifier:_component.kills_space_trade.kills_modifier,\r\n            space_modifier:_component.kills_space_trade.space_modifier,\r\n            cost:_component.kills_space_trade.cost,\r\n            kills:_component.kills_space_trade.kills,\r\n            space:_component.kills_space_trade.space\r\n        };\r\n    //validate servo-kills-space-trade\r\n    validatedData=validators.servo_trade(\r\n        trade_formatted,\r\n        _component.selected_servo_class.kills,\r\n        _component.selected_servo_class.space);\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.kills_space_trade=validatedData.data;\r\n    //update armor based on servo class\r\n    validators.armor_filter(_component.selected_servo_class.code+2);\r\n    //validate armor\r\n    validatedData=validators.armor(\"code\",_component.selected_armor);\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.selected_armor=validatedData.data;\r\n    //validate derived data\r\n    validatedData=validators.derived(cleanedComponent);\r\n    cleanedComponent=validatedData.data;\r\n    alerts=alerts.concat(validatedData.alerts);\r\n\r\n    return {data:cleanedComponent, alerts:alerts};\r\n};\r\n\r\nexport {validateComponent};","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n"],"sourceRoot":""}
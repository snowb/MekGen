{"version":3,"sources":["webpack:///./src/store/modules/validators/mek_projectile_validator.js","webpack:///./node_modules/core-js/library/modules/_object-to-array.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/entries.js","webpack:///./node_modules/core-js/library/modules/es7.object.entries.js","webpack:///./node_modules/core-js/library/fn/object/entries.js"],"names":["loopValidators","updateMultipliers","round","validators","__webpack_require__","e","then","bind","_module","accuracy","cleaned_feature","damage","feature","feature_filter","filter_data_table","range_mod","udpate_range_mod","create_range_mod_data_table","multi_feed","burst_value","space_efficiency","validate_efficiency","derived","_component","validatedData","cleanedComponent","alerts","updateList","cost_multipliers","data","concat","cost_multiplier","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_entries__WEBPACK_IMPORTED_MODULE_0___default","reduce","_multi","_val","push","newDamageCapacity","selected_damage","damage_capacity","newWeight","weight","newCost","cost","efficiencies","space","validateComponent","loopAlerts","componentsToValidate","validator","pkey","component_prop","_loopValidators","selected_burst_value","range","_loopValidators2","getKeys","toIObject","isEnum","f","module","exports","isEntries","it","key","O","keys","length","i","result","call","$export","$entries","S","entries","Object"],"mappings":"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","file":"js/mek_projectile_validator-legacy.9db441da.js","sourcesContent":["let validators = {};\r\n\r\nimport(/* webpackChunkName: \"mek_projectile-accuracy-data-module\" */\"@/data_table_modules/mek_projectile/mek_projectile-accuracy-data-module\")\r\n  .then((_module) => {\r\n    validators.accuracy = _module.cleaned_feature;\r\n  });\r\n\r\nimport(/* webpackChunkName: \"mek_projectile-damage-data-module\" */\"@/data_table_modules/mek_projectile/mek_projectile-damage-data-module\")\r\n  .then((_module) => {\r\n    validators.damage = _module.cleaned_feature;\r\n  });\r\n\r\nimport(/* webpackChunkName: \"mek_projectile-feature-data-module\" */\"@/data_table_modules/mek_projectile/mek_projectile-feature-data-module\")\r\n  .then((_module) => {\r\n    validators.feature = _module.cleaned_feature;\r\n    validators.feature_filter = _module.filter_data_table;\r\n  });\r\n\r\nimport(/* webpackChunkName: \"mek_projectile-range-mod-data-module\" */\"@/data_table_modules/mek_projectile/mek_projectile-range-mod-data-module\")\r\n  .then((_module) => {\r\n    validators.range_mod = _module.cleaned_feature;\r\n    validators.udpate_range_mod = _module.create_range_mod_data_table;\r\n  });\r\n\r\nimport(/* webpackChunkName: \"mek_projectile-multi-feed-data-module\" */\"@/data_table_modules/mek_projectile/mek_projectile-multi-feed-data-module\")\r\n  .then((_module) => {\r\n    validators.multi_feed = _module.cleaned_feature;\r\n  });\r\n\r\nimport(/* webpackChunkName: \"mek_projectile-burst-value-data-module\" */\"@/data_table_modules/mek_projectile/mek_projectile-burst-value-data-module\")\r\n  .then((_module) => {\r\n    validators.burst_value = _module.cleaned_feature;\r\n  });\r\n\r\nimport(/* webpackChunkName: \"mek_space-efficiency-data-module\" */\"@/data_table_modules/universal/mek_space-efficiency-data-module\")\r\n  .then((_module) => {\r\n    validators.space_efficiency = _module.validate_efficiency;\r\n  });\r\n\r\nlet loopValidators, updateMultipliers, round;\r\nimport(/* webpackChunkName: \"validator_functions\" */\"./validator_functions\")\r\n  .then((_module) => {\r\n    ({ loopValidators, updateMultipliers, round } = _module);\r\n  });\r\n\r\nvalidators.derived = (_component) => {\r\n  let cleanedComponent = _component;\r\n  let alerts = [];\r\n  let validatedData;\r\n  let updateList = \r\n    [\r\n      \"selected_accuracy\", \r\n      \"feature_array\",\r\n      \"selected_range_mod\",\r\n      \"selected_burst_value\",\r\n      \"selected_multi_feed\"\r\n    ];\r\n  //update cost_multipliers for components needing update\r\n  validatedData = updateMultipliers(updateList, cleanedComponent, \"Mek-Projectile\");\r\n  cleanedComponent.cost_multipliers = validatedData.data;\r\n  alerts = alerts.concat(validatedData.alerts);\r\n  //update cost_multiplier\r\n  let cost_multiplier = Object.entries(cleanedComponent.cost_multipliers).reduce((_multi, _val) => {//calc new cost_multiplier\r\n    return _multi * _val[1];\r\n  }, 1);\r\n  cost_multiplier = round(cost_multiplier, 2);\r\n  if (cleanedComponent.cost_multiplier != cost_multiplier) {\r\n    alerts.push(\"Mek-Projectile: cost_multiplier\");\r\n    alerts.push(\"**** Invalid Cost Multiplier. Correcting. ****\");\r\n    cleanedComponent.cost_multiplier = round(cost_multiplier, 2);\r\n  }\r\n  let newDamageCapacity = cleanedComponent.selected_damage.damage;\r\n  if (cleanedComponent.damage_capacity != newDamageCapacity) {\r\n    alerts.push(\"Mek-Projectile: damage_capacity\");\r\n    alerts.push(\"**** Invalid Damage Capacity. Correcting. ****\");\r\n    cleanedComponent.damage_capacity = newDamageCapacity;\r\n  }\r\n  let newWeight = round(newDamageCapacity / 2,2);\r\n  if (cleanedComponent.weight != newWeight) {\r\n    alerts.push(\"Mek-Projectile: weight\");\r\n    alerts.push(\"**** Invalid Weight. Correcting. ****\");\r\n    cleanedComponent.weight = newWeight;\r\n  }\r\n  let newCost = (cleanedComponent.selected_damage.cost * cost_multiplier) + cleanedComponent.efficiencies.space.cost;\r\n  newCost = round(newCost, 2);\r\n  if (cleanedComponent.cost != newCost) {\r\n    alerts.push(\"Mek-Projectile: cost\");\r\n    alerts.push(\"**** Invalid Cost. Correcting. ****\");\r\n    cleanedComponent.cost = newCost;\r\n  }\r\n\r\n\r\n  return { data: cleanedComponent, alerts: alerts };\r\n};\r\n\r\nlet validateComponent = (_component) => {\r\n  let cleanedComponent = _component;\r\n  let validatedData;\r\n  let loopAlerts;\r\n  let alerts = [];\r\n  //loop thru independent validations\r\n  let componentsToValidate =\r\n    [\r\n      { validator: validators.damage, pkey: \"damage\", component_prop: \"selected_damage\" },\r\n      { validator: validators.accuracy, pkey: \"accuracy\", component_prop: 'selected_accuracy' },\r\n      { validator: validators.burst_value, pkey: \"burst_value\", component_prop: 'selected_burst_value' },\r\n      { validator: validators.multi_feed, pkey: \"feeds\", component_prop: 'selected_multi_feed' },\r\n    ];\r\n  ({ cleanedComponent, loopAlerts } = loopValidators(componentsToValidate, cleanedComponent));\r\n  alerts = alerts.concat(loopAlerts)\r\n\r\n  //update feature filter, dependent on burst_value\r\n  validators.feature_filter(cleanedComponent.selected_burst_value.burst_value);\r\n  //update range_mod, dependent on base_range from damage\r\n  validators.udpate_range_mod(cleanedComponent.selected_damage.range);\r\n  //loop thru dependent validators\r\n  componentsToValidate =\r\n    [\r\n      { validator: validators.feature, pkey: \"feature\", component_prop: \"feature_array\" },\r\n      { validator: validators.range_mod, pkey: \"range_mod\", component_prop: 'selected_range_mod' },\r\n    ];\r\n  ({ cleanedComponent, loopAlerts } = loopValidators(componentsToValidate, cleanedComponent));\r\n  alerts = alerts.concat(loopAlerts)\r\n\r\n  //update cost_multipliers for components needing update\r\n  validatedData = validators.derived(cleanedComponent);\r\n  cleanedComponent = validatedData.data;\r\n  alerts = alerts.concat(validatedData.alerts);\r\n  //validate space efficienc\r\n  validatedData = validators.space_efficiency(cleanedComponent.efficiencies.space, cleanedComponent.cost, \"Mek-Projectile\");\r\n  alerts = alerts.concat(validatedData.alerts);\r\n  cleanedComponent.efficiencies.space = validatedData.data;\r\n\r\n  return { data: cleanedComponent, alerts: alerts };\r\n};\r\n\r\nexport { validateComponent };","var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n","module.exports = require(\"core-js/library/fn/object/entries\");","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n"],"sourceRoot":""}
(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["mek_missile-feature","mek_missile-feature-data-module"],{"706d":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return partial_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return partial_has_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return partial_get_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return partial_cleaned_feature; });\n//data table module, raw data output for re-use in non-vue-component formats\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \n//          neutral and reusable across all data modules\n//partial data validator\n//called with data_table and validation_keys in data-module\nlet partial_validate = (_data_table, _validation_keys) => _data => {\n  //_data_table: Array, array of data to validate against\n  //_validation_keys: Array, keys to be compared between passed in data and data_table\n  //_data: Object, data to be compared to data table \n  if (typeof _data === "undefined" || !Array.isArray(_validation_keys) || _validation_keys.length == 0) {\n    return false;\n  }\n\n  let valid = _data_table.some(_val => {\n    return _validation_keys.every(_keys => {\n      //return true if all validation_keys in _data match an element in _data_table\n      return _data[_keys] == _val[_keys];\n    });\n  });\n\n  return valid;\n}; //partial_has_feature, determine if provided data table has matching element with provided key and val\n//called in data module to generate full function with local data\n\n\nlet partial_has_feature = _data_table => (_key, _val) => {\n  return _data_table.some(_data => {\n    return _data[_key] !== undefined && _data[_key] == _val;\n  });\n}; //partial get_feature, returns full function for data module\n//requires data_table (array) and module\'s has_feature function\n//returns full matching element in provided data table\n//has_feature must exist in data table module\n\n\nlet partial_get_feature = (_data_table, _has_feature) => (_key, _val) => {\n  let found_feature = null;\n\n  if (_has_feature(_key, _val)) {\n    _data_table.some(_table_val => {\n      if (_table_val[_key] == _val) {\n        found_feature = _table_val;\n        return true;\n      }\n    }, undefined);\n  }\n\n  return found_feature;\n};\n\nlet partial_cleaned_feature = (_validator, _has_feature, _get_feature, _default_data, _name) => (_pkey, _feature) => {\n  //input: primary key, selected feature, filtered data table\n  let data = undefined;\n  let key_list = [];\n  let update = false;\n  let alerts = [];\n  let json_data = JSON.stringify(_feature);\n\n  if (_feature === undefined || !_has_feature(_pkey, _feature[_pkey])) {\n    data = _default_data;\n    key_list = [data[_pkey]];\n    update = true;\n    alerts.push(_name + ": " + json_data);\n    alerts.push("**** Invalid data. Reseting to default. ****");\n  } else if (!_validator(_feature)) {\n    data = JSON.parse(JSON.stringify(_get_feature(_pkey, _feature[_pkey])));\n    key_list = [data[_pkey]];\n    update = true;\n    alerts.push(_name + ": " + json_data);\n    alerts.push("**** Invalid data. Reseting. ****");\n  } else {\n    data = JSON.parse(JSON.stringify(_feature));\n    key_list = [data[_pkey]];\n    update = false;\n  }\n\n  return {\n    data: data,\n    key_list: key_list,\n    update: update,\n    alerts: alerts\n  };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///706d\n')},c257:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "feature_data_table", function() { return feature_data_table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "feature_validate", function() { return feature_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has_feature", function() { return has_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_feature", function() { return get_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cleaned_feature", function() { return cleaned_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filter_data_table", function() { return filter_data_table; });\n/* harmony import */ var _data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("706d");\n//data table module, raw data output for re-use in non-vue-component formats\n //create new feature_data_table\n\nlet raw_feature_data_table = [{\n  feature: "Long Range",\n  cost: 1.33\n}, {\n  feature: "Hypervelocity",\n  cost: 1.25\n}, {\n  feature: "Tunneling",\n  cost: 1.3\n}, {\n  feature: "Home On Jam",\n  cost: 2\n}, {\n  feature: "Fuse",\n  cost: 1.1\n}, {\n  feature: "Foam",\n  cost: 1.33\n}, {\n  feature: "Flare",\n  cost: 0.5\n}, {\n  feature: "Smoke",\n  cost: 0.5,\n  exclusive_smoke_scatter: true\n}, {\n  feature: "Scatter",\n  cost: 0.5,\n  exclusive_smoke_scatter: true\n}, {\n  feature: "Countermissile",\n  cost: 1,\n  exclusive_counter: true\n}, {\n  feature: "Variable Countermissile",\n  cost: 1.8,\n  exclusive_counter: true\n}, {\n  feature: "Smoke-Scatter",\n  cost: 1,\n  exclusive_smoke_scatter: true\n}, {\n  feature: "Nuclear",\n  cost: 1000\n}];\nlet exclusive_smoke_scatter = raw_feature_data_table.filter(_el => {\n  return typeof _el.exclusive_smoke_scatter !== "undefined";\n});\nlet exclusive_counter = raw_feature_data_table.filter(_el => {\n  return typeof _el.exclusive_counter !== "undefined";\n});\nlet data_table_keys = ["feature", "cost", "exclusive_smoke_scatter", "exclusive_counter"];\nlet feature_data_table = raw_feature_data_table;\nlet data_cached = false;\n\nlet filter_data_table = (_blast_radius, _smart) => {\n  data_cached = false;\n\n  if (_blast_radius != "__NIL__" && _smart) {\n    feature_data_table = raw_feature_data_table;\n    return;\n  }\n\n  feature_data_table = raw_feature_data_table.filter(_val => {\n    if (_blast_radius == "__NIL__" && ["nuclear", "scatter", "smoke", "smoke-scatter"].includes(_val.feature.toLowerCase())) {\n      //filter out some features if no blast radius\n      return false;\n    }\n\n    if (!_smart && _val.feature.toLowerCase() == "home on jam") {\n      //filtered out home-on-jam for dumb missiles\n      return false;\n    }\n\n    return true;\n  });\n};\n\nlet cached_validate = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_validate */ "d"])(raw_feature_data_table, data_table_keys); //data validator for feature_data_table\n//call partial_validate with appropriate data for full validate\n\nlet feature_validate = _data => {\n  if (data_cached) {\n    return cached_validate(_data);\n  }\n\n  data_cached = true;\n  cached_validate = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_validate */ "d"])(feature_data_table, data_table_keys);\n  return cached_validate(_data);\n}; //completed function for checking if data has data\n\n\nlet has_feature = (_pkey, _data) => {\n  return Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_has_feature */ "c"])(feature_data_table)(_pkey, _data);\n}; //completed function for returning matching data\n\n\nlet get_feature = (_pkey, _data) => {\n  return Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_get_feature */ "b"])(feature_data_table, has_feature)(_pkey, _data);\n};\n\nlet is_exclusive_feature = function is_exclusive_feature(_exclusive_target, _pkey, _pkey_value) {\n  let exclusive_target_array = null;\n\n  switch (_exclusive_target.toLowerCase()) {\n    case "exclusive_smoke_scatter":\n      exclusive_target_array = exclusive_smoke_scatter;\n      break;\n\n    case "exclusive_counter":\n      exclusive_target_array = exclusive_counter;\n      break;\n  }\n\n  if (exclusive_target_array === null) {\n    return false;\n  }\n\n  return exclusive_target_array.some(_val => {\n    return _val[_pkey] == _pkey_value;\n  });\n};\n/*****\r\n * *\r\n * *    likely need to setup create_feature_data_table taking Blast_Radius and Smart as input\r\n * *    so claned_feature will remove invalid features\r\n * *\r\n *****/\n\n/*** \r\n * \r\n * find way to switch to partial function\r\n * \r\n * ***/\n\n\nlet cleaned_feature = function cleaned_feature(_feature_array, _pkey) {\n  //takes feature_array, returns cleaned array removing multiple exclusive values\n  let hasExclusiveSmokeScatter = false;\n  let hasExclusiveCounter = false;\n  let update = false;\n  let key_list = [];\n  let alerts = [];\n\n  if (_feature_array.length === 0) {\n    return {\n      cleaned_array: [],\n      update: false,\n      key_list: [],\n      alerts: alerts\n    };\n  }\n\n  if (_feature_array === undefined || _pkey === undefined) {\n    alerts.push("Mek_Missile-Feature: ");\n    let error = _feature_array === undefined ? "**** Missing feature array. Returning default. ****" : "**** No primary key provided. Returning default. ****";\n    alerts.push(error);\n    return {\n      cleaned_array: [],\n      update: true,\n      key_list: [],\n      alerts: alerts\n    };\n  }\n\n  let temp_selected_feature_array = _feature_array.reduceRight((_cleaned_array, _val) => {\n    if (_val[_pkey] === undefined) {\n      //if feature with pkey doesn\'t exist in data table, ignore\n      alerts.push("Mek_Missile-Feature: " + JSON.stringify(_val));\n      alerts.push("**** Missing primary key. Ignoring. ****");\n      return _cleaned_array;\n    }\n\n    let clean_feature = _val;\n\n    if (!feature_validate(_val)) {\n      //invalid data\n      alerts.push("Mek_Missile-Feature: " + JSON.stringify(_val));\n      alerts.push("**** Invalid data, attempting to reset. ****");\n      clean_feature = get_feature(_pkey, _val[_pkey]);\n      _val = clean_feature; //replace current value with correct value\n\n      update = true; //attempt to set to corrected feature\n    }\n\n    if (clean_feature === null) {\n      //no matching feature\n      alerts.push("**** Unable to reset. No matching data. ****");\n      update = true;\n      return _cleaned_array; //ignore element\n    }\n\n    let isSmokeScatter = is_exclusive_feature("exclusive_smoke_scatter", _pkey, _val[_pkey]);\n    let isCounter = is_exclusive_feature("exclusive_counter", _pkey, _val[_pkey]);\n\n    if (isSmokeScatter && !hasExclusiveSmokeScatter) {\n      _cleaned_array.push(_val);\n\n      hasExclusiveSmokeScatter = true;\n      key_list.push(_val[_pkey]);\n      return _cleaned_array;\n    } else if (isSmokeScatter && hasExclusiveSmokeScatter) {\n      alerts.push("Mek_Missile-Feature: " + _val);\n      alerts.push("**** Duplicate Exclusive SmokeScatter data. Ignoring. ****");\n      update = true;\n      return _cleaned_array;\n    }\n\n    if (isCounter && !hasExclusiveCounter) {\n      _cleaned_array.push(_val);\n\n      hasExclusiveCounter = true;\n      key_list.push(_val[_pkey]);\n      return _cleaned_array;\n    } else if (isCounter && hasExclusiveCounter) {\n      alerts.push("Mek_Missile-Feature: " + _val);\n      alerts.push("**** Duplicate Exclusive Counter data. Ignoring. ****");\n      update = true;\n      return _cleaned_array;\n    }\n\n    if (!key_list.includes(_val[_pkey])) {\n      _cleaned_array.push(_val);\n\n      key_list.push(_val[_pkey]);\n    }\n\n    return _cleaned_array;\n  }, []);\n\n  temp_selected_feature_array = temp_selected_feature_array.reverse();\n\n  if (temp_selected_feature_array.length == 0) {\n    //empty, reset to default\n    temp_selected_feature_array = [];\n    update = true;\n    key_list = [];\n    alerts.push("Mek_Missile-Feature: ");\n    alerts.push("**** Reseting to default ****");\n  }\n\n  return {\n    cleaned_array: temp_selected_feature_array,\n    update: update,\n    key_list: key_list,\n    alerts: alerts\n  }; //returns an object with the pruned feature array, whether it was updated, and the key_list\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///c257\n')},d866:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony default export */ __webpack_exports__["a"] = ({\n  methods: {\n    addAlert(_alert_string) {\n      this.alerts.push(_alert_string);\n    },\n\n    publishAlerts() {\n      if (this.alerts.length > 0) {\n        this.$store.commit("alertMessage", this.alerts);\n      }\n\n      this.$set(this, "alerts", []);\n    }\n\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWl4aW5zL2FsZXJ0c19taXhpbi5qcz9kODY2Il0sIm5hbWVzIjpbIm1ldGhvZHMiLCJhZGRBbGVydCIsIl9hbGVydF9zdHJpbmciLCJhbGVydHMiLCJwdXNoIiwicHVibGlzaEFsZXJ0cyIsImxlbmd0aCIsIiRzdG9yZSIsImNvbW1pdCIsIiRzZXQiXSwibWFwcGluZ3MiOiJBQUNBO0FBQ0lBLFNBQU8sRUFDUDtBQUNJQyxZQUFRLENBQUNDLGFBQUQsRUFDUjtBQUNJLFdBQUtDLE1BQUwsQ0FBWUMsSUFBWixDQUFpQkYsYUFBakI7QUFDSCxLQUpMOztBQUtJRyxpQkFBYSxHQUNiO0FBQ0ksVUFBRyxLQUFLRixNQUFMLENBQVlHLE1BQVosR0FBbUIsQ0FBdEIsRUFDQTtBQUNJLGFBQUtDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQixjQUFuQixFQUFrQyxLQUFLTCxNQUF2QztBQUNIOztBQUNELFdBQUtNLElBQUwsQ0FBVSxJQUFWLEVBQWUsUUFBZixFQUF3QixFQUF4QjtBQUNIOztBQVpMO0FBRkosQ0FEQSIsImZpbGUiOiJkODY2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHRcclxue1xyXG4gICAgbWV0aG9kczpcclxuICAgIHtcclxuICAgICAgICBhZGRBbGVydChfYWxlcnRfc3RyaW5nKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5hbGVydHMucHVzaChfYWxlcnRfc3RyaW5nKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHB1Ymxpc2hBbGVydHMoKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWYodGhpcy5hbGVydHMubGVuZ3RoPjApXHJcbiAgICAgICAgICAgIHsgICBcclxuICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdChcImFsZXJ0TWVzc2FnZVwiLHRoaXMuYWxlcnRzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLiRzZXQodGhpcyxcImFsZXJ0c1wiLFtdKTtcclxuICAgICAgICB9LFxyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///d866\n')},deb2:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"47c91943-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/design_components/mek_missile/subcomponents/mek_missile-feature.vue?vue&type=template&id=3aac5cff&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'mek-sub-component-table\',{attrs:{"items":_vm.filteredFeatureTable,"pkey":_vm.pkey,"selected-keys":_vm.selected_keys,"headers":{feature:\'Feature\',cost:\'Cost\'},"show-headers":true,"format":{cost:\'multiplier\'},"name":"Features","flow":"pkey-col"},on:{"update-selected-data":_vm.select_feature}})}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./src/design_components/mek_missile/subcomponents/mek_missile-feature.vue?vue&type=template&id=3aac5cff&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js\nvar web_dom_iterable = __webpack_require__("ac6a");\n\n// EXTERNAL MODULE: ./src/mixins/alerts_mixin.js\nvar alerts_mixin = __webpack_require__("d866");\n\n// EXTERNAL MODULE: ./src/data_table_modules/mek_missile/mek_missile-feature-data-module.js\nvar mek_missile_feature_data_module = __webpack_require__("c257");\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/design_components/mek_missile/subcomponents/mek_missile-feature.vue?vue&type=script&lang=js&\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ var mek_missile_featurevue_type_script_lang_js_ = ({\n  name: "mek_beam_feature",\n  props: ["featureArray", "blastRadius", "smartMissile"],\n  mixins: [alerts_mixin["a" /* default */]],\n  components: {\n    "mek-sub-component-table": () => __webpack_require__.e(/* import() | mek_sub-component-table */ "mek_sub-component-table").then(__webpack_require__.bind(null, "a949"))\n  },\n  data: function data() {\n    let obj = {};\n    obj.pkey = "feature";\n    obj.alerts = [];\n    obj.suppressAlerts = false;\n    obj.selected_feature_array = [];\n    return obj;\n  },\n  methods: {\n    select_feature: function select_feature(_selected_feature) {\n      //refactor to external feature array cleaner\n      this.suppressAlerts = true; //suppress alerts, for exclusive switching\n\n      let new_selected_feature_array = this.toggleFeature(this.selected_feature_array, _selected_feature);\n      let cleaned_data = Object(mek_missile_feature_data_module["cleaned_feature"])(new_selected_feature_array, this.pkey);\n      new_selected_feature_array = cleaned_data.cleaned_array;\n\n      if (cleaned_data.alerts.length > 0 && !this.suppressAlerts) {\n        cleaned_data.alerts.forEach(_alert => {\n          this.addAlert(_alert);\n        });\n        this.publishAlerts();\n      }\n\n      this.$set(this, "selected_feature_array", new_selected_feature_array);\n      this.$emit("update-feature", new_selected_feature_array);\n      this.suppressAlerts = false;\n    },\n\n    toggleFeature(_feature_array, _feature) {\n      let feature_array = JSON.parse(JSON.stringify(_feature_array));\n      let remove_feature = feature_array.some(_val => {\n        //if _feature matches already existing feature, flag for deletion\n        return _val[this.pkey] == _feature[this.pkey];\n      }, this);\n\n      if (remove_feature) {\n        //if flagged for removal, filter out\n        return feature_array.filter(_val => {\n          return _val[this.pkey] != _feature[this.pkey];\n        }, this);\n      }\n\n      feature_array.push(_feature); //otherwise add feature and return\n\n      return feature_array;\n    }\n\n  },\n  computed: {\n    filteredFeatureTable() {\n      Object(mek_missile_feature_data_module["filter_data_table"])(this.blastRadius, this.smartMissile);\n      return mek_missile_feature_data_module["feature_data_table"];\n    },\n\n    selected_keys() {\n      this.blastRadius;\n      this.smartMissile;\n      let cleaned_data = Object(mek_missile_feature_data_module["cleaned_feature"])(this.featureArray, this.pkey);\n\n      if (cleaned_data.alerts.length > 0 && !this.suppressAlerts) {\n        cleaned_data.alerts.forEach(_alert => {\n          this.addAlert(_alert);\n        });\n        this.publishAlerts();\n      }\n\n      if (cleaned_data.update) {\n        this.$emit("alert-generated", true);\n        this.$emit("update-feature", cleaned_data.cleaned_array);\n      }\n\n      this.$set(this, "selected_feature_array", cleaned_data.cleaned_array);\n      return cleaned_data.key_list;\n    }\n\n  },\n  watch: {\n    "blastRadius": function blastRadius(_newval, _oldval) {\n      //must track changes in blastRadius to disable alerts for removed features on cleaned_feat\n      if (_newval != _oldval) {\n        this.suppressAlerts = true;\n      }\n    },\n    "smartMissile": function smartMissile(_newval, _oldval) {\n      //must track changes in smartMissile to disable alerts for removed features on cleaned_feat\n      if (_newval != _oldval) {\n        this.suppressAlerts = true;\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/design_components/mek_missile/subcomponents/mek_missile-feature.vue?vue&type=script&lang=js&\n /* harmony default export */ var subcomponents_mek_missile_featurevue_type_script_lang_js_ = (mek_missile_featurevue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__("2877");\n\n// CONCATENATED MODULE: ./src/design_components/mek_missile/subcomponents/mek_missile-feature.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  subcomponents_mek_missile_featurevue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var mek_missile_feature = __webpack_exports__["default"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///deb2\n')}}]);
{"version":3,"sources":["webpack:///./src/data_table_modules/mek_locomotion/mek_locomotion-class-data-module.js","webpack:///./src/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./src/data_table_modules/universal/servo_classes_data.js"],"names":["__webpack_require__","r","__webpack_exports__","d","locomotion_data_table","feature_validate","has_feature","get_feature","cleaned_feature","create_data_table","_data_table_modules_universal_servo_classes_data_js__WEBPACK_IMPORTED_MODULE_0__","_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_1__","default_data","name","cost","kills","raw_locomotion_table","servo_classes_data","map","_val","code","data_table_keys","data_cached","_type","JSON","parse","stringify","cached_validate","partial_validate","_data","_pkey","partial_has_feature","partial_get_feature","partial_cleaned_feature","_data_table","_validation_keys","Array","isArray","length","valid","some","every","_keys","_key","undefined","_has_feature","found_feature","_table_val","_validator","_get_feature","_default_data","_name","_feature","data","key_list","update","alerts","json_data","push","id"],"mappings":"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","file":"js/mek_locomotion-class-data-module.dd9c8503.js","sourcesContent":["//data table module, raw data output for re-use in non-vue-component formats\r\nimport servo_classes_data from \"@/data_table_modules/universal/servo_classes_data.js\";\r\nimport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature} from \"@/data_table_modules/universal/mek_partial-function-data-module\";\r\n\r\n//create new locomotion_table based on servo_classes_data\r\nlet default_data={name:\"Superlight\",cost:1,kills:1};\r\nlet raw_locomotion_table=servo_classes_data.map((_val)=>\r\n{\r\n    return {name: _val.name, cost: _val.code, kills:_val.code};\r\n});\r\nlet locomotion_data_table=raw_locomotion_table;\r\nlet data_table_keys=[\"name\",\"cost\",\"kills\"];\r\n\r\nlet data_cached=false;\r\n\r\nlet create_data_table=(_type)=>\r\n{\r\n    data_cached=false;\r\n    if(_type==\"Treads\")\r\n    {\r\n        locomotion_data_table=servo_classes_data.map((_val)=>\r\n        {\r\n            return {name: _val.name, cost: _val.code*2, kills:_val.code*2};\r\n        });\r\n        return;\r\n    }\r\n    locomotion_data_table=JSON.parse(JSON.stringify(raw_locomotion_table));\r\n};\r\nlet cached_validate=partial_validate(raw_locomotion_table, data_table_keys);\r\n//data validator for locomotion_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet feature_validate=(_data)=>\r\n{\r\n    if(data_cached)\r\n    {\r\n        return cached_validate(_data);\r\n    }\r\n    data_cached=true;\r\n    cached_validate=partial_validate(locomotion_data_table, data_table_keys);\r\n    return cached_validate(_data);\r\n};\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=(_pkey,_data)=>\r\n{\r\n    return partial_has_feature(locomotion_data_table)(_pkey,_data);\r\n};\r\n\r\n//completed function for returning matching data\r\nlet get_feature=(_pkey,_data)=>\r\n{\r\n    return partial_get_feature(locomotion_data_table, has_feature)(_pkey,_data);\r\n};\r\n\r\nlet cleaned_feature=\r\n    partial_cleaned_feature(feature_validate, has_feature, get_feature, default_data, \"Mek_Locomotion\");\r\n\r\nexport {locomotion_data_table, feature_validate, has_feature, get_feature, cleaned_feature, create_data_table};\r\n","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return _validation_keys.every((_keys)=>\r\n        {//return true if all validation_keys in _data match an element in _data_table\r\n            return _data[_keys]==_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","export default\r\n    [\r\n        {code:1,id:\"SL\",name:\"Superlight\"},\r\n        {code:2,id:\"LW\",name:\"Lightweight\"},\r\n        {code:3,id:\"STR\",name:\"Striker\"},\r\n        {code:4,id:\"MS\",name:\"Medium Striker\"},\r\n        {code:5,id:\"HS\",name:\"Heavy Striker\"},\r\n        {code:6,id:\"MW\",name:\"Mediumweight\"},\r\n        {code:7,id:\"LH\",name:\"Light Heavy\"},\r\n        {code:8,id:\"MH\",name:\"Medium Heavy\"},\r\n        {code:9,id:\"AH\",name:\"Armored Heavy\"},\r\n        {code:10,id:\"SH\",name:\"Super Heavy\"},\r\n        {code:11,id:\"MgH\",name:\"Mega Heavy\"}\r\n    ];\r\n\r\n"],"sourceRoot":""}
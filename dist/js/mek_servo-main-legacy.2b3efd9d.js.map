{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.string.includes.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/core-js/modules/es7.array.includes.js","webpack:///./src/mixins/component_computed_mixin.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/design_components/mek_servo/mek_servo-main.vue?dc55","webpack:///src/design_components/mek_servo/mek_servo-main.vue","webpack:///./src/design_components/mek_servo/mek_servo-main.vue?5fed","webpack:///./src/design_components/mek_servo/mek_servo-main.vue","webpack:///./node_modules/core-js/library/fn/json/stringify.js","webpack:///./node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/core-js/modules/_string-context.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./src/mixins/component_methods_mixin.js"],"names":["$export","__webpack_require__","context","INCLUDES","P","F","includes","searchString","this","indexOf","arguments","length","undefined","MATCH","module","exports","KEY","re","e","f","$includes","el","__webpack_exports__","computed","space_cost","round","raw_space","efficiencies","space","modifier","cost_multiplier","multi","cost_multipliers","weight","damage_capacity","feature_list","feature_array","reduce","_string","_val","_index","feature","newComponent","selectedComponent","JSON","parse","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","$store","getters","uuid","component_category","component_type","ingest_data","dP","FProto","Function","prototype","nameRE","NAME","configurable","get","match","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","width","attrs","new-component","component-name","component_name","servo_name","component-changed","component_changed","on","update-component-name","updateComponentName","align-self","servo-type","selected_servo_type","update-servo-type","updateServoType","base_kills","selected_servo_class","kills","kills_modifier","kills_space_trade","space_modifier","base_space","update-extra-space","updateExtraSpace","type","servo-class","update-servo-class","updateServoClass","armor","selected_armor","max-armor","code","update-armor","updateArmor","cost","armor-type","selected_armor_type","update-armor-type","updateArmorType","_e","absorption","selected_absorption","update-absorption","updateAbsorption","cols","rows","slot","_v","_s","total_kills","stopping_power","final_stopping_power","padding-left","damage_coefficient","is_arm","is_leg","damage_bonus","throw_range","available_space","base_cost","font-weight","save-reset-component","componentSaveReset","staticRenderFns","mek_servo_mainvue_type_script_lang_js_","name","props","mixins","utility_mixin","component_methods_mixin","component_computed_mixin","components","mek-servo-type","then","bind","mek-servo-class","mek-servo-kills-space-trade","mek-component-name","mek-save-reset-component","mek-component-stats","mek-armor","mek-armor-type","mek-energy-absorbing-armor","data","obj","original_component","id","armor_type","armor_penalty","methods","_servo_type","$set","_servo_class","_armor","_armor_type","stringify_default","_absorption","_kills_space_trade","_data_object","_this","alertMessage","universal_ingest_data","$nextTick","output_data","_this2","return_data","create_uuid","_action","action","commit","servo_class","reinforced","absorbing","additional","trim","replace","servo_kills","kills_space_trade_sp_loss","toLowerCase","mek_servo_mek_servo_mainvue_type_script_lang_js_","component","Object","componentNormalizer","core","$JSON","stringify","it","apply","isObject","cof","isRegExp","defined","that","TypeError","String","_alertMessage","_property","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_5___default","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_keys__WEBPACK_IMPORTED_MODULE_2___default","_computedWatchers","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0___default","_sub_property","$forceUpdate","_name","addAlert","_alert_string","alerts","push","publishAlerts"],"mappings":"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","file":"js/mek_servo-main-legacy.2b3efd9d.js","sourcesContent":["// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","export default\r\n{\r\n    computed:\r\n    {\r\n        space_cost()\r\n        {\r\n            return this.round(this.raw_space - this.efficiencies.space.modifier,2);\r\n        },\r\n        cost_multiplier()\r\n        {\r\n            let cost_multiplier=1;\r\n            for(let multi in this.cost_multipliers)\r\n            {\r\n                cost_multiplier*=this.cost_multipliers[multi];\r\n            }\r\n            return this.round(cost_multiplier,2);\r\n        },\r\n        weight()\r\n        {\r\n            return this.round((this.damage_capacity / 2),2);\r\n        },\r\n        feature_list()\r\n        {\r\n            if(typeof this.feature_array===\"undefined\")\r\n            {\r\n                return \"\";\r\n            }\r\n            return this.feature_array.reduce(function(_string, _val, _index)\r\n            {\r\n                _string+=_index>0 ? \", \" : \"\";\r\n                _string+=_val.feature;\r\n                return _string;\r\n            },\"\");\r\n        },\r\n        newComponent()\r\n        {//responsible for ingesting data from the store\r\n            let selectedComponent=JSON.parse(JSON.stringify(this.$store.getters.selectedComponent));\r\n\r\n            if(typeof selectedComponent!==\"undefined\" && selectedComponent!==null)\r\n            {\r\n                if(selectedComponent.uuid!==this.uuid \r\n                    && selectedComponent.component_category==this.component_category\r\n                    && selectedComponent.component_type==this.component_type)\r\n                {\r\n                    this.ingest_data(selectedComponent);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n    }\r\n};","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"mek-inline-flex-col\",staticStyle:{\"width\":\"100%\"}},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.servo_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('span',{staticClass:\"mek-inline-flex-row\"},[_c('span',{staticClass:\"mek-inline-flex-col\"},[_c('mek-servo-type',{staticStyle:{\"align-self\":\"flex-start\"},attrs:{\"servo-type\":_vm.selected_servo_type},on:{\"update-servo-type\":_vm.updateServoType}}),_c('mek-servo-kills-space-trade',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"base_kills\":_vm.selected_servo_class.kills,\"kills_modifier\":_vm.kills_space_trade.kills_modifier,\"space_modifier\":_vm.kills_space_trade.space_modifier,\"base_space\":_vm.selected_servo_class.space},on:{\"update-extra-space\":_vm.updateExtraSpace}})],1),_c('mek-servo-class',{attrs:{\"servo-type\":_vm.selected_servo_type.type,\"servo-class\":_vm.selected_servo_class},on:{\"update-servo-class\":_vm.updateServoClass}}),_c('mek-armor',{attrs:{\"armor\":_vm.selected_armor,\"max-armor\":_vm.selected_servo_class.code+2},on:{\"update-armor\":_vm.updateArmor}}),_c('span',{staticClass:\"mek-inline-flex-col\"},[(_vm.selected_armor.cost!=0)?_c('mek-armor-type',{attrs:{\"armor-type\":_vm.selected_armor_type},on:{\"update-armor-type\":_vm.updateArmorType}}):_vm._e(),(_vm.selected_armor.cost!=0)?_c('mek-energy-absorbing-armor',{attrs:{\"absorption\":_vm.selected_absorption},on:{\"update-absorption\":_vm.updateAbsorption}}):_vm._e()],1)],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":6}},[_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Base Kills: \"+_vm._s(_vm.selected_servo_class.kills))]),_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_vm._v(\"Total Kills: \"+_vm._s(_vm.total_kills))]),(_vm.selected_armor.cost!=0)?_c('div',{attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Base Armor Stopping Power: \"+_vm._s(_vm.round(_vm.selected_armor.stopping_power,2))+\"\\n                \"),_c('br'),_vm._v(\"Final Stopping Power: \"+_vm._s(_vm.round(_vm.final_stopping_power,2))+\"\\n            \")]):_vm._e(),(_vm.selected_armor.cost!=0)?_c('div',{attrs:{\"slot\":\"col1-row4\"},slot:\"col1-row4\"},[_vm._v(\"Armor Type: \"+_vm._s(_vm.selected_armor_type.type))]):_vm._e(),(_vm.selected_armor.cost!=0)?_c('div',{staticStyle:{\"padding-left\":\"10px\"},attrs:{\"slot\":\"col1-row5\"},slot:\"col1-row5\"},[_vm._v(\"Damage Coefficient: \"+_vm._s(_vm.selected_armor_type.damage_coefficient))]):_vm._e(),(_vm.selected_absorption.cost!=1)?_c('div',{attrs:{\"slot\":\"col1-row6\"},slot:\"col1-row6\"},[_vm._v(\"Absorption: \"+_vm._s(_vm.selected_absorption.absorption*100)+\"%\")]):_vm._e(),(_vm.is_arm | _vm.is_leg)?_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Damage Bonus: \"+_vm._s(_vm.selected_servo_class.damage_bonus))]):_vm._e(),(_vm.is_arm)?_c('div',{attrs:{\"slot\":\"col2-row2\"},slot:\"col2-row2\"},[_vm._v(\"Throw Range: \"+_vm._s(_vm.selected_servo_class.throw_range))]):_vm._e(),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.selected_servo_class.space))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Available Space: \"+_vm._s(_vm.available_space))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.weight)+\" tons\")]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.base_cost))]),_c('div',{attrs:{\"slot\":\"col4-row2\"},slot:\"col4-row2\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.cost_multiplier))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row3\"},slot:\"col4-row3\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <span class=\"mek-inline-flex-col\" style=\"width:100%;\">\r\n        <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||servo_name\"\r\n            :component-changed=\"component_changed\"\r\n            @update-component-name=\"updateComponentName\"\r\n        ></mek-component-name>\r\n        <span class=\"mek-inline-flex-row\">\r\n            <span class=\"mek-inline-flex-col\">\r\n                <mek-servo-type :servo-type=\"selected_servo_type\" @update-servo-type=\"updateServoType\"\r\n                    style=\"align-self:flex-start;\"\r\n                ></mek-servo-type>\r\n                <mek-servo-kills-space-trade style=\"align-self:baseline;\"\r\n                    :base_kills=\"selected_servo_class.kills\" :kills_modifier=\"kills_space_trade.kills_modifier\" \r\n                    :space_modifier=\"kills_space_trade.space_modifier\" :base_space=\"selected_servo_class.space\"\r\n                    @update-extra-space=\"updateExtraSpace\"\r\n                ></mek-servo-kills-space-trade>\r\n                <!--- ADD KILLS FOR SPACE CONVERTER --->\r\n                <!--- add reinforcing component --->\r\n            </span>\r\n            <mek-servo-class @update-servo-class=\"updateServoClass\"\r\n                :servo-type=\"selected_servo_type.type\" :servo-class=\"selected_servo_class\"\r\n            ></mek-servo-class>\r\n            <mek-armor :armor=\"selected_armor\"  :max-armor=\"selected_servo_class.code+2\"\r\n                @update-armor=\"updateArmor\"\r\n            ></mek-armor>\r\n            <span class=\"mek-inline-flex-col\">\r\n                <mek-armor-type :armor-type=\"selected_armor_type\" v-if=\"selected_armor.cost!=0\"\r\n                    @update-armor-type=\"updateArmorType\"\r\n                ></mek-armor-type>\r\n                <mek-energy-absorbing-armor :absorption=\"selected_absorption\" v-if=\"selected_armor.cost!=0\"\r\n                    @update-absorption=\"updateAbsorption\"\r\n                ></mek-energy-absorbing-armor>\r\n            </span>\r\n        </span>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-component-stats :cols=\"4\" :rows=\"6\">\r\n                <div slot=\"col1-row1\">Base Kills: {{selected_servo_class.kills}}</div>\r\n                <div slot=\"col1-row2\">Total Kills: {{total_kills}}</div>\r\n                <div slot=\"col1-row3\" v-if=\"selected_armor.cost!=0\">Base Armor Stopping Power: {{round(selected_armor.stopping_power,2)}}\r\n                    <br>Final Stopping Power: {{round(final_stopping_power,2)}}\r\n                </div>\r\n                <div slot=\"col1-row4\" v-if=\"selected_armor.cost!=0\">Armor Type: {{selected_armor_type.type}}</div>\r\n                <div slot=\"col1-row5\" v-if=\"selected_armor.cost!=0\" style=\"padding-left:10px;\">Damage Coefficient: {{selected_armor_type.damage_coefficient}}</div>\r\n                <div slot=\"col1-row6\" v-if=\"selected_absorption.cost!=1\">Absorption: {{selected_absorption.absorption*100}}%</div>\r\n\r\n                <div slot=\"col2-row1\" v-if=\"is_arm | is_leg\">Damage Bonus: {{selected_servo_class.damage_bonus}}</div>\r\n                <div slot=\"col2-row2\" v-if=\"is_arm\">Throw Range: {{selected_servo_class.throw_range}}</div>\r\n\r\n                <div slot=\"col3-row1\">Base Space: {{selected_servo_class.space}}</div>\r\n                <div slot=\"col3-row2\">Available Space: {{available_space}}</div>\r\n                <div slot=\"col3-row3\">Weight: {{weight}} tons</div>\r\n                \r\n                <div slot=\"col4-row1\">Base Cost: {{base_cost}}</div>\r\n                <div slot=\"col4-row2\">Multiplier: x{{cost_multiplier}}</div>\r\n                <div slot=\"col4-row3\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n            </mek-component-stats>\r\n            <mek-save-reset-component @save-reset-component=\"componentSaveReset\"></mek-save-reset-component>\r\n        </div>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\nimport utility_mixin from \"../../mixins/utility_mixin.js\";\r\nimport component_methods_mixin from \"../../mixins/component_methods_mixin\";\r\nimport component_computed_mixin from \"../../mixins/component_computed_mixin\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_servo\",\r\n    props:[],\r\n    mixins:\r\n        [\r\n            utility_mixin, \r\n            component_methods_mixin, \r\n            component_computed_mixin\r\n        ],\r\n    components:\r\n    {\r\n        \"mek-servo-type\":()=>import(/* webpackChunkName: \"mek_servo-type\" */\"./subcomponents/mek_servo-type.vue\"),\r\n        \"mek-servo-class\":()=>import(/* webpackChunkName: \"mek_servo-class\" */\"./subcomponents/mek_servo-class.vue\"),\r\n        \"mek-servo-kills-space-trade\":()=>import(/* webpackChunkName: \"mek_servo-kills-space-trade\" */\"./subcomponents/mek_servo-kills-space-trade.vue\"),\r\n\r\n        \"mek-component-name\":()=>import(/* webpackChunkName: \"mek_component-name\" */\"../universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>import(/* webpackChunkName: \"mek_save-reset-component\" */\"../universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>import(/* webpackChunkName: \"mek_component-stats\" */\"../universal/mek_component-stats.vue\"),\r\n\r\n        \"mek-armor\":()=>import(/* webpackChunkName: \"mek_armor\" */\"../universal/mek_armor.vue\"),\r\n        \"mek-armor-type\":()=>import(/* webpackChunkName: \"mek_armor-type\" */\"../universal/mek_armor-type.vue\"),\r\n        \"mek-energy-absorbing-armor\":()=>import(/* webpackChunkName: \"mek_energy-absorbing-armor\" */\"../universal/mek_energy-absorbing-armor.vue\"),\r\n        \r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.uuid=null;\r\n        obj.component_name=null;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"servo\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.selected_servo_type={type:\"Torso\"};\r\n        obj.selected_servo_class={code:1,name:\"Superlight\",space:2,cost:2,kills:2,id:\"SL\"};\r\n\r\n        obj.cost_multipliers={};\r\n\r\n        obj.selected_armor={name:\"None\",cost:0,stopping_power:0,code:0};\r\n        \r\n        obj.selected_armor_type={type:\"Standard\",damage_coefficient:1,cost:1};\r\n        obj.cost_multipliers.armor_type=1;\r\n\r\n        obj.selected_absorption={absorption:0,cost:1,armor_penalty:0};\r\n        obj.cost_multipliers.absorption=1;\r\n\r\n        obj.kills_space_trade={};\r\n        obj.kills_space_trade.space_modifier=0;\r\n        obj.kills_space_trade.kills_modifier=0;\r\n        obj.kills_space_trade.cost=0;\r\n\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        updateServoType(_servo_type)\r\n        {   \r\n            this.component_type=_servo_type.type;\r\n            this.$set(this,\"selected_servo_type\",_servo_type);\r\n            this.component_changed=true;\r\n        },\r\n        updateServoClass(_servo_class)\r\n        {\r\n            this.$set(this,\"selected_servo_class\",_servo_class);\r\n            this.component_changed=true;\r\n        },\r\n        updateArmor(_armor)\r\n        {\r\n            this.$set(this,\"selected_armor\",_armor);\r\n            this.component_changed=true;\r\n            if(_armor.stopping_power==0)\r\n            {//reset RAM and Armor type on selecting No-Armor\r\n                this.updateAbsorption({absorption:0,cost:1,armor_penalty:0});\r\n                this.updateArmorType({type:\"Standard\",damage_coefficient:1,cost:1});\r\n            }\r\n        },\r\n        updateArmorType(_armor_type)\r\n        {\r\n            this.$set(this,\"selected_armor_type\",JSON.parse(JSON.stringify(_armor_type)));\r\n            this.cost_multipliers.armor_type=this.selected_armor_type.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateAbsorption(_absorption)\r\n        {\r\n            this.$set(this,\"selected_absorption\",JSON.parse(JSON.stringify(_absorption)));\r\n            this.cost_multipliers.absorption=this.selected_absorption.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateExtraSpace(_kills_space_trade)\r\n        {\r\n            this.kills_space_trade.space_modifier=_kills_space_trade.space;\r\n            this.kills_space_trade.kills_modifier=_kills_space_trade.kills;\r\n            this.kills_space_trade.cost=_kills_space_trade.cost;\r\n            this.component_changed=true;\r\n        },\r\n        ingest_data(_data_object)\r\n        {\r\n            let alertMessage=\"Torso bad, resetting to 'standard' shield.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(this.component_name==this.servo_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n        },\r\n        output_data()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"servo\";\r\n            return_data.component_name=this.component_name===null?this.servo_name:this.component_name;\r\n            return_data.selected_servo_type=JSON.parse(JSON.stringify(this.selected_servo_type));\r\n            return_data.selected_servo_class=JSON.parse(JSON.stringify(this.selected_servo_class));\r\n            return_data.selected_armor=JSON.parse(JSON.stringify(this.selected_armor));\r\n            return_data.selected_armor_type=JSON.parse(JSON.stringify(this.selected_armor_type));\r\n            return_data.selected_absorption=JSON.parse(JSON.stringify(this.selected_absorption));\r\n            return_data.cost_multipliers=JSON.parse(JSON.stringify(this.cost_multipliers));\r\n            return_data.kills_space_trade=JSON.parse(JSON.stringify(this.kills_space_trade));\r\n            \r\n            return_data.cost=this.cost;\r\n            return_data.cost_multiplier=this.cost_multiplier;\r\n            return_data.weight=this.weight;\r\n            return_data.total_kills=this.total_kills;\r\n            return_data.available_space=this.available_space;\r\n\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return return_data;\r\n        },\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"clear\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                    }\r\n                    break;\r\n                case \"clear\":\r\n                    this.uuid=null;\r\n                    this.selected_servo_type.type=\"Torso\";\r\n                    this.$set(this,\"selected_servo_class\",{code:1,name:\"Superlight\",space:2,cost:2,kills:2})\r\n                    this.$set(this,\"selected_armor\",{name:\"None\",cost:0,stopping_power:0,code:0});\r\n                    this.$set(this,\"selected_armor_type\",{type:\"Standard\",damage_coefficient:1,cost:1});\r\n                    this.cost_multipliers.armor_type=1;\r\n                    this.$set(this,\"selected_absorption\",{absorption:0,cost:1,armor_penalty:1});\r\n                    this.cost_multipliers.absorption=1;\r\n                    this.$set(this,\"kills_space_trade\",{space_modifier:0,kills_modifier:0,cost:0});\r\n                    this.component_name=null;\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        servo_name()\r\n        {\r\n            let type=this.selected_servo_type.type;\r\n            let servo_class=this.selected_servo_class.name;\r\n            let reinforced=this.kills_space_trade.kills_modifier>0 ? \" Reinforced \" : \"\";\r\n            let armor_type=this.selected_armor_type.type;\r\n            let armor=this.selected_armor.cost>0 && this.selected_armor_type.cost==1 ? \" Armored \" :\r\n                        this.selected_armor.cost>0 && this.selected_armor_type.cost!=1 ? \" \"+armor_type+\"-Armored \" :\r\n                        \"\";\r\n            let absorbing=this.selected_absorption.cost>1 ? \" Absorbing \":\"\";\r\n            let additional=reinforced!=\"\"||this.selected_armor.cost>0 ? \" - \" : \"\";\r\n            let name=type+\" \"+servo_class+\" Servo\"+additional+reinforced+absorbing+armor;\r\n            name=name.trim();\r\n            name=name.replace(/\\s+/gi,\" \");\r\n            return name;\r\n        },\r\n        base_cost()\r\n        {\r\n            return this.selected_servo_class.cost + this.selected_armor.cost + this.kills_space_trade.cost;\r\n        },\r\n        cost()\r\n        {\r\n            return this.selected_servo_class.cost + (this.selected_armor.cost*this.cost_multiplier) + this.kills_space_trade.cost;\r\n        },\r\n        available_space()\r\n        {\r\n            return this.selected_servo_class.space + this.kills_space_trade.space_modifier;\r\n        },\r\n        damage_capacity()\r\n        {\r\n            let servo_kills=this.selected_servo_class.kills;\r\n            let kills_space_trade_sp_loss=this.kills_space_trade.kills_modifier;\r\n            return servo_kills + this.final_stopping_power + kills_space_trade_sp_loss;\r\n        },\r\n        total_kills()\r\n        {\r\n            return this.selected_servo_class.kills + this.kills_space_trade.kills_modifier;\r\n        },\r\n        weight()\r\n        {\r\n            return this.round(this.damage_capacity/2,2);\r\n        },\r\n        final_stopping_power()\r\n        {\r\n            return this.selected_armor.stopping_power-(this.selected_armor.stopping_power*this.selected_absorption.armor_penalty);\r\n        },\r\n        is_arm()\r\n        {\r\n            return this.selected_servo_type.type.toLowerCase()==\"arm\";\r\n        },\r\n        is_leg()\r\n        {\r\n            return this.selected_servo_type.type.toLowerCase()==\"leg\";\r\n        }\r\n    }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_servo-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_servo-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_servo-main.vue?vue&type=template&id=0fddf54c&\"\nimport script from \"./mek_servo-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_servo-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","module.exports = require(\"core-js/library/fn/json/stringify\");","export default\r\n{\r\n    methods:\r\n    {\r\n        universal_ingest_data(_data_object,_alertMessage)\r\n        {\r\n            this.original_component=JSON.stringify(_data_object);//store a copy as a JSON object for 'reset' purposes\r\n            if(_data_object===null)\r\n            {\r\n                this.componentSaveReset(\"clear\");\r\n                //generic error comment\r\n                this.$store.commit(\"alertMessage\",_alertMessage);\r\n            }\r\n\r\n            for(let _property in _data_object)\r\n            {//exclude computed properties that are auto updated\r\n                if(Object.keys(this._computedWatchers).includes(_property))\r\n                {\r\n                    continue;\r\n                }\r\n                if(typeof _data_object[_property]===\"object\" && !Array.isArray(_data_object[_property]))\r\n                {\r\n                    if(typeof this[_property]!==\"object\" || this[_property]===null)\r\n                    {\r\n                        this[_property]={};\r\n                    }\r\n                    for(let _sub_property in _data_object[_property])\r\n                    {\r\n                        this.$set(this[_property],[_sub_property],_data_object[_property][_sub_property]);\r\n                    }\r\n                }\r\n                else if(Array.isArray(_data_object[_property]))\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n                else\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n            }\r\n            this.$forceUpdate();\r\n        },\r\n        updateComponentName:function(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
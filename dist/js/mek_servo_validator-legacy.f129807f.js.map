{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/_object-to-array.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/entries.js","webpack:///./node_modules/core-js/library/modules/es7.object.entries.js","webpack:///./node_modules/core-js/library/fn/object/entries.js","webpack:///./src/store/modules/validators/mek_servo_validator.js"],"names":["getKeys","__webpack_require__","toIObject","isEnum","f","module","exports","isEntries","it","key","O","keys","length","i","result","call","push","$export","$entries","S","entries","Object","loopValidators","updateMultipliers","round","validators","e","then","bind","_module","servo_class","cleaned_feature","create_class_table","create_class_data_table","servo_trade","servo_type","armor","armor_filter","filter_data_table","armor_type","armor_RAM","derived","_component","cleanedComponent","alerts","updateList","validatedData","cost_multipliers","data","concat","cost_multiplier","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_entries__WEBPACK_IMPORTED_MODULE_0___default","reduce","_multi","_val","armor_cost_multiplier","newCost","selected_servo_class","cost","selected_armor","kills_space_trade","newWeight","total_kills","stopping_power","weight","newTotalKills","kills","kills_modifier","newAvailSpace","space","space_modifier","available_space","validateComponent","loopAlerts","componentsToValidate","validator","pkey","component_prop","skipUpdateList","_loopValidators","selected_servo_type","type","trade_formatted","code"],"mappings":"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","file":"js/mek_servo_validator-legacy.f129807f.js","sourcesContent":["var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n","module.exports = require(\"core-js/library/fn/object/entries\");","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n","let validators={};\r\n\r\nimport(/* webpackChunkName: \"mek_servo-class-data-module\" */\"@/data_table_modules/mek_servo/mek_servo-class-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.servo_class=_module.cleaned_feature;\r\n    validators.create_class_table=_module.create_class_data_table;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_servo-kills-space-trade-data-module\" */\"@/data_table_modules/mek_servo/mek_servo-kills-space-trade-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.servo_trade=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_servo-type-data-module\" */\"@/data_table_modules/mek_servo/mek_servo-type-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.servo_type=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_armor-data-module\" */\"@/data_table_modules/mek_armor/mek_armor-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.armor=_module.cleaned_feature;\r\n    validators.armor_filter=_module.filter_data_table;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_armor-type-data-module\" */\"@/data_table_modules/mek_armor/mek_armor-type-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.armor_type=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_armor-RAM-data-module\" */\"@/data_table_modules/mek_armor/mek_armor-RAM-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.armor_RAM=_module.cleaned_feature;\r\n});\r\n\r\nlet loopValidators, updateMultipliers, round;\r\nimport(/* webpackChunkName: \"validator_functions\" */\"./validator_functions\")\r\n.then((_module)=>\r\n{\r\n    ({loopValidators, updateMultipliers, round} = _module);\r\n});\r\n\r\nvalidators.derived=(_component)=>\r\n{//component unique derived value validation\r\n    let cleanedComponent=_component;\r\n    let alerts=[];\r\n    let updateList=[\"selected_armor_type\",\"selected_absorption\"];\r\n    //update multipliers\r\n    let validatedData=updateMultipliers(updateList,cleanedComponent,\"Mek-Servo\");\r\n    cleanedComponent.cost_multipliers.armor=validatedData.data;\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    let cost_multiplier=Object.entries(cleanedComponent.cost_multipliers.armor).reduce((_multi, _val)=>\r\n    {//calc new cost_multiplier\r\n        return _multi*_val[1];\r\n    },1);\r\n    cost_multiplier=round(cost_multiplier,2);\r\n    if(cleanedComponent.armor_cost_multiplier!=cost_multiplier)\r\n    {//correct cost_multiplier if mismatch\r\n        alerts.push(\"Mek-Servo: cost_multiplier.armor\");\r\n        alerts.push(\"**** Invalid Armor Cost Multiplier. Correcting. ****\");\r\n        cleanedComponent.armor_cost_multiplier=cost_multiplier;\r\n    }\r\n    let newCost=cleanedComponent.selected_servo_class.cost\r\n                + (cleanedComponent.selected_armor.cost * cleanedComponent.armor_cost_multiplier)\r\n                + cleanedComponent.kills_space_trade.cost;\r\n    newCost=round(newCost,2);\r\n    if(cleanedComponent.cost!=newCost)\r\n    {//correct cost if mismatch\r\n        alerts.push(\"Mek-Servo: cost\");\r\n        alerts.push(\"**** Invalid Cost. Correcting. ****\");\r\n        cleanedComponent.cost=newCost;\r\n    }\r\n    let newWeight=(cleanedComponent.total_kills + cleanedComponent.selected_armor.stopping_power)/2;\r\n    newWeight=round(newWeight,2);\r\n    if(cleanedComponent.weight!=newWeight)\r\n    {//correct weight if mismatch\r\n        alerts.push(\"Mek-Servo: weight\");\r\n        alerts.push(\"**** Invalid Weight. Correcting. ****\");\r\n        cleanedComponent.weight=newWeight;\r\n    }\r\n    // update total kills\r\n    let newTotalKills=cleanedComponent.selected_servo_class.kills \r\n                        + cleanedComponent.kills_space_trade.kills_modifier;\r\n    if(cleanedComponent.total_kills!=newTotalKills)\r\n    {\r\n        alerts.push(\"Mek-Servo: total_kills\");\r\n        alerts.push(\"**** Invalid Total Kills. Correcting. ****\");\r\n        cleanedComponent.total_kills=newTotalKills\r\n    }\r\n    // update available_space\r\n    let newAvailSpace=cleanedComponent.selected_servo_class.space \r\n                        + cleanedComponent.kills_space_trade.space_modifier;\r\n    if(cleanedComponent.available_space!=newAvailSpace)\r\n    {\r\n        alerts.push(\"Mek-Servo: available_space\");\r\n        alerts.push(\"**** Invalid Available Space. Correcting. ****\");\r\n        cleanedComponent.available_space=newAvailSpace\r\n    }\r\n        \r\n    return {data:cleanedComponent,alerts:alerts}\r\n};\r\n\r\nlet validateComponent=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let validatedData;\r\n    //let updateList=[\"selected_armor_type\",\"selected_absorption\"];\r\n    let loopAlerts;\r\n    let alerts=[];\r\n    let componentsToValidate=\r\n    [\r\n        {validator:validators.servo_type,pkey:\"type\",component_prop:\"selected_servo_type\",skipUpdateList:true},\r\n        {validator:validators.armor_type,pkey:\"damage_coefficient\",component_prop:\"selected_armor_type\",},\r\n        {validator:validators.armor_RAM,pkey:\"absorption\",component_prop:'selected_absorption'},\r\n    ];\r\n    ({cleanedComponent, loopAlerts} = loopValidators(componentsToValidate, cleanedComponent));\r\n    alerts=alerts.concat(loopAlerts)\r\n    //update mek_servo class table based on mek servo type\r\n    validators.create_class_table(_component.selected_servo_type.type);\r\n    //validate servo-class\r\n    validatedData=validators.servo_class(\"code\",_component.selected_servo_class);\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.selected_servo_class=validatedData.data;\r\n    //generate properly formatted kill-space-trade data\r\n    let trade_formatted=\r\n        {\r\n            kills:_component.kills_space_trade.kills_modifier,\r\n            space:_component.kills_space_trade.space_modifier,\r\n            cost:_component.kills_space_trade.cost\r\n        };\r\n    //validate servo-kills-space-trade\r\n    validatedData=validators.servo_trade(\r\n        trade_formatted,\r\n        _component.selected_servo_class.kills,\r\n        _component.selected_servo_class.space);\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.kills_space_trade=validatedData.data;\r\n    //update armor based on servo class\r\n    validators.armor_filter(_component.selected_servo_class.code+2);\r\n    //validate armor\r\n    validatedData=validators.armor(\"code\",_component.selected_armor);\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.selected_armor=validatedData.data;\r\n    //validate derived data\r\n    validatedData=validators.derived(cleanedComponent);\r\n    cleanedComponent=validatedData.data;\r\n    alerts=alerts.concat(validatedData.alerts);\r\n\r\n    return {data:cleanedComponent, alerts:alerts};\r\n};\r\n\r\nexport {validateComponent};"],"sourceRoot":""}
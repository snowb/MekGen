(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["mek_shield-weakness","mek_shield-weakness-data-module"],{5237:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"47c91943-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/design_components/mek_shield/subcomponents/mek_shield-weakness.vue?vue&type=template&id=1c82b1ec&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'mek-sub-component-table\',{attrs:{"items":_vm.weakness_table,"pkey":_vm.pkey,"selected-keys":_vm.selected_keys,"headers":{weakness:\'Weakness\',monicker:\'Monicker\',cost:\'Cost\'},"name":"Weakness","flow":"pkey-col","show-headers":true,"format":{cost:\'multiplier\'}},on:{"update-selected-data":_vm.select_weakness}})}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./src/design_components/mek_shield/subcomponents/mek_shield-weakness.vue?vue&type=template&id=1c82b1ec&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js\nvar web_dom_iterable = __webpack_require__("ac6a");\n\n// EXTERNAL MODULE: ./src/mixins/alerts_mixin.js\nvar alerts_mixin = __webpack_require__("d866");\n\n// EXTERNAL MODULE: ./src/data_table_modules/mek_shield/mek_shield-weakness-data-module.js\nvar mek_shield_weakness_data_module = __webpack_require__("cf03");\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/design_components/mek_shield/subcomponents/mek_shield-weakness.vue?vue&type=script&lang=js&\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ var mek_shield_weaknessvue_type_script_lang_js_ = ({\n  name: "mek_shield_weakness",\n  props: ["weaknessArray"],\n  mixins: [alerts_mixin["a" /* default */]],\n  components: {\n    "mek-sub-component-table": () => __webpack_require__.e(/* import() | mek_sub-component-table */ "mek_sub-component-table").then(__webpack_require__.bind(null, "a949"))\n  },\n  data: function data() {\n    let obj = {};\n    obj.alerts = [];\n    obj.pkey = "weakness";\n    obj.suppressAlerts = false;\n    obj.selected_weakness_array = [{\n      weakness: "All",\n      monicker: "Shield",\n      cost: 1.0\n    }];\n    return obj;\n  },\n  methods: {\n    select_weakness: function select_weakness(_selected_weakness) {\n      this.suppressAlerts = true; //suppress alerts, for exclusive switching\n\n      let new_selected_weakness_array = this.toggleWeakness(this.selected_weakness_array, _selected_weakness);\n      let cleaned_data = Object(mek_shield_weakness_data_module["cleaned_weakness"])(new_selected_weakness_array, this.pkey);\n      new_selected_weakness_array = cleaned_data.cleaned_array;\n\n      if (cleaned_data.alerts.length > 0 && !this.suppressAlerts) {\n        cleaned_data.alerts.forEach(_alert => {\n          this.addAlert(_alert);\n        });\n        this.publishAlerts();\n      }\n\n      this.$set(this, "selected_weakness_array", new_selected_weakness_array);\n      this.$emit("update-weakness", new_selected_weakness_array);\n      this.suppressAlerts = false;\n    },\n\n    toggleWeakness(_weakness_array, _weakness) {\n      let weakness_array = JSON.parse(JSON.stringify(_weakness_array));\n      let remove_weakness = weakness_array.some(_val => {\n        //if _weakness matches already existing weakness, flag for deletion\n        return _val[this.pkey] == _weakness[this.pkey];\n      }, this);\n\n      if (remove_weakness) {\n        //if flagged for removal, filter out\n        return weakness_array.filter(_val => {\n          return _val[this.pkey] != _weakness[this.pkey];\n        }, this);\n      }\n\n      weakness_array.push(_weakness); //otherwise add weakness and return\n\n      return weakness_array;\n    }\n\n  },\n  computed: {\n    weakness_table() {\n      return mek_shield_weakness_data_module["weakness_data_table"];\n    },\n\n    selected_keys() {\n      let cleaned_data = Object(mek_shield_weakness_data_module["cleaned_weakness"])(this.weaknessArray, this.pkey);\n\n      if (cleaned_data.alerts.length > 0 && !this.suppressAlerts) {\n        cleaned_data.alerts.forEach(_alert => {\n          this.addAlert(_alert);\n        });\n        this.publishAlerts();\n      }\n\n      if (cleaned_data.update) {\n        this.$emit("alert-generated", true);\n        this.$emit("update-weakness", cleaned_data.cleaned_array);\n      }\n\n      this.$set(this, "selected_weakness_array", cleaned_data.cleaned_array);\n      return cleaned_data.key_list;\n    }\n\n  }\n});\n// CONCATENATED MODULE: ./src/design_components/mek_shield/subcomponents/mek_shield-weakness.vue?vue&type=script&lang=js&\n /* harmony default export */ var subcomponents_mek_shield_weaknessvue_type_script_lang_js_ = (mek_shield_weaknessvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__("2877");\n\n// CONCATENATED MODULE: ./src/design_components/mek_shield/subcomponents/mek_shield-weakness.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  subcomponents_mek_shield_weaknessvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var mek_shield_weakness = __webpack_exports__["default"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5237\n')},"706d":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return partial_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return partial_has_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return partial_get_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return partial_cleaned_feature; });\n//data table module, raw data output for re-use in non-vue-component formats\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \n//          neutral and reusable across all data modules\n//partial data validator\n//called with data_table and validation_keys in data-module\nlet partial_validate = (_data_table, _validation_keys) => _data => {\n  //_data_table: Array, array of data to validate against\n  //_validation_keys: Array, keys to be compared between passed in data and data_table\n  //_data: Object, data to be compared to data table \n  if (typeof _data === "undefined" || !Array.isArray(_validation_keys) || _validation_keys.length == 0) {\n    return false;\n  }\n\n  let valid = _data_table.some(_val => {\n    return _validation_keys.every(_keys => {\n      //return true if all validation_keys in _data match an element in _data_table\n      return _data[_keys] == _val[_keys];\n    });\n  });\n\n  return valid;\n}; //partial_has_feature, determine if provided data table has matching element with provided key and val\n//called in data module to generate full function with local data\n\n\nlet partial_has_feature = _data_table => (_key, _val) => {\n  return _data_table.some(_data => {\n    return _data[_key] !== undefined && _data[_key] == _val;\n  });\n}; //partial get_feature, returns full function for data module\n//requires data_table (array) and module\'s has_feature function\n//returns full matching element in provided data table\n//has_feature must exist in data table module\n\n\nlet partial_get_feature = (_data_table, _has_feature) => (_key, _val) => {\n  let found_feature = null;\n\n  if (_has_feature(_key, _val)) {\n    _data_table.some(_table_val => {\n      if (_table_val[_key] == _val) {\n        found_feature = _table_val;\n        return true;\n      }\n    }, undefined);\n  }\n\n  return found_feature;\n};\n\nlet partial_cleaned_feature = (_validator, _has_feature, _get_feature, _default_data, _name) => (_pkey, _feature) => {\n  //input: primary key, selected feature, filtered data table\n  let data = undefined;\n  let key_list = [];\n  let update = false;\n  let alerts = [];\n  let json_data = JSON.stringify(_feature);\n\n  if (_feature === undefined || !_has_feature(_pkey, _feature[_pkey])) {\n    data = _default_data;\n    key_list = [data[_pkey]];\n    update = true;\n    alerts.push(_name + ": " + json_data);\n    alerts.push("**** Invalid data. Reseting to default. ****");\n  } else if (!_validator(_feature)) {\n    data = JSON.parse(JSON.stringify(_get_feature(_pkey, _feature[_pkey])));\n    key_list = [data[_pkey]];\n    update = true;\n    alerts.push(_name + ": " + json_data);\n    alerts.push("**** Invalid data. Reseting. ****");\n  } else {\n    data = JSON.parse(JSON.stringify(_feature));\n    key_list = [data[_pkey]];\n    update = false;\n  }\n\n  return {\n    data: data,\n    key_list: key_list,\n    update: update,\n    alerts: alerts\n  };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///706d\n')},cf03:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "weakness_data_table", function() { return weakness_data_table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "weakness_validate", function() { return weakness_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has_weakness", function() { return has_weakness; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_weakness", function() { return get_weakness; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cleaned_weakness", function() { return cleaned_weakness; });\n/* harmony import */ var _data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("706d");\n//data table module, raw data output for re-use in non-vue-component formats\n //create new weakness_data_table\n\nlet weakness_data_table = [{\n  weakness: "All",\n  monicker: "Shield",\n  cost: 1.0\n}, {\n  weakness: "Ablative",\n  monicker: "Screen",\n  cost: 1.0\n}, {\n  weakness: "Energy Only",\n  monicker: "Interference",\n  cost: 0.75,\n  only_exclusive: true\n}, {\n  weakness: "Matter Only",\n  monicker: "Kinetic",\n  cost: 0.75,\n  only_exclusive: true\n}, {\n  weakness: "Ranged Only",\n  monicker: "Swashbuckling",\n  cost: 0.75,\n  only_exclusive: true\n}, {\n  weakness: "Enclosing",\n  monicker: "Mirror",\n  cost: 0.5\n}, {\n  weakness: "Surge",\n  monicker: "Surge",\n  cost: 2.5\n}];\nlet only_exclusive = weakness_data_table.filter(_el => {\n  return typeof _el.only_exclusive !== "undefined";\n});\nlet data_table_keys = ["weakness", "monicker", "only_exclusive", "cost"];\nlet default_data = {\n  weakness: "All",\n  monicker: "Shield",\n  cost: 1.0\n};\nlet all_exclusive = [default_data]; //data validator for damage_data_table\n//call partial_validate with appropriate data for full validate\n\nlet weakness_validate = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_validate */ "d"])(weakness_data_table, data_table_keys); //completed function for checking if data has data\n\nlet has_weakness = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_has_feature */ "c"])(weakness_data_table); //completed function for returning matching data\n\nlet get_weakness = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_get_feature */ "b"])(weakness_data_table, has_weakness);\n\nlet is_exclusive_weakness = function is_exclusive_weakness(_exclusive_target, _pkey, _pkey_value) {\n  let exclusive_target_array = null;\n\n  switch (_exclusive_target.toLowerCase()) {\n    case "only_exclusive":\n      exclusive_target_array = only_exclusive;\n      break;\n\n    case "all_exclusive":\n      exclusive_target_array = all_exclusive;\n      break;\n  }\n\n  if (exclusive_target_array === null) {\n    return false;\n  }\n\n  return exclusive_target_array.some(_val => {\n    return _val[_pkey] == _pkey_value;\n  });\n};\n\nlet cleaned_weakness = function cleaned_weakness(_weakness_array, _pkey) {\n  //takes weakness_array, returns cleaned array removing multiple exclusive values\n  let hasExclusiveOnly = false;\n  let hasExclusiveAll = false;\n  let update = false;\n  let key_list = [];\n  let alerts = [];\n\n  if (_weakness_array === undefined || _pkey === undefined) {\n    alerts.push("Mek_Shield-Weakness: ");\n    let error = _weakness_array === undefined ? "**** Missing weakness array. Returning blank. ****" : "**** No primary key provided. Returning blank. ****";\n    alerts.push(error);\n    return {\n      cleaned_array: [default_data],\n      update: true,\n      key_list: ["All"],\n      alerts: alerts\n    };\n  }\n\n  let temp_selected_weakness_array = _weakness_array.reduceRight((_cleaned_array, _val) => {\n    if (hasExclusiveAll) {\n      //found exclusive all weakness, return just that\n      key_list = ["All"];\n      return [default_data];\n    }\n\n    let isAll = is_exclusive_weakness("all_exclusive", _pkey, _val[_pkey]);\n\n    if (isAll && _cleaned_array.length == 0) {\n      //last item added was All, return that and essential end\n      hasExclusiveAll = true;\n      key_list = ["All"];\n      return [default_data];\n    } else if (isAll) {\n      //otherwise, not last item, ignore All weakness\n      return _cleaned_array;\n    }\n\n    if (_val[_pkey] === undefined) {\n      //if weakness with pkey doesn\'t exist in data table, ignore\n      alerts.push("Mek_Shield-Weakness: " + JSON.stringify(_val));\n      alerts.push("**** Missing primary key. Ignoring. ****");\n      return _cleaned_array;\n    }\n\n    let clean_weakness = _val;\n\n    if (!weakness_validate(_val)) {\n      //invalid data\n      alerts.push("Mek_Shield-Weakness: " + JSON.stringify(_val));\n      alerts.push("**** Invalid data, attempting to reset. ****");\n      clean_weakness = get_weakness(_pkey, _val[_pkey]);\n      _val = clean_weakness; //replace current value with correct value\n\n      update = true; //attempt to set to corrected weakness\n    }\n\n    if (clean_weakness === null) {\n      //no matching weakness\n      alerts.push("**** Unable to reset. No matching data. ****");\n      update = true;\n      return _cleaned_array; //ignore element\n    }\n\n    let isOnly = is_exclusive_weakness("only_exclusive", _pkey, _val[_pkey]);\n\n    if (isOnly && !hasExclusiveOnly) {\n      _cleaned_array.push(_val);\n\n      hasExclusiveOnly = true;\n      key_list.push(_val[_pkey]);\n      return _cleaned_array;\n    } else if (isOnly && hasExclusiveOnly) {\n      alerts.push("Mek_Shield-Weakness: " + _val);\n      alerts.push("**** Duplicate exclusive Shield data. Ignoring. ****");\n      update = true;\n      return _cleaned_array;\n    }\n\n    if (!key_list.includes(_val[_pkey])) {\n      _cleaned_array.push(_val);\n\n      key_list.push(_val[_pkey]);\n    }\n\n    return _cleaned_array;\n  }, []);\n\n  temp_selected_weakness_array.reverse();\n\n  if (temp_selected_weakness_array.length == 0) {\n    //empty, reset to default\n    temp_selected_weakness_array = [JSON.parse(JSON.stringify(default_data))];\n    update = true;\n    key_list = ["All"];\n    alerts.push("Mek_Shield-Weakness: ");\n    alerts.push("**** Reseting to default ****");\n  }\n\n  return {\n    cleaned_array: temp_selected_weakness_array,\n    update: update,\n    key_list: key_list,\n    alerts: alerts\n  }; //returns an object with the pruned weakness array, whether it was updated, and the key_list\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///cf03\n')},d866:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony default export */ __webpack_exports__["a"] = ({\n  methods: {\n    addAlert(_alert_string) {\n      this.alerts.push(_alert_string);\n    },\n\n    publishAlerts() {\n      if (this.alerts.length > 0) {\n        this.$store.commit("alertMessage", this.alerts);\n      }\n\n      this.$set(this, "alerts", []);\n    }\n\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWl4aW5zL2FsZXJ0c19taXhpbi5qcz9kODY2Il0sIm5hbWVzIjpbIm1ldGhvZHMiLCJhZGRBbGVydCIsIl9hbGVydF9zdHJpbmciLCJhbGVydHMiLCJwdXNoIiwicHVibGlzaEFsZXJ0cyIsImxlbmd0aCIsIiRzdG9yZSIsImNvbW1pdCIsIiRzZXQiXSwibWFwcGluZ3MiOiJBQUNBO0FBQ0lBLFNBQU8sRUFDUDtBQUNJQyxZQUFRLENBQUNDLGFBQUQsRUFDUjtBQUNJLFdBQUtDLE1BQUwsQ0FBWUMsSUFBWixDQUFpQkYsYUFBakI7QUFDSCxLQUpMOztBQUtJRyxpQkFBYSxHQUNiO0FBQ0ksVUFBRyxLQUFLRixNQUFMLENBQVlHLE1BQVosR0FBbUIsQ0FBdEIsRUFDQTtBQUNJLGFBQUtDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQixjQUFuQixFQUFrQyxLQUFLTCxNQUF2QztBQUNIOztBQUNELFdBQUtNLElBQUwsQ0FBVSxJQUFWLEVBQWUsUUFBZixFQUF3QixFQUF4QjtBQUNIOztBQVpMO0FBRkosQ0FEQSIsImZpbGUiOiJkODY2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHRcclxue1xyXG4gICAgbWV0aG9kczpcclxuICAgIHtcclxuICAgICAgICBhZGRBbGVydChfYWxlcnRfc3RyaW5nKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5hbGVydHMucHVzaChfYWxlcnRfc3RyaW5nKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHB1Ymxpc2hBbGVydHMoKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWYodGhpcy5hbGVydHMubGVuZ3RoPjApXHJcbiAgICAgICAgICAgIHsgICBcclxuICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdChcImFsZXJ0TWVzc2FnZVwiLHRoaXMuYWxlcnRzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLiRzZXQodGhpcyxcImFsZXJ0c1wiLFtdKTtcclxuICAgICAgICB9LFxyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///d866\n')}}]);
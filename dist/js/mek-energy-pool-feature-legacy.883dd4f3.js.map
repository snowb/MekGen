{"version":3,"sources":["webpack:///./src/components/mek_energy_pool/subcomponents/mek_energy_pool-feature.vue?e2e3","webpack:///./src/components/data_table_modules/mek_energy_pool/mek_energy_pool-feature-data-module.js","webpack:///src/components/mek_energy_pool/subcomponents/mek_energy_pool-feature.vue","webpack:///./src/components/mek_energy_pool/subcomponents/mek_energy_pool-feature.vue?bd6e","webpack:///./src/components/mek_energy_pool/subcomponents/mek_energy_pool-feature.vue","webpack:///./src/mixins/alerts_mixin.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","items","feature_table","pkey","selected-keys","selected_keys","headers","feature","cost","show-headers","format","name","flow","on","update-selected-data","select_feature","staticRenderFns","feature_data_table","feature_validate","_data","valid","some","_val","has_feature","_key","undefined","get_feature","found_feature","_table_val","mek_energy_pool_feature_data_module_this","cleaned_feature","_feature_array","_pkey","update","key_list","alerts","json_data","stringify_default","push","error","cleaned_array","length","temp_selected_feature_array","reduceRight","_cleaned_array","clean_feature","includes","reverse","mek_energy_pool_featurevue_type_script_lang_js_","props","mixins","utility_mixin","alerts_mixin","components","mek-sub-component-table","__webpack_require__","e","then","bind","data","obj","selected_feature_array","suppressAlerts","methods","_selected_feature","_this","new_selected_feature_array","toggleFeature","cleaned_data","mek_energy_pool_feature_data_module_cleaned_feature","forEach","_alert","addAlert","publishAlerts","$set","$emit","_feature","_this2","feature_array","JSON","parse","remove_feature","filter","computed","_this3","featureArray","subcomponents_mek_energy_pool_featurevue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","_alert_string","$store","commit"],"mappings":"kIAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,2BAAqCE,MAAA,CAAOC,MAAAP,EAAAQ,cAAAC,KAAAT,EAAAS,KAAAC,gBAAAV,EAAAW,cAAAC,QAAA,CAAuFC,QAAA,UAAAC,KAAA,QAA8BC,gBAAA,EAAAC,OAAA,CAA+BF,KAAA,cAAkBG,KAAA,WAAAC,KAAA,YAAqCC,GAAA,CAAKC,uBAAApB,EAAAqB,mBACrVC,EAAA,iFCEIC,EACJ,CACI,CAACV,QAAQ,YAAYC,KAAK,MAC1B,CAACD,QAAQ,UAAUC,KAAK,IAIxBU,EAAiB,SAACC,GAElB,GAAkB,qBAARA,EAEN,OAAO,EAEX,IAAIC,EAAMH,EAAmBI,KAAK,SAACC,GAE/B,OAAOA,EAAKf,SAASY,EAAMZ,SAChBe,EAAKd,MAAMW,EAAMX,OAEhC,OAAOY,GAGPG,EAAY,SAACC,EAAMF,GAEnB,OAAOL,EAAmBI,KAAK,SAACF,GAE5B,YAAqBM,IAAdN,EAAMK,IAAqBL,EAAMK,IAAOF,KAInDI,EAAY,SAACF,EAAMF,GAEnB,GAAGC,EAAYC,EAAKF,GACpB,CACI,IAAIK,EAAc,KASlB,OARAV,EAAmBI,KAAK,SAACO,GAErB,GAAGA,EAAWJ,IAAOF,EAGjB,OADAK,EAAcC,GACP,GAEbC,GACKF,IAIXG,EAAgB,SAASC,EAAgBC,GAEzC,IAAIC,GAAO,EACPC,EAAS,GACTC,EAAO,GACPC,EAAUC,IAAeN,GAC7B,QAAoBN,IAAjBM,QAAsCN,IAARO,EACjC,CACIG,EAAOG,KAAK,6BACZ,IAAIC,OAAuBd,IAAjBM,EACJ,oDACA,sDAEN,OADAI,EAAOG,KAAKC,GACL,CAACC,cAAc,GAAGP,QAAO,EAAKC,SAASA,EAASC,OAAOA,GAGlE,GAA0B,GAAvBJ,EAAeU,OAEd,MAAO,CAACD,cAAc,GAAGP,OAAOA,EAAOC,SAASA,EAASC,OAAOA,GAGpE,IAAIO,EAA4BX,EAAeY,YAAY,SAACC,EAAgBtB,GAExE,QAAiBG,IAAdH,EAAKU,GAIJ,OAFAG,EAAOG,KAAK,4BAA4BF,GACxCD,EAAOG,KAAK,4CACLM,EAEX,IAAIC,EAAcvB,EASlB,OARIJ,EAAiBI,KAEjBa,EAAOG,KAAK,4BAA4BF,GACxCD,EAAOG,KAAK,gDACZO,EAAcnB,EAAYM,EAAMV,EAAKU,IACrCC,GAAO,GAGQ,OAAhBY,GAECV,EAAOG,KAAK,gDACZL,GAAO,EACAW,IAGPV,EAASY,SAASxB,EAAKU,MAEvBY,EAAeN,KAAKhB,GACpBY,EAASI,KAAKhB,EAAKU,KAEhBY,IACT,IAEF,OADAF,EAA4BA,EAA4BK,UACjD,CAACP,cAAcE,EAA4BT,OAAOA,EAAOC,SAASA,EAASC,OAAOA,ICrF7Fa,EAAA,CACArC,KAAA,0BACAsC,MAAA,iBACAC,OAAA,CAAAC,EAAA,KAAAC,EAAA,MACAC,WACA,CACAC,0BAAA,kBAAAC,EAAAC,EAAA,kBAAAC,KAAAF,EAAAG,KAAA,gBAEAC,KAAA,WAEA,IAAAC,EAAA,CACAC,uBAAA,GACA1D,KAAA,UACAgC,OAAA,GACA2B,gBAAA,GACA,OAAAF,GAEAG,QACA,CACAhD,eAAA,SAAAiD,GACA,IAAAC,EAAAtE,KACAA,KAAAmE,gBAAA,EACA,IAAAI,EAAAvE,KAAAwE,cAAAxE,KAAAkE,uBAAAG,GACAI,EAAAC,EAAAH,EAAAvE,KAAAQ,MACA+D,EAAAE,EAAA5B,cACA4B,EAAAjC,OAAAM,OAAA,IAAA9C,KAAAmE,iBAEAM,EAAAjC,OAAAmC,QAAA,SAAAC,GAEAN,EAAAO,SAAAD,KAEA5E,KAAA8E,iBAEA9E,KAAA+E,KAAA/E,KAAA,yBAAAuE,GACAvE,KAAAgF,MAAA,iBAAAT,GACAvE,KAAAmE,gBAAA,GAEAK,cAnBA,SAmBApC,EAAA6C,GACA,IAAAC,EAAAlF,KACAmF,EAAAC,KAAAC,MAAA3C,IAAAN,IAEAkD,EAAAH,EAAAzD,KAAA,SAAAC,GAEA,OAAAA,EAAAuD,EAAA1E,OAAAyE,EAAAC,EAAA1E,OACAR,MACA,OAAAsF,EAEAH,EAAAI,OAAA,SAAA5D,GAEA,OAAAA,EAAAuD,EAAA1E,OAAAyE,EAAAC,EAAA1E,OACAR,OAEAmF,EAAAxC,KAAAsC,GAEAE,KAGAK,SACA,CACAjF,cADA,WAGA,OAAAe,GAEAZ,cALA,WAMA,IAAA+E,EAAAzF,KACAyE,EAAAC,EAAA1E,KAAA0F,aAAA1F,KAAAQ,MAcA,OAbAiE,EAAAjC,OAAAM,OAAA,IAAA9C,KAAAmE,iBAEAM,EAAAjC,OAAAmC,QAAA,SAAAC,GAEAa,EAAAZ,SAAAD,KAEA5E,KAAA8E,iBAEAL,EAAAnC,QAEAtC,KAAAgF,MAAA,iBAAAP,EAAA5B,eAEA7C,KAAA+E,KAAA/E,KAAA,yBAAAyE,EAAA5B,eACA4B,EAAAlC,YChG+XoD,EAAA,cCO/XC,EAAgBC,OAAAC,EAAA,KAAAD,CACdF,EACA7F,EACAuB,GACF,EACA,KACA,KACA,MAIe0E,EAAA,WAAAH,6CCjBfG,EAAA,MACI3B,QACA,CACIS,SADJ,SACamB,GAELhG,KAAKwC,OAAOG,KAAKqD,IAErBlB,cALJ,WAOW9E,KAAKwC,OAAOM,OAAO,GAElB9C,KAAKiG,OAAOC,OAAO,eAAelG,KAAKwC,QAE3CxC,KAAK+E,KAAK/E,KAAK,SAAS","file":"js/mek-energy-pool-feature-legacy.883dd4f3.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.feature_table,\"pkey\":_vm.pkey,\"selected-keys\":_vm.selected_keys,\"headers\":{feature:'Feature',cost:'Cost'},\"show-headers\":true,\"format\":{cost:'multiplier'},\"name\":\"Features\",\"flow\":\"pkey-col\"},on:{\"update-selected-data\":_vm.select_feature}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//create new feature_data_table\r\nlet feature_data_table=\r\n[\r\n    {feature:\"Morphable\",cost:1.25},\r\n    {feature:\"Fragile\",cost:1},\r\n];\r\n\r\n//data validator for feature_data_table\r\nlet feature_validate=(_data)=>\r\n{\r\n    if(typeof _data===\"undefined\")\r\n    {\r\n        return false;\r\n    }\r\n    let valid=feature_data_table.some((_val)=>\r\n    {\r\n        return _val.feature==_data.feature\r\n                && _val.cost==_data.cost;\r\n    });\r\n    return valid;\r\n};\r\n\r\nlet has_feature=(_key, _val)=>\r\n{\r\n    return feature_data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\nlet get_feature=(_key, _val)=>\r\n{\r\n    if(has_feature(_key,_val))\r\n    {\r\n        let found_feature=null;\r\n        feature_data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n        return found_feature;\r\n    }\r\n};\r\n\r\nlet cleaned_feature=function(_feature_array, _pkey)\r\n{\r\n    let update=false;\r\n    let key_list=[];\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature_array);\r\n    if(_feature_array===undefined || _pkey===undefined)\r\n    {\r\n        alerts.push(\"Mek_Energy_Pool-Feature: \");\r\n        let error=_feature_array===undefined\r\n            ? \"**** Missing feature array. Returning blank. ****\"\r\n            : \"**** No primary key provided. Returning blank. ****\";\r\n        alerts.push(error);\r\n        return {cleaned_array:[],update:true,key_list:key_list,alerts:alerts};\r\n    }\r\n\r\n    if(_feature_array.length==0)\r\n    {//no feature selected, return empty\r\n        return {cleaned_array:[],update:update,key_list:key_list,alerts:alerts};\r\n    }    \r\n\r\n    let temp_selected_feature_array=_feature_array.reduceRight((_cleaned_array, _val)=>\r\n    {\r\n        if(_val[_pkey]===undefined)\r\n        {//if feature with pkey doesn't exist in data table, ignore\r\n            alerts.push(\"Mek_Energy_Pool-Feature: \"+json_data);\r\n            alerts.push(\"**** Missing primary key. Ignoring. ****\");\r\n            return _cleaned_array;\r\n        }\r\n        let clean_feature=_val;\r\n        if(!feature_validate(_val))\r\n        {//invalid data\r\n            alerts.push(\"Mek_Energy_Pool-Feature: \"+json_data);\r\n            alerts.push(\"**** Invalid data, attempting to reset. ****\")\r\n            clean_feature=get_feature(_pkey,_val[_pkey]);\r\n            update=true;\r\n            //attempt to set to corrected feature\r\n        }\r\n        if(clean_feature===null)\r\n        {//no matching feature\r\n            alerts.push(\"**** Unable to reset. No matching data. ****\")\r\n            update=true;\r\n            return _cleaned_array;\r\n            //ignore element\r\n        }\r\n        if(!key_list.includes(_val[_pkey]))\r\n        {\r\n            _cleaned_array.push(_val);\r\n            key_list.push(_val[_pkey]);\r\n        }\r\n        return _cleaned_array;\r\n    },[]);\r\n    temp_selected_feature_array=temp_selected_feature_array.reverse();\r\n    return {cleaned_array:temp_selected_feature_array,update:update,key_list:key_list,alerts:alerts};\r\n    //returns an object with the pruned feature array, whether it was updated, and the key_list\r\n};\r\n\r\nexport {feature_data_table, feature_validate, has_feature, get_feature, cleaned_feature};\r\n","<template>\r\n    <mek-sub-component-table\r\n        :items=\"feature_table\" :pkey=\"pkey\" :selected-keys=\"selected_keys\"\r\n        :headers=\"{feature:'Feature',cost:'Cost'}\"\r\n        :show-headers=\"true\" :format=\"{cost:'multiplier'}\"\r\n        @update-selected-data=\"select_feature\"\r\n        name=\"Features\" flow=\"pkey-col\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport utility_mixin from \"../../../mixins/utility_mixin\";\r\nimport alerts_mixin from \"../../../mixins/alerts_mixin\";\r\n\r\nimport {feature_data_table, cleaned_feature}\r\n    from \"../../data_table_modules/mek_energy_pool/mek_energy_pool-feature-data-module\";\r\n\r\nexport default \r\n{\r\n    name:\"mek_energy_pool_feature\",\r\n    props:[\"featureArray\"],\r\n    mixins:[utility_mixin, alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"../../universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.selected_feature_array=[];\r\n        obj.pkey=\"feature\";\r\n        obj.alerts=[];\r\n        obj.suppressAlerts=false;\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_feature:function(_selected_feature)\r\n        {\r\n            this.suppressAlerts=true;//suppress alerts, for exclusive switching\r\n            let new_selected_feature_array=this.toggleFeature(this.selected_feature_array,_selected_feature);\r\n            let cleaned_data=cleaned_feature(new_selected_feature_array, this.pkey);\r\n            new_selected_feature_array=cleaned_data.cleaned_array;\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            this.$set(this,\"selected_feature_array\",new_selected_feature_array);\r\n            this.$emit(\"update-feature\",new_selected_feature_array);\r\n            this.suppressAlerts=false;\r\n        },\r\n        toggleFeature(_feature_array,_feature)\r\n        {\r\n            let feature_array=JSON.parse(JSON.stringify(_feature_array));\r\n            \r\n            let remove_feature=feature_array.some((_val)=>\r\n            {//if _feature matches already existing feature, flag for deletion\r\n                return _val[this.pkey]==_feature[this.pkey];\r\n            },this);\r\n            if(remove_feature)\r\n            {//if flagged for removal, filter out\r\n                return feature_array.filter((_val)=>\r\n                {\r\n                    return _val[this.pkey]!=_feature[this.pkey];\r\n                },this);\r\n            }\r\n            feature_array.push(_feature);\r\n            //otherwise add feature and return\r\n            return feature_array;\r\n        },\r\n    },\r\n    computed:\r\n    {\r\n        feature_table()\r\n        {\r\n            return feature_data_table;\r\n        },\r\n        selected_keys()\r\n        {\r\n            let cleaned_data=cleaned_feature(this.featureArray,this.pkey);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.$emit(\"update-feature\",cleaned_data.cleaned_array);\r\n            }\r\n            this.$set(this,\"selected_feature_array\",cleaned_data.cleaned_array);\r\n            return cleaned_data.key_list;\r\n        }\r\n    },\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_energy_pool-feature.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_energy_pool-feature.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_energy_pool-feature.vue?vue&type=template&id=41e75092&\"\nimport script from \"./mek_energy_pool-feature.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_energy_pool-feature.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
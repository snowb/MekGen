{"version":3,"sources":["webpack:///./src/mixins/servo_classes_mixin.js","webpack:///./src/components/mek_servo/mek_servo-main.vue?2bf1","webpack:///src/components/mek_servo/mek_servo-main.vue","webpack:///./src/components/mek_servo/mek_servo-main.vue?716b","webpack:///./src/components/mek_servo/mek_servo-main.vue"],"names":["__webpack_exports__","data","servo_classes","code","id","name","render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","width","attrs","new-component","newComponent","component-name","component_name","servo_name","component-changed","component_changed","on","update-component-name","updateComponentName","align-self","servo-type","selected_servo_type","update-servo-type","updateServoType","base_kills","selected_servo_class","kills","kills_modifier","kills_space_trade","space_modifier","base_space","space","update-extra-space","updateExtraSpace","type","servo-class","update-servo-class","updateServoClass","armor","selected_armor","max-armor","update-armor","updateArmor","cost","armor-type","selected_armor_type","update-armor-type","updateArmorType","_e","absorption","selected_absorption","update-absorption","updateAbsorption","cols","rows","slot","_v","_s","total_kills","round","stopping_power","final_stopping_power","padding-left","damage_coefficient","is_arm","is_leg","damage_bonus","throw_range","available_space","weight","base_cost","cost_multiplier","font-weight","save-reset-component","componentSaveReset","staticRenderFns","mek_servo_mainvue_type_script_lang_js_","props","mixins","servo_classes_mixin","selected_item_mixin","utility_mixin","component_methods_mixin","component_computed_mixin","components","mek-servo-type","__webpack_require__","e","then","bind","mek-servo-class","mek-servo-kills-space-trade","mek-component-name","mek-save-reset-component","mek-component-stats","mek-armor","mek-armor-type","mek-energy-absorbing-armor","obj","uuid","component_category","component_type","original_component","cost_multipliers","armor_type","armor_penalty","methods","_servo_type","$set","_servo_class","_armor","_armor_type","JSON","parse","stringify_default","_absorption","_kills_space_trade","ingest_data","_data_object","_this","alertMessage","universal_ingest_data","$nextTick","output_data","_this2","return_data","create_uuid","_action","action","$store","commit","computed","reinforced","absorbing","additional","trim","replace","damage_capacity","servo_kills","kills_space_trade_sp_loss","toLowerCase","mek_servo_mek_servo_mainvue_type_script_lang_js_","component","Object","componentNormalizer"],"mappings":"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","file":"js/mek_servo-main-legacy.6df548c9.js","sourcesContent":["export default\r\n{\r\n    data:()=>\r\n    {\r\n        return {\r\n            servo_classes:\r\n                [\r\n                    {code:1,id:\"SL\",name:\"Superlight\"},\r\n                    {code:2,id:\"LW\",name:\"Lightweight\"},\r\n                    {code:3,id:\"STR\",name:\"Striker\"},\r\n                    {code:4,id:\"MS\",name:\"Medium Striker\"},\r\n                    {code:5,id:\"HS\",name:\"Heavy Striker\"},\r\n                    {code:6,id:\"MW\",name:\"Mediumweight\"},\r\n                    {code:7,id:\"LH\",name:\"Light Heavy\"},\r\n                    {code:8,id:\"MH\",name:\"Medium Heavy\"},\r\n                    {code:9,id:\"AH\",name:\"Armored Heavy\"},\r\n                    {code:10,id:\"SH\",name:\"Super Heavy\"},\r\n                    {code:11,id:\"MgH\",name:\"Mega Heavy\"}\r\n                ]};\r\n    }\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"mek-inline-flex-col\",staticStyle:{\"width\":\"100%\"}},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.servo_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('span',{staticClass:\"mek-inline-flex-row\"},[_c('span',{staticClass:\"mek-inline-flex-col\"},[_c('mek-servo-type',{staticStyle:{\"align-self\":\"flex-start\"},attrs:{\"servo-type\":_vm.selected_servo_type},on:{\"update-servo-type\":_vm.updateServoType}}),_c('mek-servo-kills-space-trade',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"base_kills\":_vm.selected_servo_class.kills,\"kills_modifier\":_vm.kills_space_trade.kills_modifier,\"space_modifier\":_vm.kills_space_trade.space_modifier,\"base_space\":_vm.selected_servo_class.space},on:{\"update-extra-space\":_vm.updateExtraSpace}})],1),_c('mek-servo-class',{attrs:{\"servo-type\":_vm.selected_servo_type.type,\"servo-class\":_vm.selected_servo_class},on:{\"update-servo-class\":_vm.updateServoClass}}),_c('mek-armor',{attrs:{\"armor\":_vm.selected_armor,\"max-armor\":_vm.selected_servo_class.code+2},on:{\"update-armor\":_vm.updateArmor}}),_c('span',{staticClass:\"mek-inline-flex-col\"},[(_vm.selected_armor.cost!=0)?_c('mek-armor-type',{attrs:{\"armor-type\":_vm.selected_armor_type},on:{\"update-armor-type\":_vm.updateArmorType}}):_vm._e(),(_vm.selected_armor.cost!=0)?_c('mek-energy-absorbing-armor',{attrs:{\"absorption\":_vm.selected_absorption},on:{\"update-absorption\":_vm.updateAbsorption}}):_vm._e()],1)],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":6}},[_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Base Kills: \"+_vm._s(_vm.selected_servo_class.kills))]),_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_vm._v(\"Total Kills: \"+_vm._s(_vm.total_kills))]),(_vm.selected_armor.cost!=0)?_c('div',{attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Base Armor Stopping Power: \"+_vm._s(_vm.round(_vm.selected_armor.stopping_power,2))+\"\\n                \"),_c('br'),_vm._v(\"Final Stopping Power: \"+_vm._s(_vm.round(_vm.final_stopping_power,2))+\"\\n            \")]):_vm._e(),(_vm.selected_armor.cost!=0)?_c('div',{attrs:{\"slot\":\"col1-row4\"},slot:\"col1-row4\"},[_vm._v(\"Armor Type: \"+_vm._s(_vm.selected_armor_type.type))]):_vm._e(),(_vm.selected_armor.cost!=0)?_c('div',{staticStyle:{\"padding-left\":\"10px\"},attrs:{\"slot\":\"col1-row5\"},slot:\"col1-row5\"},[_vm._v(\"Damage Coefficient: \"+_vm._s(_vm.selected_armor_type.damage_coefficient))]):_vm._e(),(_vm.selected_absorption.cost!=1)?_c('div',{attrs:{\"slot\":\"col1-row6\"},slot:\"col1-row6\"},[_vm._v(\"Absorption: \"+_vm._s(_vm.selected_absorption.absorption*100)+\"%\")]):_vm._e(),(_vm.is_arm | _vm.is_leg)?_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Damage Bonus: \"+_vm._s(_vm.selected_servo_class.damage_bonus))]):_vm._e(),(_vm.is_arm)?_c('div',{attrs:{\"slot\":\"col2-row2\"},slot:\"col2-row2\"},[_vm._v(\"Throw Range: \"+_vm._s(_vm.selected_servo_class.throw_range))]):_vm._e(),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.selected_servo_class.space))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Available Space: \"+_vm._s(_vm.available_space))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.weight)+\" tons\")]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.base_cost))]),_c('div',{attrs:{\"slot\":\"col4-row2\"},slot:\"col4-row2\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.cost_multiplier))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row3\"},slot:\"col4-row3\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <span class=\"mek-inline-flex-col\" style=\"width:100%;\">\r\n        <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||servo_name\"\r\n            :component-changed=\"component_changed\"\r\n            @update-component-name=\"updateComponentName\"\r\n        ></mek-component-name>\r\n        <span class=\"mek-inline-flex-row\">\r\n            <span class=\"mek-inline-flex-col\">\r\n                <mek-servo-type :servo-type=\"selected_servo_type\" @update-servo-type=\"updateServoType\"\r\n                    style=\"align-self:flex-start;\"\r\n                ></mek-servo-type>\r\n                <mek-servo-kills-space-trade style=\"align-self:baseline;\"\r\n                    :base_kills=\"selected_servo_class.kills\" :kills_modifier=\"kills_space_trade.kills_modifier\" \r\n                    :space_modifier=\"kills_space_trade.space_modifier\" :base_space=\"selected_servo_class.space\"\r\n                    @update-extra-space=\"updateExtraSpace\"\r\n                ></mek-servo-kills-space-trade>\r\n                <!--- ADD KILLS FOR SPACE CONVERTER --->\r\n                <!--- add reinforcing component --->\r\n            </span>\r\n            <mek-servo-class @update-servo-class=\"updateServoClass\"\r\n                :servo-type=\"selected_servo_type.type\" :servo-class=\"selected_servo_class\"\r\n            ></mek-servo-class>\r\n            <mek-armor :armor=\"selected_armor\"  :max-armor=\"selected_servo_class.code+2\"\r\n                @update-armor=\"updateArmor\"\r\n            ></mek-armor>\r\n            <span class=\"mek-inline-flex-col\">\r\n                <mek-armor-type :armor-type=\"selected_armor_type\" v-if=\"selected_armor.cost!=0\"\r\n                    @update-armor-type=\"updateArmorType\"\r\n                ></mek-armor-type>\r\n                <mek-energy-absorbing-armor :absorption=\"selected_absorption\" v-if=\"selected_armor.cost!=0\"\r\n                    @update-absorption=\"updateAbsorption\"\r\n                ></mek-energy-absorbing-armor>\r\n            </span>\r\n        </span>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-component-stats :cols=\"4\" :rows=\"6\">\r\n                <div slot=\"col1-row1\">Base Kills: {{selected_servo_class.kills}}</div>\r\n                <div slot=\"col1-row2\">Total Kills: {{total_kills}}</div>\r\n                <div slot=\"col1-row3\" v-if=\"selected_armor.cost!=0\">Base Armor Stopping Power: {{round(selected_armor.stopping_power,2)}}\r\n                    <br>Final Stopping Power: {{round(final_stopping_power,2)}}\r\n                </div>\r\n                <div slot=\"col1-row4\" v-if=\"selected_armor.cost!=0\">Armor Type: {{selected_armor_type.type}}</div>\r\n                <div slot=\"col1-row5\" v-if=\"selected_armor.cost!=0\" style=\"padding-left:10px;\">Damage Coefficient: {{selected_armor_type.damage_coefficient}}</div>\r\n                <div slot=\"col1-row6\" v-if=\"selected_absorption.cost!=1\">Absorption: {{selected_absorption.absorption*100}}%</div>\r\n\r\n                <div slot=\"col2-row1\" v-if=\"is_arm | is_leg\">Damage Bonus: {{selected_servo_class.damage_bonus}}</div>\r\n                <div slot=\"col2-row2\" v-if=\"is_arm\">Throw Range: {{selected_servo_class.throw_range}}</div>\r\n\r\n                <div slot=\"col3-row1\">Base Space: {{selected_servo_class.space}}</div>\r\n                <div slot=\"col3-row2\">Available Space: {{available_space}}</div>\r\n                <div slot=\"col3-row3\">Weight: {{weight}} tons</div>\r\n                \r\n                <div slot=\"col4-row1\">Base Cost: {{base_cost}}</div>\r\n                <div slot=\"col4-row2\">Multiplier: x{{cost_multiplier}}</div>\r\n                <div slot=\"col4-row3\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n            </mek-component-stats>\r\n            <mek-save-reset-component @save-reset-component=\"componentSaveReset\"></mek-save-reset-component>\r\n        </div>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\nimport servo_classes_mixin from \"../../mixins/servo_classes_mixin.js\";\r\nimport selected_item_mixin from \"../../mixins/selected_item_mixin.js\";\r\nimport utility_mixin from \"../../mixins/utility_mixin.js\";\r\nimport component_methods_mixin from \"../../mixins/component_methods_mixin\";\r\nimport component_computed_mixin from \"../../mixins/component_computed_mixin\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_servo\",\r\n    props:[],\r\n    mixins:\r\n        [\r\n            servo_classes_mixin, \r\n            selected_item_mixin, \r\n            utility_mixin, \r\n            component_methods_mixin, \r\n            component_computed_mixin\r\n        ],\r\n    components:\r\n    {\r\n        \"mek-servo-type\":()=>import(/* webpackChunkName: \"mek_servo-type\" */\"./subcomponents/mek_servo-type.vue\"),\r\n        \"mek-servo-class\":()=>import(/* webpackChunkName: \"mek_servo-class\" */\"./subcomponents/mek_servo-class.vue\"),\r\n        \"mek-servo-kills-space-trade\":()=>import(/* webpackChunkName: \"mek_servo-kills-space-trade\" */\"./subcomponents/mek_servo-kills-space-trade.vue\"),\r\n\r\n        \"mek-component-name\":()=>import(/* webpackChunkName: \"mek_component-name\" */\"../universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>import(/* webpackChunkName: \"mek_save-reset-component\" */\"../universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>import(/* webpackChunkName: \"mek_component-stats\" */\"../universal/mek_component-stats.vue\"),\r\n\r\n        \"mek-armor\":()=>import(/* webpackChunkName: \"mek_armor\" */\"../universal/mek_armor.vue\"),\r\n        \"mek-armor-type\":()=>import(/* webpackChunkName: \"mek_armor-type\" */\"../universal/mek_armor-type.vue\"),\r\n        \"mek-energy-absorbing-armor\":()=>import(/* webpackChunkName: \"mek_energy-absorbing-armor\" */\"../universal/mek_energy-absorbing-armor.vue\"),\r\n        \r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.uuid=null;\r\n        obj.component_name=null;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"servo\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.selected_servo_type={type:\"Torso\"};\r\n        obj.selected_servo_class={code:1,name:\"Superlight\",space:2,cost:2,kills:2};\r\n\r\n        obj.cost_multipliers={};\r\n\r\n        obj.selected_armor={name:\"None\",cost:0,stopping_power:0,code:0};\r\n        \r\n        obj.selected_armor_type={type:\"Standard\",damage_coefficient:1,cost:1};\r\n        obj.cost_multipliers.armor_type=1;\r\n\r\n        obj.selected_absorption={absorption:0,cost:1,armor_penalty:1};\r\n        obj.cost_multipliers.absorption=1;\r\n\r\n        obj.kills_space_trade={};\r\n        obj.kills_space_trade.space_modifier=0;\r\n        obj.kills_space_trade.kills_modifier=0;\r\n        obj.kills_space_trade.cost=0;\r\n\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        updateServoType(_servo_type)\r\n        {   \r\n            this.component_type=_servo_type.type;\r\n            this.$set(this,\"selected_servo_type\",_servo_type);\r\n            this.component_changed=true;\r\n        },\r\n        updateServoClass(_servo_class)\r\n        {\r\n            this.$set(this,\"selected_servo_class\",_servo_class);\r\n            this.component_changed=true;\r\n        },\r\n        updateArmor(_armor)\r\n        {\r\n            this.$set(this,\"selected_armor\",_armor);\r\n            this.component_changed=true;\r\n        },\r\n        updateArmorType(_armor_type)\r\n        {\r\n            this.$set(this,\"selected_armor_type\",JSON.parse(JSON.stringify(_armor_type)));\r\n            this.cost_multipliers.armor_type=this.selected_armor_type.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateAbsorption(_absorption)\r\n        {\r\n            this.$set(this,\"selected_absorption\",JSON.parse(JSON.stringify(_absorption)));\r\n            this.cost_multipliers.absorption=this.selected_absorption.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateExtraSpace(_kills_space_trade)\r\n        {\r\n            this.kills_space_trade.space_modifier=_kills_space_trade.space;\r\n            this.kills_space_trade.kills_modifier=_kills_space_trade.kills;\r\n            this.kills_space_trade.cost=_kills_space_trade.cost;\r\n            this.component_changed=true;\r\n        },\r\n        ingest_data(_data_object)\r\n        {\r\n            let alertMessage=\"Torso bad, resetting to 'standard' shield.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(this.component_name==this.servo_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n        },\r\n        output_data()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"servo\";\r\n            return_data.component_name=this.component_name===null?this.servo_name:this.component_name;\r\n            return_data.selected_servo_type=JSON.parse(JSON.stringify(this.selected_servo_type));\r\n            return_data.selected_servo_class=JSON.parse(JSON.stringify(this.selected_servo_class));\r\n            return_data.selected_armor=JSON.parse(JSON.stringify(this.selected_armor));\r\n            return_data.selected_armor_type=JSON.parse(JSON.stringify(this.selected_armor_type));\r\n            return_data.selected_absorption=JSON.parse(JSON.stringify(this.selected_absorption));\r\n            return_data.cost_multipliers=JSON.parse(JSON.stringify(this.cost_multipliers));\r\n            return_data.kills_space_trade=JSON.parse(JSON.stringify(this.kills_space_trade));\r\n            \r\n            return_data.cost=this.cost;\r\n            return_data.cost_multiplier=this.cost_multiplier;\r\n            return_data.weight=this.weight;\r\n            return_data.total_kills=this.total_kills;\r\n            return_data.available_space=this.available_space;\r\n\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return return_data;\r\n        },\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"clear\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                    }\r\n                    break;\r\n                case \"clear\":\r\n                    this.uuid=null;\r\n                    this.selected_servo_type.type=\"Torso\";\r\n                    this.$set(this,\"selected_servo_class\",{code:1,name:\"Superlight\",space:2,cost:2,kills:2})\r\n                    this.$set(this,\"selected_armor\",{name:\"None\",cost:0,stopping_power:0,code:0});\r\n                    this.$set(this,\"selected_armor_type\",{type:\"Standard\",damage_coefficient:1,cost:1});\r\n                    this.cost_multipliers.armor_type=1;\r\n                    this.$set(this,\"selected_absorption\",{absorption:0,cost:1,armor_penalty:1});\r\n                    this.cost_multipliers.absorption=1;\r\n                    this.$set(this,\"kills_space_trade\",{space_modifier:0,kills_modifier:0,cost:0});\r\n                    this.component_name=null;\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        servo_name()\r\n        {\r\n            let type=this.selected_servo_type.type;\r\n            let reinforced=this.kills_space_trade.kills_modifier>0 ? \" Reinforced \" : \"\";\r\n            let armor_type=this.selected_armor_type.type;\r\n            let armor=this.selected_armor.cost>0 && this.selected_armor_type.cost==1 ? \" Armored \" :\r\n                        this.selected_armor.cost>0 && this.selected_armor_type.cost!=1 ? \" \"+armor_type+\"-Armored \" :\r\n                        \"\";\r\n            let absorbing=this.selected_absorption.cost>1 ? \" Absorbing \":\"\";\r\n            let additional=reinforced!=\"\"||this.selected_armor.cost>0 ? \" - \" : \"\";\r\n            let name=type+\" Servo\"+additional+reinforced+absorbing+armor;\r\n            name=name.trim();\r\n            name=name.replace(/\\s+/gi,\" \");\r\n            return name;\r\n        },\r\n        base_cost()\r\n        {\r\n            return this.selected_servo_class.cost + this.selected_armor.cost + this.kills_space_trade.cost;\r\n        },\r\n        cost()\r\n        {\r\n            return this.selected_servo_class.cost + (this.selected_armor.cost*this.cost_multiplier) + this.kills_space_trade.cost;\r\n        },\r\n        available_space()\r\n        {\r\n            return this.selected_servo_class.space + this.kills_space_trade.space_modifier;\r\n        },\r\n        damage_capacity()\r\n        {\r\n            let servo_kills=this.selected_servo_class.kills;\r\n            let kills_space_trade_sp_loss=this.kills_space_trade.kills_modifier;\r\n            return servo_kills + this.final_stopping_power + kills_space_trade_sp_loss;\r\n        },\r\n        total_kills()\r\n        {\r\n            return this.selected_servo_class.kills + this.kills_space_trade.kills_modifier;\r\n        },\r\n        weight()\r\n        {\r\n            return this.round(this.damage_capacity/2,2);\r\n        },\r\n        final_stopping_power()\r\n        {\r\n            return this.selected_armor.stopping_power-(this.selected_armor.stopping_power*this.selected_absorption.armor_penalty);\r\n        },\r\n        is_arm()\r\n        {\r\n            return this.selected_servo_type.type.toLowerCase()==\"arm\";\r\n        },\r\n        is_leg()\r\n        {\r\n            return this.selected_servo_type.type.toLowerCase()==\"leg\";\r\n        }\r\n    }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_servo-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_servo-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_servo-main.vue?vue&type=template&id=3eae5666&\"\nimport script from \"./mek_servo-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_servo-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
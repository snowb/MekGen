{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/es6.parse-float.js","webpack:///./node_modules/core-js/library/modules/_parse-float.js","webpack:///./src/data_table_modules/universal/mek_space-efficiency-data-module.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-float.js","webpack:///./node_modules/core-js/library/modules/_parse-int.js","webpack:///./node_modules/core-js/library/modules/es6.parse-int.js","webpack:///./node_modules/core-js/library/fn/parse-float.js","webpack:///./node_modules/core-js/library/modules/_string-trim.js","webpack:///./node_modules/core-js/library/fn/parse-int.js","webpack:///./node_modules/core-js/library/modules/_string-ws.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js"],"names":["$export","__webpack_require__","$parseFloat","G","F","parseFloat","$trim","trim","module","exports","Infinity","str","string","String","result","charAt","isValid","_val","undefined","validate_efficiency","_efficiency","_raw_space","_parent_component_name","update","data","modifier","cost","alerts","parent_component_name","isNaN","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_parse_float__WEBPACK_IMPORTED_MODULE_1___default","push","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_parse_int__WEBPACK_IMPORTED_MODULE_0___default","$parseInt","parseInt","ws","hex","radix","test","defined","fails","spaces","space","non","ltrim","RegExp","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","fn","P","TYPE","replace"],"mappings":"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","file":"js/mek_space-efficiency-data-module-legacy.e805e99f.js","sourcesContent":["var $export = require('./_export');\nvar $parseFloat = require('./_parse-float');\n// 18.2.4 parseFloat(string)\n$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });\n","var $parseFloat = require('./_global').parseFloat;\nvar $trim = require('./_string-trim').trim;\n\nmodule.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {\n  var string = $trim(String(str), 3);\n  var result = $parseFloat(string);\n  return result === 0 && string.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;\n","let isValid=(_val)=>\r\n{\r\n  return _val!==undefined && _val!==null && _val!=\"\";\r\n};\r\n\r\nlet validate_efficiency=(_efficiency, _raw_space, _parent_component_name)=>\r\n{\r\n  let update=false;\r\n  let data={modifier:0,cost:0};\r\n  let alerts=[];\r\n  let parent_component_name=isValid(_parent_component_name) ? _parent_component_name : \"Unknown\";\r\n\r\n  switch(true)\r\n  {\r\n    case _raw_space===undefined:\r\n    case isNaN(parseFloat(_raw_space)):\r\n    case _efficiency===undefined:\r\n    case _efficiency.modifier===undefined && _efficiency.cost===undefined:\r\n    case isNaN(parseFloat(_efficiency.modifier)) && isNaN(parseFloat(_efficiency.cost)):\r\n      alerts.push(parent_component_name+\" - Mek_Space-Efficiency:\");\r\n      alerts.push(\"**** Missing or invalid values, reseting to 0 space efficiency.\");\r\n      update=true;\r\n      return {update:update,data:data,alerts:alerts};\r\n  }\r\n  data.modifier=parseFloat(_efficiency.modifier)==parseInt(_efficiency.modifier)\r\n                ? parseInt(_efficiency.modifier)\r\n                : parseFloat(_efficiency.modifier);\r\n  data.cost=parseFloat(_efficiency.cost)==parseInt(_efficiency.cost)\r\n            ? parseInt(_efficiency.cost)\r\n            : parseFloat(_efficiency.cost);\r\n  if(isNaN(data.modifier))\r\n  {\r\n    alerts.push(parent_component_name+\" - Mek_Space-Efficiency:\");\r\n    alerts.push(\"**** Missing Modifier, reseting based on Cost.\");\r\n    update=true;\r\n    data.modifier=data.cost*2;\r\n  }\r\n  if(isNaN(data.cost))\r\n  {\r\n    alerts.push(parent_component_name+\" - Mek_Space-Efficiency:\");\r\n    alerts.push(\"**** Missing Cost, reseting based on Modifier.\");\r\n    update=true;\r\n    data.cost=data.modifier/2;\r\n  }\r\n  if(data.modifier>_raw_space)\r\n  {\r\n    alerts.push(parent_component_name+\" - Mek_Space-Efficiency:\");\r\n    alerts.push(\"**** Modifier greater than Raw Space. Reseting to 0.\");\r\n    update=true;\r\n    data.modifier=0;\r\n    data.cost=0;\r\n  }\r\n  if(data.cost!=(data.modifier/2))\r\n  {\r\n    alerts.push(parent_component_name+\" - Mek_Space-Efficiency:\");\r\n    alerts.push(\"**** Modifier/Cost inconsistent. Reseting to Modifier.\");\r\n    update=true;\r\n    data.cost=data.modifier/2;\r\n  }\r\n\r\n  return {update:update,data:data,alerts:alerts};\r\n};\r\n\r\nexport {validate_efficiency};","module.exports = require(\"core-js/library/fn/parse-float\");","var $parseInt = require('./_global').parseInt;\nvar $trim = require('./_string-trim').trim;\nvar ws = require('./_string-ws');\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 18.2.5 parseInt(string, radix)\n$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });\n","require('../modules/es6.parse-float');\nmodule.exports = require('../modules/_core').parseFloat;\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","require('../modules/es6.parse-int');\nmodule.exports = require('../modules/_core').parseInt;\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","module.exports = require(\"core-js/library/fn/parse-int\");"],"sourceRoot":""}
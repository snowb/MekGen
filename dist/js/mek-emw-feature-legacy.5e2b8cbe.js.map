{"version":3,"sources":["webpack:///./src/components/mek_emw/subcomponents/mek_emw-feature.vue?250d","webpack:///./src/components/data_table_modules/mek_emw/mek_emw-feature-data-module.js","webpack:///src/components/mek_emw/subcomponents/mek_emw-feature.vue","webpack:///./src/components/mek_emw/subcomponents/mek_emw-feature.vue?00f5","webpack:///./src/components/mek_emw/subcomponents/mek_emw-feature.vue","webpack:///./src/mixins/alerts_mixin.js","webpack:///./src/components/data_table_modules/universal/mek_partial-function-data-module.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","items","feature_table","pkey","selected-keys","selected_keys","headers","feature","cost","name","flow","show-headers","format","on","update-selected-data","select_feature","staticRenderFns","feature_data_table","exclusive_beam_shield","exclusive_beam","filter","_el","data_table_keys","feature_validate","partial_validate","has_feature","partial_has_feature","get_feature","partial_get_feature","is_exclusive_feature","_exclusive_target","_pkey","_pkey_value","exclusive_target_array","toLowerCase","some","_val","cleaned_feature","_feature_array","hasExclusiveBeam","update","key_list","alerts","undefined","push","error","cleaned_array","temp_selected_feature_array","reduceRight","_cleaned_array","stringify_default","clean_feature","isBeam","includes","reverse","mek_emw_featurevue_type_script_lang_js_","props","mixins","utility_mixin","alerts_mixin","components","mek-sub-component-table","__webpack_require__","e","then","bind","data","obj","suppressAlerts","selected_feature_array","methods","_selected_feature","_this","new_selected_feature_array","toggleFeature","cleaned_data","mek_emw_feature_data_module_cleaned_feature","length","forEach","_alert","addAlert","publishAlerts","$set","$emit","_feature","_this2","feature_array","JSON","parse","remove_feature","return_array","computed","turnsInUse","_this3","featureArray","subcomponents_mek_emw_featurevue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","_alert_string","$store","commit","_data_table","_validation_keys","_data","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_1___default","valid","_keys","_key","_has_feature","found_feature","_table_val","partial_cleaned_feature","_validator","_get_feature","_default_data","_name","json_data","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/mek-emw-feature-legacy.5e2b8cbe.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.feature_table,\"pkey\":_vm.pkey,\"selected-keys\":_vm.selected_keys,\"headers\":{feature:'Feature',cost:'Cost'},\"name\":\"Features\",\"flow\":\"pkey-col\",\"show-headers\":true,\"format\":{cost:'multiplier'}},on:{\"update-selected-data\":_vm.select_feature}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature} from \"../universal/mek_partial-function-data-module\";\r\n\r\n//create new feature_data_table\r\nlet feature_data_table=\r\n[\r\n    {feature:\"Rechargeable\",cost:1.1},\r\n    {feature:\"Thrown\",cost:1.2},\r\n    {feature:\"Quick\",cost:2},\r\n    {feature:\"Hyper\",cost:7.5},\r\n    {feature:\"Beam Shield\",cost:1.5,exclusive_beam_shield:true},\r\n    {feature:\"Variable Beam Shield\",cost:2,exclusive_beam_shield:true}\r\n];\r\nlet exclusive_beam=feature_data_table.filter((_el)=>{return typeof _el.exclusive_beam_shield!==\"undefined\";});\r\nlet data_table_keys=[\"feature\",\"cost\",\"exclusive_beam_shield\"];\r\n\r\n//data validator for damage_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet feature_validate=partial_validate(feature_data_table, data_table_keys);\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=partial_has_feature(feature_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_feature=partial_get_feature(feature_data_table, has_feature);\r\n\r\nlet is_exclusive_feature=function(_exclusive_target, _pkey, _pkey_value)\r\n{\r\n    let exclusive_target_array=null;\r\n    switch(_exclusive_target.toLowerCase())\r\n    {\r\n        case \"exclusive_beam\":\r\n            exclusive_target_array=exclusive_beam;\r\n            break;\r\n    }\r\n    if(exclusive_target_array===null)\r\n    {\r\n        return false;\r\n    }\r\n    return exclusive_target_array.some((_val)=>\r\n    {\r\n        return _val[_pkey]==_pkey_value;\r\n    });\r\n};\r\n\r\nlet cleaned_feature=function(_feature_array, _pkey)\r\n{//takes feature_array, returns cleaned array removing multiple exclusive values\r\n    let hasExclusiveBeam=false;\r\n    let update=false;\r\n    let key_list=[];\r\n    let alerts=[];\r\n\r\n    if(_feature_array===undefined || _pkey===undefined)\r\n    {\r\n        alerts.push(\"Mek_EMW-Feature: \");\r\n        let error=_feature_array===undefined\r\n            ? \"**** Missing feature array. Returning blank. ****\"\r\n            : \"**** No primary key provided. Returning blank. ****\";\r\n        alerts.push(error);\r\n        return {cleaned_array:[],update:true,key_list:[],alerts:alerts};\r\n    }\r\n\r\n    let temp_selected_feature_array=_feature_array.reduceRight((_cleaned_array, _val)=>\r\n    {\r\n        if(_val[_pkey]===undefined)\r\n        {//if feature with pkey doesn't exist in data table, ignore\r\n            alerts.push(\"Mek_EMW-Feature: \"+JSON.stringify(_val));\r\n            alerts.push(\"**** Missing primary key. Ignoring. ****\");\r\n            return _cleaned_array;\r\n        }\r\n        let clean_feature=_val;\r\n        if(!feature_validate(_val))\r\n        {//invalid data\r\n            alerts.push(\"Mek_EMW-Feature: \"+JSON.stringify(_val))\r\n            alerts.push(\"**** Invalid data, attempting to reset. ****\")\r\n            clean_feature=get_feature(_pkey,_val[_pkey]);\r\n            update=true;\r\n            //attempt to set to corrected feature\r\n        }\r\n        if(clean_feature===null)\r\n        {//no matching feature\r\n            alerts.push(\"**** Unable to reset. No matching data. ****\")\r\n            update=true;\r\n            return _cleaned_array;\r\n            //ignore element\r\n        }\r\n        let isBeam=is_exclusive_feature(\"exclusive_beam\",_pkey,_val[_pkey]);\r\n\r\n        if(isBeam && !hasExclusiveBeam)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusiveBeam=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isBeam && hasExclusiveBeam)\r\n        {\r\n            alerts.push(\"Mek_EMW-Feature: \"+_val);\r\n            alerts.push(\"**** Duplicate exclusive EMW data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n\r\n        if(!key_list.includes(_val[_pkey]))\r\n        {\r\n            _cleaned_array.push(_val);\r\n            key_list.push(_val[_pkey]);\r\n        }\r\n        return _cleaned_array;\r\n    },[]);\r\n    temp_selected_feature_array.reverse();\r\n\r\n    return {cleaned_array:temp_selected_feature_array,update:update,key_list:key_list,alerts:alerts};\r\n    //returns an object with the pruned feature array, whether it was updated, and the key_list\r\n}\r\n\r\nexport {feature_data_table, feature_validate, has_feature, get_feature, exclusive_beam, cleaned_feature};\r\n","<template>\r\n    <mek-sub-component-table\r\n        :items=\"feature_table\" :pkey=\"pkey\" :selected-keys=\"selected_keys\"\r\n        :headers=\"{feature:'Feature',cost:'Cost'}\"\r\n        name=\"Features\" flow=\"pkey-col\" :show-headers=\"true\"\r\n        :format=\"{cost:'multiplier'}\"\r\n        @update-selected-data=\"select_feature\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport utility_mixin from \"../../../mixins/utility_mixin\";\r\nimport alerts_mixin from \"../../../mixins/alerts_mixin\";\r\n\r\nimport {feature_data_table, cleaned_feature}\r\n    from \"../../data_table_modules/mek_emw/mek_emw-feature-data-module\";\r\nexport default \r\n{\r\n    name:\"mek_melee_feature\",\r\n    props:[\"featureArray\",\"turnsInUse\"],\r\n    mixins:[utility_mixin,alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"../../universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.alerts=[];\r\n        obj.pkey=\"feature\";\r\n        obj.suppressAlerts=false;\r\n        obj.selected_feature_array=[];\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_feature:function(_selected_feature)\r\n        {\r\n            this.suppressAlerts=true;//suppress alerts, for exclusive switching\r\n            let new_selected_feature_array=this.toggleFeature(this.selected_feature_array,_selected_feature);\r\n            let cleaned_data=cleaned_feature(new_selected_feature_array, this.pkey);\r\n            new_selected_feature_array=cleaned_data.cleaned_array;\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            this.publishAlerts();\r\n            this.$set(this,\"selected_feature_array\",new_selected_feature_array);\r\n            this.$emit(\"update-feature\",new_selected_feature_array);\r\n            this.suppressAlerts=false;\r\n        },\r\n        toggleFeature(_feature_array,_feature)\r\n        {//consider moving to universal data module functions thing\r\n            let feature_array=JSON.parse(JSON.stringify(_feature_array));\r\n            \r\n            let remove_feature=feature_array.some((_val)=>\r\n            {//if _feature matches already existing feature, flag for deletion\r\n                return _val[this.pkey]==_feature[this.pkey];\r\n            },this);\r\n\r\n            if(remove_feature)\r\n            {//if flagged for removal, filter out\r\n                let return_array=feature_array.filter((_val)=>\r\n                {\r\n                    return _val[this.pkey]!=_feature[this.pkey];\r\n                },this);\r\n                return return_array;\r\n            }\r\n            feature_array.push(_feature);\r\n            //otherwise add feature and return\r\n            return feature_array;\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        feature_table()\r\n        {\r\n          if(!this.turnsInUse)\r\n            {\r\n                return feature_data_table.filter((_val)=>\r\n                {\r\n                    return _val.feature!=\"Rechargeable\";\r\n                });\r\n            }\r\n            return feature_data_table;\r\n        },\r\n        selected_keys()\r\n        {\r\n            let cleaned_data=cleaned_feature(this.featureArray,this.pkey);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.$emit(\"update-feature\",cleaned_data.cleaned_array);\r\n            }\r\n            this.$set(this,\"selected_feature_array\",cleaned_data.cleaned_array);\r\n            return cleaned_data.key_list;\r\n        },\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_emw-feature.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_emw-feature.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_emw-feature.vue?vue&type=template&id=1a4ca765&\"\nimport script from \"./mek_emw-feature.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_emw-feature.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return !_validation_keys.some((_keys)=>\r\n        {//returns true on invalid data, Not the return to return True if matching valid value is found\r\n            return _data[_keys]!=_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n"],"sourceRoot":""}
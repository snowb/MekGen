{"version":3,"sources":["webpack:///./src/components/mek_missile/mek_missile-main.vue?dc0b","webpack:///src/components/mek_missile/mek_missile-main.vue","webpack:///./src/components/mek_missile/mek_missile-main.vue?f9ae","webpack:///./src/components/mek_missile/mek_missile-main.vue","webpack:///./src/mixins/component_computed_mixin.js","webpack:///./src/mixins/component_methods_mixin.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","width","attrs","new-component","newComponent","component-name","component_name","missile_name","component-changed","component_changed","on","update-component-name","updateComponentName","damage","selected_damage","update-damage","updateDamage","align-self","pack","selected_pack_size","update-pack-size","updatePackSize","is_mine","_e","accuracy","selected_accuracy","update-accuracy","updateAccuracy","range-mod","selected_range_mod","anti-missile","has_feature","base-range","range","update-range-mod","updateRangeMod","smart","selected_smart","update-smart","updateSmart","skill","selected_skill","update-skill","updateSkill","space_efficiency","efficiencies","space","raw_space","update-efficiencies","updateEfficiencies","blast_radius","selected_blast_radius","update-blast-radius","updateBlastRadius","feature-array","feature_array","smart-missile","blast-radius","update-feature","updateFeature","cols","rows","slot","_v","_s","damage_capacity","range_mod","smoke_scatter_duration","max-width","margin-left","feature_list","space_cost","round","weight","cost","cost_multiplier","font-weight","save-reset-component","componentSaveReset","staticRenderFns","mek_missile_mainvue_type_script_lang_js_","name","props","mixins","selected_item_mixin","utility_mixin","component_computed_mixin","component_methods_mixin","components","mek-missile-damage","__webpack_require__","e","then","bind","mek-missile-pack-size","mek-missile-accuracy","mek-missile-range-mod","mek-missile-smart","mek-missile-skill","mek-missile-blast-radius","mek-missile-feature","mek-space-efficiency","mek-component-name","mek-save-reset-component","mek-component-stats","data","obj","uuid","component_category","component_type","original_component","type","modifier","cost_multipliers","feature","methods","_name","_data","$set","_damage","has_duration","_missiles","size","_accuracy","_range_mod","_smart","_skill","_blast","_featureArray","reduce","_multi","_val","_action","action","$store","commit","output_data","ingest_data","JSON","parse","_this","return_data","create_uuid","stringify_default","total_cost","final_damage","$nextTick","_data_object","_this2","alertMessage","universal_ingest_data","_feature","some","toLowerCase","computed","subtotal_cost","is_bomb","mek_missile_mek_missile_mainvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","multi","_string","_index","selectedComponent","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","getters","_alertMessage","_property","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_5___default","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_keys__WEBPACK_IMPORTED_MODULE_2___default","_computedWatchers","includes","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0___default","_sub_property","$forceUpdate"],"mappings":"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","file":"js/chunk-0b99f442.e3ce6897.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"mek-inline-flex-col\",staticStyle:{\"width\":\"100%\"}},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.missile_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-missile-damage',{attrs:{\"damage\":_vm.selected_damage},on:{\"update-damage\":_vm.updateDamage}}),_c('mek-missile-pack-size',{staticStyle:{\"align-self\":\"flex-end\"},attrs:{\"pack\":_vm.selected_pack_size},on:{\"update-pack-size\":_vm.updatePackSize}}),(!_vm.is_mine)?_c('mek-missile-accuracy',{attrs:{\"accuracy\":_vm.selected_accuracy},on:{\"update-accuracy\":_vm.updateAccuracy}}):_vm._e(),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-missile-range-mod',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"range-mod\":_vm.selected_range_mod,\"anti-missile\":_vm.has_feature('countermissile'),\"base-range\":_vm.selected_damage.range},on:{\"update-range-mod\":_vm.updateRangeMod}}),_c('div',{staticClass:\"mek-inline-flex-col\"},[_c('mek-missile-smart',{attrs:{\"smart\":_vm.selected_smart},on:{\"update-smart\":_vm.updateSmart}}),(_vm.selected_smart.smart>0)?_c('mek-missile-skill',{attrs:{\"skill\":_vm.selected_skill},on:{\"update-skill\":_vm.updateSkill}}):_vm._e(),_c('mek-space-efficiency',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"space_efficiency\":_vm.efficiencies.space,\"raw_space\":_vm.raw_space},on:{\"update-efficiencies\":_vm.updateEfficiencies}})],1),_c('mek-missile-blast-radius',{attrs:{\"blast_radius\":_vm.selected_blast_radius},on:{\"update-blast-radius\":_vm.updateBlastRadius}}),_c('mek-missile-feature',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"feature-array\":_vm.feature_array,\"smart-missile\":_vm.selected_smart.smart>0,\"blast-radius\":_vm.selected_blast_radius.blast_radius},on:{\"update-feature\":_vm.updateFeature}})],1)],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":5}},[_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Kills: \"+_vm._s(_vm.selected_damage.damage)+\" K\")]),_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_vm._v(\"Damage Capacity: \"+_vm._s(_vm.damage_capacity)+\" K\")]),_c('div',{attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Final Range: \"+_vm._s(_vm.selected_damage.range * _vm.selected_range_mod.range_mod))]),(_vm.has_duration)?_c('div',{attrs:{\"slot\":\"col1-row4\"},slot:\"col1-row4\"},[_vm._v(\"Duration: \"+_vm._s(_vm.smoke_scatter_duration)+\" rounds\")]):_vm._e(),_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Feature(s):\"),_c('div',{staticStyle:{\"max-width\":\"150px\",\"margin-left\":\"10px\"}},[_vm._v(_vm._s(_vm.feature_list))])]),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.raw_space))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Space: \"+_vm._s(_vm.space_cost))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.round(_vm.weight,2))+\" tons\")]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.selected_damage.cost))]),_c('div',{attrs:{\"slot\":\"col4-row2\"},slot:\"col4-row2\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.cost_multiplier))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row3\"},slot:\"col4-row3\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <span class=\"mek-inline-flex-col\" style=\"width:100%;\">\r\n        <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||missile_name\"\r\n            :component-changed=\"component_changed\"\r\n            @update-component-name=\"updateComponentName\"\r\n        ></mek-component-name>\r\n        \r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-missile-damage @update-damage=\"updateDamage\" :damage=\"selected_damage\"></mek-missile-damage>\r\n            <mek-missile-pack-size :pack=\"selected_pack_size\" @update-pack-size=\"updatePackSize\"\r\n                style=\"align-self:flex-end;\"\r\n            ></mek-missile-pack-size>\r\n            <mek-missile-accuracy v-if=\"!is_mine\"\r\n                @update-accuracy=\"updateAccuracy\" \r\n                :accuracy=\"selected_accuracy\"\r\n            ></mek-missile-accuracy>\r\n            <div class=\"mek-inline-flex-row\">\r\n                <mek-missile-range-mod style=\"align-self:baseline;\"\r\n                    @update-range-mod=\"updateRangeMod\"\r\n                    :range-mod=\"selected_range_mod\" :anti-missile=\"has_feature('countermissile')\"\r\n                    :base-range=\"selected_damage.range\"\r\n                ></mek-missile-range-mod>\r\n                <div class=\"mek-inline-flex-col\">\r\n                    <mek-missile-smart :smart=\"selected_smart\"\r\n                        @update-smart=\"updateSmart\"\r\n                    ></mek-missile-smart>\r\n                    <mek-missile-skill v-if=\"selected_smart.smart>0\" :skill=\"selected_skill\"\r\n                        @update-skill=\"updateSkill\"\r\n                    ></mek-missile-skill>\r\n                    <mek-space-efficiency style=\"align-self:baseline;\"\r\n                        :space_efficiency=\"efficiencies.space\"\r\n                        :raw_space=\"raw_space\"\r\n                        @update-efficiencies=\"updateEfficiencies\"\r\n                    ></mek-space-efficiency>\r\n                </div>\r\n                <mek-missile-blast-radius :blast_radius=\"selected_blast_radius\"\r\n                    @update-blast-radius=\"updateBlastRadius\"\r\n                ></mek-missile-blast-radius>\r\n                <mek-missile-feature style=\"align-self:baseline;\"\r\n                    @update-feature=\"updateFeature\"\r\n                    :feature-array=\"feature_array\" :smart-missile=\"selected_smart.smart>0\"\r\n                    :blast-radius=\"selected_blast_radius.blast_radius\"\r\n                ></mek-missile-feature>\r\n            </div>                \r\n        </div>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-component-stats :cols=\"4\" :rows=\"5\">\r\n                <div slot=\"col1-row1\">Kills: {{selected_damage.damage}} K</div>\r\n                <div slot=\"col1-row2\">Damage Capacity: {{damage_capacity}} K</div>\r\n                <div slot=\"col1-row3\">Final Range: {{selected_damage.range * selected_range_mod.range_mod}}</div>\r\n                <div slot=\"col1-row4\" v-if=\"has_duration\">Duration: {{smoke_scatter_duration}} rounds</div>\r\n\r\n                <div slot=\"col2-row1\">Feature(s):<div style=\"max-width:150px;margin-left:10px;\">{{feature_list}}</div></div>\r\n\r\n                <div slot=\"col3-row1\">Base Space: {{raw_space}}</div>\r\n                <div slot=\"col3-row2\">Space: {{space_cost}}</div>\r\n                <div slot=\"col3-row3\">Weight: {{round(weight,2)}} tons</div>\r\n\r\n                <div slot=\"col4-row1\">Base Cost: {{selected_damage.cost}}</div>\r\n                <div slot=\"col4-row2\">Multiplier: x{{cost_multiplier}}</div>\r\n                <div slot=\"col4-row3\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n            </mek-component-stats>\r\n            <mek-save-reset-component @save-reset-component=\"componentSaveReset\"></mek-save-reset-component>\r\n        </div>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\nimport selected_item_mixin from \"../../mixins/selected_item_mixin\";\r\nimport utility_mixin from \"../../mixins/utility_mixin\";\r\nimport component_computed_mixin from \"../../mixins/component_computed_mixin\";\r\nimport component_methods_mixin from \"../../mixins/component_methods_mixin\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_missile\",\r\n    props:[],\r\n    mixins:[selected_item_mixin, utility_mixin, component_computed_mixin, component_methods_mixin],\r\n    components:\r\n    {\r\n        \"mek-missile-damage\":()=>import(\"./subcomponents/mek_missile-damage.vue\"),\r\n        \"mek-missile-pack-size\":()=>import(\"./subcomponents/mek_missile-pack-size.vue\"),\r\n        \"mek-missile-accuracy\":()=>import(\"./subcomponents/mek_missile-accuracy.vue\"),\r\n        \"mek-missile-range-mod\":()=>import(\"./subcomponents/mek_missile-range-mod.vue\"),\r\n        \"mek-missile-smart\":()=>import(\"./subcomponents/mek_missile-smart.vue\"),\r\n        \"mek-missile-skill\":()=>import(\"./subcomponents/mek_missile-skill.vue\"),\r\n        \"mek-missile-blast-radius\":()=>import(\"./subcomponents/mek_missile-blast-radius.vue\"),\r\n        \"mek-missile-feature\":()=>import(\"./subcomponents/mek_missile-feature.vue\"),\r\n\r\n        \"mek-space-efficiency\":()=>import(\"../universal/mek-space-efficiency.vue\"),\r\n        \"mek-component-name\":()=>import(\"../universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>import(\"../universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>import(\"../universal/mek_component-stats.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.uuid=null;\r\n        obj.component_name=null;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"missile\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.selected_damage={damage:1,cost:0.1,range:4};\r\n        obj.selected_pack_size=1;\r\n        obj.selected_accuracy={accuracy:0,cost:1};\r\n        obj.selected_range_mod={range_mod:1,cost:1,type:null};\r\n        obj.selected_smart={smart:0,cost:1};\r\n        obj.selected_skill={skill:6,cost:1};\r\n        obj.selected_blast_radius={blast_radius:0,cost:1};\r\n        obj.smoke_scatter_duration=null;\r\n\r\n        obj.damage_capacity=this.round(1/15,2);\r\n\r\n        obj.feature_array=[];\r\n\r\n        obj.efficiencies={};\r\n        obj.efficiencies.space={};\r\n        obj.efficiencies.space.cost=0;\r\n        obj.efficiencies.space.modifier=0;\r\n\r\n        obj.cost_multipliers={};\r\n        obj.cost_multipliers.accuracy=1;\r\n        obj.cost_multipliers.feature=1;\r\n        obj.cost_multipliers.smart=1;\r\n        obj.cost_multipliers.skill=1;\r\n        obj.cost_multipliers.range_mod=1;\r\n        obj.cost_multipliers.blast_radius=1;\r\n\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        updateComponentName(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        updateEfficiencies(_data)\r\n        {\r\n            this.$set(this.efficiencies,\"space\",_data);\r\n            this.component_changed=true;\r\n        },\r\n        updateDamage(_damage)\r\n        {\r\n            this.selected_damage.damage=_damage.damage;\r\n            this.selected_damage.cost=_damage.cost;\r\n            this.component_changed=true;\r\n            this.damage_capacity=this.round(this.selected_pack_size*_damage.damage/15,2);\r\n\r\n            if(this.has_duration)\r\n            {\r\n                this.$set(this,\"smoke_scatter_duration\",this.round(this.selected_damage.damage/2,0));\r\n            }\r\n        },\r\n        updatePackSize(_missiles)\r\n        {\r\n            let size=_missiles>0 ? _missiles : 1;\r\n            this.$set(this,\"selected_pack_size\",size);\r\n            this.component_changed=true;\r\n            this.damage_capacity=this.round((this.selected_damage.damage*_missiles)/15,1);\r\n        },\r\n        updateAccuracy(_accuracy)\r\n        {\r\n            this.selected_accuracy.accuracy=_accuracy.accuracy;\r\n            this.selected_accuracy.cost=_accuracy.cost;\r\n            this.cost_multipliers.accuracy=_accuracy.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateRangeMod(_range_mod)\r\n        {\r\n            this.selected_range_mod.range_mod=_range_mod.range_mod;\r\n            this.selected_range_mod.cost=_range_mod.cost;\r\n            this.cost_multipliers.range_mod=_range_mod.cost;\r\n            this.selected_range_mod.type=typeof _range_mod.type!==\"undefined\" ? _range_mod.type : null;\r\n\r\n            if(this.is_mine)\r\n            {\r\n                this.updateAccuracy({accuracy:0,cost:1});\r\n            }\r\n            this.component_changed=true;\r\n        },\r\n        updateSmart(_smart)\r\n        {\r\n            this.selected_smart.smart=_smart.smart;\r\n            this.selected_smart.cost=_smart.cost;\r\n            this.cost_multipliers.smart=_smart.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateSkill(_skill)\r\n        {\r\n            this.selected_skill.skill=_skill.skill;\r\n            this.selected_skill.cost=_skill.cost;\r\n            this.cost_multipliers.smart=_skill.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateBlastRadius(_blast)\r\n        {\r\n            this.selected_blast_radius.blast_radius=_blast.blast_radius;\r\n            this.selected_blast_radius.cost=_blast.cost;\r\n            this.cost_multipliers.blast_radius=_blast.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateFeature(_featureArray)\r\n        {\r\n            this.$set(this,\"feature_array\",_featureArray);\r\n            this.cost_multipliers.feature=this.feature_array.reduce((_multi,_val)=>{return _multi*=_val.cost},1);\r\n            this.missile_name;\r\n\r\n            if(this.has_duration)\r\n            {\r\n                this.$set(this,\"smoke_scatter_duration\",this.round(this.selected_damage.damage/2,0));\r\n            }\r\n        },\r\n        /* generic updateProp method \r\n        updateProperty(_property)\r\n        {\r\n            this.selected_property1.prop1=_property.prop1;\r\n            this.selected_property1.prop2=_property.prop2;\r\n            this.selected_property1.prop3=_property.prop3;\r\n            this.component_changed=true;\r\n            this.damage_capacity=_damage.damage;\r\n        }, */\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"clear\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                    }\r\n                    break;\r\n                case \"clear\":\r\n                    this.uuid=null;\r\n                    this.efficiencies.space.modifier=0;\r\n                    this.component_name=null;\r\n                    //generic props and key values to reset\r\n                    //this.selected_property1.keyProp=1;\r\n                    //this.selected_property2.keyProp=1;\r\n                    //this.$set(this,\"feature_array\",[]);\r\n                    this.selected_damage.damage=1;\r\n                    this.selected_pack_size=1;\r\n                    this.selected_accuracy.accuracy=0;\r\n                    this.selected_range_mod.range_mod=1;\r\n                    this.selected_smart.smart=0;\r\n                    this.selected_skill.skill=6;\r\n                    this.selected_blast_radius.blast_radius=0;\r\n                    this.smoke_scatter_duration=null;\r\n                    this.$set(this,\"feature_array\",[]);\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        },\r\n        output_data()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"missile\";//specific equipment type\r\n            return_data.component_name=this.component_name===null?this.missile_name:this.component_name;\r\n\r\n            return_data.cost_multipliers=JSON.parse(JSON.stringify(this.cost_multipliers));\r\n            return_data.efficiencies=JSON.parse(JSON.stringify(this.efficiencies));\r\n\r\n            /* generic prop saves \r\n            return_data.selected_property1=JSON.parse(JSON.stringify(this.selected_property1));\r\n            return_data.selected_property2=JSON.parse(JSON.stringify(this.selected_property2));\r\n            return_data.feature_array=JSON.parse(JSON.stringify(this.feature_array));\r\n            */\r\n            return_data.selected_damage=JSON.parse(JSON.stringify(this.selected_damage));\r\n            return_data.selected_pack_size=this.selected_pack_size;\r\n            return_data.selected_accuracy=JSON.parse(JSON.stringify(this.selected_accuracy));\r\n            return_data.selected_range_mod=JSON.parse(JSON.stringify(this.selected_range_mod));\r\n            return_data.selected_smart=JSON.parse(JSON.stringify(this.selected_smart));\r\n            return_data.selected_skill=JSON.parse(JSON.stringify(this.selected_skill));\r\n            return_data.selected_blast_radius=JSON.parse(JSON.stringify(this.selected_blast_radius));\r\n            return_data.selected_blast_radius=JSON.parse(JSON.stringify(this.selected_blast_radius));\r\n\r\n            return_data.cost=this.total_cost;\r\n            return_data.cost_multiplier=this.cost_multiplier;\r\n            return_data.weight=this.weight;\r\n            return_data.final_damage=this.final_damage;\r\n            return_data.damage_capacity=this.damage_capacity;\r\n\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return return_data;\r\n        },\r\n        ingest_data(_data_object)\r\n        {\r\n            let alertMessage=\"Missile is not valid, resetting.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(this.component_name==this.missile_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n        },\r\n        has_feature(_feature)\r\n        {\r\n            return this.feature_array.some((_val)=>\r\n            {\r\n                return _val.feature.toLowerCase()==_feature.toLowerCase();\r\n            });\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        raw_space()\r\n        {\r\n            //core cost prop\r\n            let cost_multiplier=this.has_feature(\"nuclear\") ? this.cost_multiplier/1000 : this.cost_multiplier;\r\n\r\n            return this.round(this.selected_damage.cost * cost_multiplier * this.selected_pack_size,2);\r\n        },\r\n        cost:function()\r\n        {\r\n            let subtotal_cost=this.selected_damage.cost * this.cost_multiplier;\r\n            subtotal_cost += this.efficiencies.space.cost;\r\n\r\n            return this.round(subtotal_cost * this.selected_pack_size,2);\r\n        },\r\n        missile_name()\r\n        {\r\n            let missile_name=this.has_feature(\"nuclear\") ? \"Nuclear \":\"\";\r\n\r\n            missile_name=this.feature_array.reduce((_name,_val)=>\r\n            {\r\n                if(_val.feature.toLowerCase()==\"nuclear\")\r\n                {\r\n                    return _name;\r\n                }\r\n                return _name+_val.feature+\" \";\r\n            },missile_name);\r\n\r\n            let type=   this.is_mine ? \" Mine\" :\r\n                        this.is_bomb ? \" Bomb\" :\r\n                        \" Missile\"\r\n\r\n            missile_name=missile_name+type+\" Pack\";\r\n            \r\n            return missile_name+\" (\"+this.selected_pack_size+\")\";\r\n        },\r\n        is_bomb()\r\n        {\r\n            return typeof this.selected_range_mod.type!==\"undefined\" &&\r\n                            this.selected_range_mod.type!==null && \r\n                            this.selected_range_mod.type.toLowerCase()==\"bomb\";\r\n        },\r\n        is_mine()\r\n        {\r\n            return typeof this.selected_range_mod.type!==\"undefined\" && \r\n                            this.selected_range_mod.type!==null && \r\n                            this.selected_range_mod.type.toLowerCase()==\"mine\";\r\n        },\r\n        has_duration()\r\n        {\r\n            let has_duration=this.has_feature(\"smoke\") || this.has_feature(\"scatter\") || this.has_feature(\"smoke-scatter\");\r\n            return has_duration\r\n        }\r\n    }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_missile-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_missile-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_missile-main.vue?vue&type=template&id=06cfd527&\"\nimport script from \"./mek_missile-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_missile-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default\r\n{\r\n    computed:\r\n    {\r\n        space_cost()\r\n        {\r\n            return this.round(this.raw_space - this.efficiencies.space.modifier,2);\r\n        },\r\n        cost_multiplier()\r\n        {\r\n            let cost_multiplier=1;\r\n            for(let multi in this.cost_multipliers)\r\n            {\r\n                cost_multiplier*=this.cost_multipliers[multi];\r\n            }\r\n            return this.round(cost_multiplier,2);\r\n        },\r\n        weight()\r\n        {\r\n            return this.round((this.damage_capacity / 2),2);\r\n        },\r\n        feature_list()\r\n        {\r\n            if(typeof this.feature_array===\"undefined\")\r\n            {\r\n                return \"\";\r\n            }\r\n            return this.feature_array.reduce(function(_string, _val, _index)\r\n            {\r\n                _string+=_index>0 ? \", \" : \"\";\r\n                _string+=_val.feature;\r\n                return _string;\r\n            },\"\");\r\n        },\r\n        newComponent()\r\n        {//responsible for ingesting data from the store\r\n            let selectedComponent=JSON.parse(JSON.stringify(this.$store.getters.selectedComponent));\r\n\r\n            if(typeof selectedComponent!==\"undefined\" && selectedComponent!==null)\r\n            {\r\n                if(selectedComponent.uuid!==this.uuid \r\n                    && selectedComponent.component_category==this.component_category\r\n                    && selectedComponent.component_type==this.component_type)\r\n                {\r\n                    this.ingest_data(selectedComponent);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n    }\r\n};","export default\r\n{\r\n    methods:\r\n    {\r\n        universal_ingest_data(_data_object,_alertMessage)\r\n        {\r\n            this.original_component=JSON.stringify(_data_object);//store a copy as a JSON object for 'reset' purposes\r\n            if(_data_object===null)\r\n            {\r\n                this.componentSaveReset(\"clear\");\r\n                //generic error comment\r\n                this.$store.commit(\"alertMessage\",_alertMessage);\r\n            }\r\n\r\n            for(let _property in _data_object)\r\n            {//exclude computed properties that are auto updated\r\n                if(Object.keys(this._computedWatchers).includes(_property))\r\n                {\r\n                    continue;\r\n                }\r\n                if(typeof _data_object[_property]===\"object\" && !Array.isArray(_data_object[_property]))\r\n                {\r\n                    if(typeof this[_property]!==\"object\" || this[_property]===null)\r\n                    {\r\n                        this[_property]={};\r\n                    }\r\n                    for(let _sub_property in _data_object[_property])\r\n                    {\r\n                        this.$set(this[_property],[_sub_property],_data_object[_property][_sub_property]);\r\n                    }\r\n                }\r\n                else if(Array.isArray(_data_object[_property]))\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n                else\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n            }\r\n            this.$forceUpdate();\r\n        },\r\n        updateComponentName:function(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
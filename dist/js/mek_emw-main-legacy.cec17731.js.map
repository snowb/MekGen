{"version":3,"sources":["webpack:///./src/design_components/mek_emw/mek_emw-main.vue?b90c","webpack:///src/design_components/mek_emw/mek_emw-main.vue","webpack:///./src/design_components/mek_emw/mek_emw-main.vue?9450","webpack:///./src/design_components/mek_emw/mek_emw-main.vue","webpack:///./src/mixins/component_computed_mixin.js","webpack:///./src/mixins/component_methods_mixin.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","width","attrs","new-component","newComponent","component-name","component_name","emw_name","component-changed","component_changed","on","update-component-name","updateComponentName","damage","selected_damage","update-damage","updateDamage","alert-generated","handleAlert","accuracy","selected_accuracy","is-beam-shield","is_beam_shield","is-variable-beam-shield","is_variable_beam_shield","update-accuracy","updateAccuracy","attack-factor","selected_attack_factor","update-attack-factor","updateAttackFactor","turns-in-use","selected_turns_in_use","update-turns-in-use","updateTurnsInUse","align-self","feature-array","feature_array","infinite-use","turns","update-feature","updateFeature","space_efficiency","efficiencies","space","raw_space","update-efficiencies","updateEfficiencies","cols","rows","slot","_v","_s","beam_shield","stopping_power","defense_accuracy","_e","damage_capacity","max-width","margin-left","feature_list","space_cost","round","weight","cost","cost_multiplier","font-weight","save-reset-component","componentSaveReset","staticRenderFns","mek_emw_mainvue_type_script_lang_js_","name","props","mixins","utility_mixin","component_computed_mixin","component_methods_mixin","components","mek-emw-damage","__webpack_require__","e","then","bind","mek-emw-accuracy","mek-emw-attack-factor","mek-emw-turns-in-use","mek-emw-feature","mek-space-efficiency","mek-component-name","mek-save-reset-component","mek-component-stats","data","obj","uuid","component_category","component_type","original_component","defense_ability","attack_factor","modifier","cost_multipliers","feature","turns_in_use","hasAlert","methods","_name","_data","$set","_damage","_accuracy","_attack_factor","_turns","_featureArray","reduce","_multi","_val","output_emw_data","_this","return_data","create_uuid","JSON","parse","stringify_default","final_damage","$nextTick","ingest_data","_data_object","_this2","alertMessage","universal_ingest_data","_action","action","$store","commit","_alert_status","computed","subtotal_cost","some","test","replace","mek_emw_mek_emw_mainvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","multi","_string","_index","selectedComponent","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","getters","_alertMessage","_property","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_5___default","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_keys__WEBPACK_IMPORTED_MODULE_2___default","_computedWatchers","includes","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0___default","_sub_property","$forceUpdate","addAlert","_alert_string","alerts","push","publishAlerts","length"],"mappings":"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","file":"js/mek_emw-main-legacy.cec17731.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"mek-inline-flex-col\",staticStyle:{\"width\":\"100%\"}},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.emw_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-emw-damage',{attrs:{\"damage\":_vm.selected_damage},on:{\"update-damage\":_vm.updateDamage,\"alert-generated\":_vm.handleAlert}}),_c('mek-emw-accuracy',{attrs:{\"accuracy\":_vm.selected_accuracy,\"is-beam-shield\":_vm.is_beam_shield,\"is-variable-beam-shield\":_vm.is_variable_beam_shield},on:{\"update-accuracy\":_vm.updateAccuracy,\"alert-generated\":_vm.handleAlert}}),_c('mek-emw-attack-factor',{attrs:{\"attack-factor\":_vm.selected_attack_factor},on:{\"update-attack-factor\":_vm.updateAttackFactor,\"alert-generated\":_vm.handleAlert}})],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-emw-turns-in-use',{attrs:{\"turns-in-use\":_vm.selected_turns_in_use},on:{\"update-turns-in-use\":_vm.updateTurnsInUse,\"alert-generated\":_vm.handleAlert}}),_c('mek-emw-feature',{staticStyle:{\"align-self\":\"start\"},attrs:{\"feature-array\":_vm.feature_array,\"infinite-use\":_vm.selected_turns_in_use.turns=='__INFINITY__'},on:{\"update-feature\":_vm.updateFeature,\"alert-generated\":_vm.handleAlert}}),_c('span',{staticClass:\"mek-flex-col no-margin\"},[_c('mek-space-efficiency',{attrs:{\"space_efficiency\":_vm.efficiencies.space,\"raw_space\":_vm.raw_space},on:{\"update-efficiencies\":_vm.updateEfficiencies}})],1)],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":3}},[_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(_vm._s(_vm.is_beam_shield && !_vm.is_variable_beam_shield?\"Base\":\"\")+\" Kills: \"+_vm._s(_vm.selected_damage.damage)+\" K\")]),(_vm.is_beam_shield)?_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_c('div',[_vm._v(\"Beam Shield Kills: \"+_vm._s(_vm.beam_shield.damage)+\" K\")]),_c('div',[_vm._v(\"Stopping Power: \"+_vm._s(_vm.beam_shield.stopping_power)+\" K\")]),_c('div',[_vm._v(\"Defense Accuracy: \"+_vm._s(_vm.beam_shield.defense_accuracy))])]):_vm._e(),_c('div',{attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Damage Capacity: \"+_vm._s(_vm.damage_capacity)+\" K\")]),_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Feature(s):\"),_c('div',{staticStyle:{\"max-width\":\"150px\",\"margin-left\":\"10px\"}},[_vm._v(_vm._s(_vm.feature_list))])]),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.raw_space))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Space: \"+_vm._s(_vm.space_cost))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.round(_vm.weight,2))+\" tons\")]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.selected_damage.cost))]),_c('div',{attrs:{\"slot\":\"col4-row2\"},slot:\"col4-row2\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.cost_multiplier))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row3\"},slot:\"col4-row3\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <span class=\"mek-inline-flex-col\" style=\"width:100%;\">\r\n        <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||emw_name\"\r\n            :component-changed=\"component_changed\"\r\n            @update-component-name=\"updateComponentName\"\r\n        ></mek-component-name>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-emw-damage @update-damage=\"updateDamage\" @alert-generated=\"handleAlert\"\r\n                :damage=\"selected_damage\"\r\n            ></mek-emw-damage>\r\n            <mek-emw-accuracy \r\n                @update-accuracy=\"updateAccuracy\" @alert-generated=\"handleAlert\"\r\n                :accuracy=\"selected_accuracy\"\r\n                :is-beam-shield=\"is_beam_shield\"\r\n                :is-variable-beam-shield=\"is_variable_beam_shield\"\r\n            ></mek-emw-accuracy>\r\n            <mek-emw-attack-factor \r\n                @update-attack-factor=\"updateAttackFactor\" @alert-generated=\"handleAlert\"\r\n                :attack-factor=\"selected_attack_factor\"\r\n            ></mek-emw-attack-factor>\r\n        </div>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-emw-turns-in-use \r\n                @update-turns-in-use=\"updateTurnsInUse\" @alert-generated=\"handleAlert\"\r\n                :turns-in-use=\"selected_turns_in_use\"\r\n            ></mek-emw-turns-in-use>\r\n            <mek-emw-feature style=\"align-self:start;\"\r\n                @update-feature=\"updateFeature\" @alert-generated=\"handleAlert\"\r\n                :feature-array=\"feature_array\"\r\n                :infinite-use=\"selected_turns_in_use.turns=='__INFINITY__'\"\r\n            ></mek-emw-feature>\r\n            <span class=\"mek-flex-col no-margin\">\r\n                <mek-space-efficiency\r\n                    :space_efficiency=\"efficiencies.space\"\r\n                    :raw_space=\"raw_space\"\r\n                    @update-efficiencies=\"updateEfficiencies\"\r\n                ></mek-space-efficiency>\r\n            </span>\r\n        </div>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-component-stats :cols=\"4\" :rows=\"3\">\r\n                <div slot=\"col1-row1\">{{is_beam_shield && !is_variable_beam_shield?\"Base\":\"\"}} Kills: {{selected_damage.damage}} K</div>\r\n                <div slot=\"col1-row2\" v-if=\"is_beam_shield\">\r\n                    <div>Beam Shield Kills: {{beam_shield.damage}} K</div>\r\n                    <div>Stopping Power: {{beam_shield.stopping_power}} K</div>\r\n                    <div>Defense Accuracy: {{beam_shield.defense_accuracy}}</div>\r\n                </div>\r\n                <div slot=\"col1-row3\">Damage Capacity: {{damage_capacity}} K</div>\r\n\r\n                <div slot=\"col2-row1\">Feature(s):<div style=\"max-width:150px;margin-left:10px;\">{{feature_list}}</div></div>\r\n\r\n                <div slot=\"col3-row1\">Base Space: {{raw_space}}</div>\r\n                <div slot=\"col3-row2\">Space: {{space_cost}}</div>\r\n                <div slot=\"col3-row3\">Weight: {{round(weight,2)}} tons</div>\r\n\r\n                <div slot=\"col4-row1\">Base Cost: {{selected_damage.cost}}</div>\r\n                <div slot=\"col4-row2\">Multiplier: x{{cost_multiplier}}</div>\r\n                <div slot=\"col4-row3\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n            </mek-component-stats>\r\n            <mek-save-reset-component @save-reset-component=\"componentSaveReset\"></mek-save-reset-component>\r\n        </div>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\nimport utility_mixin from \"@/mixins/utility_mixin\";\r\nimport component_computed_mixin from \"@/mixins/component_computed_mixin\";\r\nimport component_methods_mixin from \"@/mixins/component_methods_mixin\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_emw\",\r\n    props:[],\r\n    mixins:[utility_mixin, component_computed_mixin, component_methods_mixin],\r\n    components:\r\n    {\r\n        \"mek-emw-damage\":()=>\r\n        import(/* webpackChunkName: \"mek_emw-damage\" */\"./subcomponents/mek_emw-damage.vue\"),\r\n        \"mek-emw-accuracy\":()=>\r\n        import(/* webpackChunkName: \"mek_emw-accuracy\" */\"./subcomponents/mek_emw-accuracy.vue\"),\r\n        \"mek-emw-attack-factor\":()=>\r\n        import(/* webpackChunkName: \"mek_emw-attack-factor\" */\"./subcomponents/mek_emw-attack-factor.vue\"),\r\n        \"mek-emw-turns-in-use\":()=>\r\n        import(/* webpackChunkName: \"mek_emw-turns-in-use\" */\"./subcomponents/mek_emw-turns-in-use.vue\"),\r\n        \"mek-emw-feature\":()=>\r\n        import(/* webpackChunkName: \"mek_emw-feature\" */\"./subcomponents/mek_emw-feature.vue\"),\r\n\r\n        \"mek-space-efficiency\":()=>\r\n        import(/* webpackChunkName: \"mek-space-efficiency\" */\"@/design_components/universal/mek-space-efficiency.vue\"),\r\n        \"mek-component-name\":()=>\r\n        import(/* webpackChunkName: \"mek-component-name\" */\"@/design_components/universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>\r\n        import(/* webpackChunkName: \"mek-save-reset-component\" */\"@/design_components/universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>\r\n        import(/* webpackChunkName: \"mek_component-stats\" */\"@/design_components/universal/mek_component-stats.vue\"),\r\n\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.uuid=null;\r\n        obj.component_name=null;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"emw\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.selected_damage={damage:1,cost:1};\r\n        obj.selected_accuracy={accuracy:1,cost:1,defense_ability:-1};\r\n        obj.selected_attack_factor={attack_factor:\"__NIL__\",cost:1};\r\n        obj.selected_turns_in_use={turns:\"__INFINITY__\",cost:1};\r\n\r\n        obj.damage_capacity=0.25;\r\n\r\n        obj.feature_array=[];\r\n\r\n        obj.efficiencies={};\r\n        obj.efficiencies.space={};\r\n        obj.efficiencies.space.cost=0;\r\n        obj.efficiencies.space.modifier=0;\r\n\r\n        obj.cost_multipliers={};\r\n        obj.cost_multipliers.accuracy=1;\r\n        obj.cost_multipliers.feature=1;\r\n        obj.cost_multipliers.attack_factor=1;\r\n        obj.cost_multipliers.turns_in_use=1;\r\n\r\n        obj.hasAlert=false;\r\n\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        updateComponentName(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        updateEfficiencies(_data)\r\n        {\r\n            this.$set(this.efficiencies,\"space\",_data);\r\n            this.component_changed=true;\r\n        },\r\n        updateDamage(_damage)\r\n        {\r\n            this.$set(this,\"selected_damage\",_damage);\r\n            this.component_changed=true;\r\n            this.damage_capacity=_damage.damage/4;\r\n        },\r\n        updateAccuracy(_accuracy)\r\n        {\r\n            this.$set(this,\"selected_accuracy\",_accuracy);\r\n            this.cost_multipliers.accuracy=_accuracy.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateAttackFactor(_attack_factor)\r\n        {\r\n            this.$set(this,\"selected_attack_factor\",_attack_factor);\r\n            this.cost_multipliers.attack_factor=_attack_factor.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateTurnsInUse(_turns)\r\n        {\r\n            this.$set(this,\"selected_turns_in_use\",_turns);\r\n            this.cost_multipliers.turns_in_use=_turns.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateFeature(_featureArray)\r\n        {\r\n            this.$set(this,\"feature_array\",_featureArray);\r\n            this.cost_multipliers.feature=this.feature_array.reduce((_multi,_val)=>{return _multi*=_val.cost},1);\r\n            this.emw_name;\r\n        },\r\n        output_emw_data()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"emw\";\r\n            return_data.component_name=this.component_name===null?this.emw_name:this.component_name;\r\n\r\n            return_data.cost_multipliers=JSON.parse(JSON.stringify(this.cost_multipliers));\r\n            return_data.efficiencies=JSON.parse(JSON.stringify(this.efficiencies));\r\n\r\n            return_data.selected_damage=JSON.parse(JSON.stringify(this.selected_damage));\r\n            return_data.selected_accuracy=JSON.parse(JSON.stringify(this.selected_accuracy));\r\n            return_data.selected_turns_in_use=JSON.parse(JSON.stringify(this.selected_turns_in_use));\r\n            //return_data.selected_turns_in_use.turns=this.selected_turns_in_use.turns===Infinity?\"Infinity\":this.selected_turns_in_use.turns;\r\n\r\n            return_data.selected_attack_factor=JSON.parse(JSON.stringify(this.selected_attack_factor));\r\n            return_data.feature_array=JSON.parse(JSON.stringify(this.feature_array));\r\n\r\n            return_data.cost=this.cost;\r\n            return_data.cost_multiplier=this.cost_multiplier;\r\n            return_data.weight=this.weight;\r\n            return_data.final_damage=this.final_damage;\r\n            return_data.damage_capacity=this.selected_damage.damage;\r\n\r\n            if(this.is_beam_shield)\r\n            {\r\n                return_data.beam_shield=JSON.parse(JSON.stringify(this.beam_shield));\r\n            }\r\n\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return return_data;\r\n        },\r\n        ingest_data(_data_object)\r\n        {\r\n            let alertMessage=\"EMW is not valid, resetting.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(this.component_name==this.emw_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=this.hasAlert;});\r\n            //this.selected_turns_in_use.turns=this.selected_turns_in_use.turns==\"Infinity\"?Infinity:this.selected_turns_in_use.turns;\r\n        },\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"clear\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_emw_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                        break;\r\n                    }\r\n                    // eslint-disable-next-line\r\n                case \"clear\":\r\n                    this.uuid=null;\r\n                    this.efficiencies.space.modifier=0;\r\n                    this.component_name=null;\r\n                    this.selected_damage.damage=1;\r\n                    this.selected_accuracy.accuracy=1;\r\n                    this.selected_attack_factor.attack_factor=\"__NIL__\";\r\n                    this.selected_turns_in_use.turns=\"__INFINITY__\";\r\n                    this.$set(this,\"feature_array\",[]);\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        },\r\n        handleAlert(_alert_status)\r\n        {\r\n            this.hasAlert=_alert_status;\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        raw_space()\r\n        {\r\n            return this.round(this.selected_damage.cost * this.cost_multiplier,2);\r\n        },\r\n        cost:function()\r\n        {\r\n            let subtotal_cost=this.selected_damage.cost * this.cost_multiplier;\r\n            subtotal_cost += this.efficiencies.space.cost;\r\n\r\n            return this.round(subtotal_cost,2);\r\n        },\r\n        weight:function()\r\n        {\r\n            return this.round((this.damage_capacity / 2),2);\r\n        },\r\n        is_beam_shield()\r\n        {\r\n            return this.feature_array.some((_val)=>\r\n            {\r\n                return /beam/gi.test(_val.feature);\r\n            });\r\n        },\r\n        is_variable_beam_shield()\r\n        {\r\n            return this.feature_array.some((_val)=>\r\n            {\r\n                return /variable beam/gi.test(_val.feature);\r\n            });\r\n        },\r\n        beam_shield()\r\n        {\r\n            if(this.is_beam_shield)\r\n            {\r\n                let obj={};\r\n                obj.stopping_power=this.selected_damage.damage;\r\n                obj.defense_accuracy=this.selected_accuracy.accuracy-2;\r\n                obj.damage=this.selected_damage.damage/2;\r\n                return obj;\r\n            }\r\n            return null;\r\n        },\r\n        emw_name()\r\n        {\r\n            let emw_name=this.selected_attack_factor.attack_factor!=\"__NIL__\"?\"Automated \":\"\";\r\n\r\n            emw_name=this.feature_array.reduce((_name,_val)=>\r\n            {\r\n                return _name+_val.feature+\" \";\r\n            },emw_name);\r\n\r\n            emw_name+=this.selected_damage.damage+\"K \";\r\n            emw_name=this.is_beam_shield ? emw_name.replace(/ $/,\"\") : emw_name+\"EMW\";\r\n\r\n            return emw_name;\r\n        },\r\n    }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_emw-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_emw-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_emw-main.vue?vue&type=template&id=796a70fb&\"\nimport script from \"./mek_emw-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_emw-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default\r\n{\r\n    computed:\r\n    {\r\n        space_cost()\r\n        {\r\n            return this.round(this.raw_space - this.efficiencies.space.modifier,2);\r\n        },\r\n        cost_multiplier()\r\n        {\r\n            let cost_multiplier=1;\r\n            for(let multi in this.cost_multipliers)\r\n            {\r\n                cost_multiplier*=this.cost_multipliers[multi];\r\n            }\r\n            return this.round(cost_multiplier,2);\r\n        },\r\n        weight()\r\n        {\r\n            return this.round((this.damage_capacity / 2),2);\r\n        },\r\n        feature_list()\r\n        {\r\n            if(typeof this.feature_array===\"undefined\")\r\n            {\r\n                return \"\";\r\n            }\r\n            return this.feature_array.reduce(function(_string, _val, _index)\r\n            {\r\n                _string+=_index>0 ? \", \" : \"\";\r\n                _string+=_val.feature;\r\n                return _string;\r\n            },\"\");\r\n        },\r\n        newComponent()\r\n        {//responsible for ingesting data from the store\r\n            let selectedComponent=JSON.parse(JSON.stringify(this.$store.getters.selectedComponent));\r\n\r\n            if(typeof selectedComponent!==\"undefined\" && selectedComponent!==null)\r\n            {\r\n                if(selectedComponent.uuid!==this.uuid \r\n                    && selectedComponent.component_category==this.component_category\r\n                    && selectedComponent.component_type==this.component_type)\r\n                {\r\n                    this.ingest_data(selectedComponent);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n    }\r\n};","export default\r\n{\r\n    methods:\r\n    {\r\n        universal_ingest_data(_data_object,_alertMessage)\r\n        {\r\n            this.original_component=JSON.stringify(_data_object);//store a copy as a JSON object for 'reset' purposes\r\n            if(_data_object===null)\r\n            {\r\n                this.componentSaveReset(\"clear\");\r\n                //generic error comment\r\n                this.$store.commit(\"alertMessage\",_alertMessage);\r\n            }\r\n\r\n            for(let _property in _data_object)\r\n            {//exclude computed properties that are auto updated\r\n                if(Object.keys(this._computedWatchers).includes(_property))\r\n                {\r\n                    continue;\r\n                }\r\n                if(typeof _data_object[_property]===\"object\" && !Array.isArray(_data_object[_property]))\r\n                {\r\n                    if(typeof this[_property]!==\"object\" || this[_property]===null)\r\n                    {\r\n                        this[_property]={};\r\n                    }\r\n                    for(let _sub_property in _data_object[_property])\r\n                    {\r\n                        this.$set(this[_property],[_sub_property],_data_object[_property][_sub_property]);\r\n                    }\r\n                }\r\n                else if(Array.isArray(_data_object[_property]))\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n                else\r\n                {\r\n                    this.$set(this,_property,_data_object[_property]);\r\n                }\r\n            }\r\n            this.$forceUpdate();\r\n        },\r\n        updateComponentName:function(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
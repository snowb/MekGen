{"version":3,"sources":["webpack:///./src/components/mek_emw/mek_emw-main.vue?3b3e","webpack:///src/components/mek_emw/mek_emw-main.vue","webpack:///./src/components/mek_emw/mek_emw-main.vue?90fa","webpack:///./src/components/mek_emw/mek_emw-main.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","width","attrs","new-component","newComponent","component-name","component_name","emw_name","component-changed","component_changed","on","update-component-name","updateComponentName","damage","selected_damage","update-damage","updateDamage","accuracy","selected_accuracy","is-beam-shield","is_beam_shield","is-variable-beam-shield","is_variable_beam_shield","update-accuracy","updateAccuracy","attack-factor","selected_attack_factor","update-attack-factor","updateAttackFactor","turns-in-use","selected_turns_in_use","update-turns-in-use","updateTurnsInUse","align-self","feature-array","feature_array","turns","Infinity","update-feature","updateFeature","space_efficiency","efficiencies","space","raw_space","update-efficiencies","updateEfficiencies","cols","rows","slot","_v","_s","beam_shield","stopping_power","defense_accuracy","_e","damage_capacity","max-width","margin-left","feature_list","space_cost","round","weight","cost","cost_multiplier","font-weight","save-reset-component","componentSaveReset","staticRenderFns","mek_emw_mainvue_type_script_lang_js_","name","props","mixins","selected_item_mixin","utility_mixin","component_computed_mixin","component_methods_mixin","components","mek-emw-damage","__webpack_require__","e","then","bind","mek-emw-accuracy","mek-emw-attack-factor","mek-emw-turns-in-use","mek-emw-feature","mek-space-efficiency","mek-component-name","mek-save-reset-component","mek-component-stats","data","obj","uuid","component_category","component_type","original_component","attack_factor","modifier","cost_multipliers","feature","turns_in_use","methods","_name","_data","$set","_damage","_accuracy","_attack_factor","_turns","_featureArray","reduce","_multi","_val","output_emw_data","_this","return_data","create_uuid","JSON","parse","stringify_default","final_damage","$nextTick","ingest_data","_data_object","_this2","alertMessage","universal_ingest_data","_action","action","$store","commit","computed","subtotal_cost","some","test","replace","mek_emw_mek_emw_mainvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/mek_emw-main-legacy.f5c617bc.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"mek-inline-flex-col\",staticStyle:{\"width\":\"100%\"}},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.emw_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-emw-damage',{attrs:{\"damage\":_vm.selected_damage},on:{\"update-damage\":_vm.updateDamage}}),_c('mek-emw-accuracy',{attrs:{\"accuracy\":_vm.selected_accuracy,\"is-beam-shield\":_vm.is_beam_shield,\"is-variable-beam-shield\":_vm.is_variable_beam_shield},on:{\"update-accuracy\":_vm.updateAccuracy}}),_c('mek-emw-attack-factor',{attrs:{\"attack-factor\":_vm.selected_attack_factor},on:{\"update-attack-factor\":_vm.updateAttackFactor}})],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-emw-turns-in-use',{attrs:{\"turns-in-use\":_vm.selected_turns_in_use},on:{\"update-turns-in-use\":_vm.updateTurnsInUse}}),_c('mek-emw-feature',{staticStyle:{\"align-self\":\"start\"},attrs:{\"feature-array\":_vm.feature_array,\"turns-in-use\":_vm.selected_turns_in_use.turns!=Infinity},on:{\"update-feature\":_vm.updateFeature}}),_c('span',{staticClass:\"mek-flex-col no-margin\"},[_c('mek-space-efficiency',{attrs:{\"space_efficiency\":_vm.efficiencies.space,\"raw_space\":_vm.raw_space},on:{\"update-efficiencies\":_vm.updateEfficiencies}})],1)],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":3}},[_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(_vm._s(_vm.is_beam_shield && !_vm.is_variable_beam_shield?\"Base\":\"\")+\" Kills: \"+_vm._s(_vm.selected_damage.damage)+\" K\")]),(_vm.is_beam_shield)?_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_c('div',[_vm._v(\"Beam Shield Kills: \"+_vm._s(_vm.beam_shield.damage)+\" K\")]),_c('div',[_vm._v(\"Stopping Power: \"+_vm._s(_vm.beam_shield.stopping_power)+\" K\")]),_c('div',[_vm._v(\"Defense Accuracy: \"+_vm._s(_vm.beam_shield.defense_accuracy))])]):_vm._e(),_c('div',{attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Damage Capacity: \"+_vm._s(_vm.damage_capacity)+\" K\")]),_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Feature(s):\"),_c('div',{staticStyle:{\"max-width\":\"150px\",\"margin-left\":\"10px\"}},[_vm._v(_vm._s(_vm.feature_list))])]),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.raw_space))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Space: \"+_vm._s(_vm.space_cost))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.round(_vm.weight,2))+\" tons\")]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.selected_damage.cost))]),_c('div',{attrs:{\"slot\":\"col4-row2\"},slot:\"col4-row2\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.cost_multiplier))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row3\"},slot:\"col4-row3\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <span class=\"mek-inline-flex-col\" style=\"width:100%;\">\r\n        <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||emw_name\"\r\n            :component-changed=\"component_changed\"\r\n            @update-component-name=\"updateComponentName\"\r\n        ></mek-component-name>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-emw-damage @update-damage=\"updateDamage\" :damage=\"selected_damage\"></mek-emw-damage>\r\n            <mek-emw-accuracy \r\n                @update-accuracy=\"updateAccuracy\" \r\n                :accuracy=\"selected_accuracy\"\r\n                :is-beam-shield=\"is_beam_shield\"\r\n                :is-variable-beam-shield=\"is_variable_beam_shield\"\r\n            ></mek-emw-accuracy>\r\n            <mek-emw-attack-factor \r\n                @update-attack-factor=\"updateAttackFactor\" \r\n                :attack-factor=\"selected_attack_factor\"\r\n            ></mek-emw-attack-factor>\r\n        </div>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-emw-turns-in-use \r\n                @update-turns-in-use=\"updateTurnsInUse\" \r\n                :turns-in-use=\"selected_turns_in_use\"\r\n            ></mek-emw-turns-in-use>\r\n            <mek-emw-feature style=\"align-self:start;\"\r\n                @update-feature=\"updateFeature\"\r\n                :feature-array=\"feature_array\"\r\n                :turns-in-use=\"selected_turns_in_use.turns!=Infinity\"\r\n            ></mek-emw-feature>\r\n            <span class=\"mek-flex-col no-margin\">\r\n                <mek-space-efficiency\r\n                    :space_efficiency=\"efficiencies.space\"\r\n                    :raw_space=\"raw_space\"\r\n                    @update-efficiencies=\"updateEfficiencies\"\r\n                ></mek-space-efficiency>\r\n            </span>\r\n        </div>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-component-stats :cols=\"4\" :rows=\"3\">\r\n                <div slot=\"col1-row1\">{{is_beam_shield && !is_variable_beam_shield?\"Base\":\"\"}} Kills: {{selected_damage.damage}} K</div>\r\n                <div slot=\"col1-row2\" v-if=\"is_beam_shield\">\r\n                    <div>Beam Shield Kills: {{beam_shield.damage}} K</div>\r\n                    <div>Stopping Power: {{beam_shield.stopping_power}} K</div>\r\n                    <div>Defense Accuracy: {{beam_shield.defense_accuracy}}</div>\r\n                </div>\r\n                <div slot=\"col1-row3\">Damage Capacity: {{damage_capacity}} K</div>\r\n\r\n                <div slot=\"col2-row1\">Feature(s):<div style=\"max-width:150px;margin-left:10px;\">{{feature_list}}</div></div>\r\n\r\n                <div slot=\"col3-row1\">Base Space: {{raw_space}}</div>\r\n                <div slot=\"col3-row2\">Space: {{space_cost}}</div>\r\n                <div slot=\"col3-row3\">Weight: {{round(weight,2)}} tons</div>\r\n\r\n                <div slot=\"col4-row1\">Base Cost: {{selected_damage.cost}}</div>\r\n                <div slot=\"col4-row2\">Multiplier: x{{cost_multiplier}}</div>\r\n                <div slot=\"col4-row3\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n            </mek-component-stats>\r\n            <mek-save-reset-component @save-reset-component=\"componentSaveReset\"></mek-save-reset-component>\r\n        </div>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\nimport selected_item_mixin from \"../../mixins/selected_item_mixin\";\r\nimport utility_mixin from \"../../mixins/utility_mixin\";\r\nimport component_computed_mixin from \"../../mixins/component_computed_mixin\";\r\nimport component_methods_mixin from \"../../mixins/component_methods_mixin\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_emw\",\r\n    props:[],\r\n    mixins:[selected_item_mixin, utility_mixin, component_computed_mixin, component_methods_mixin],\r\n    components:\r\n    {\r\n        \"mek-emw-damage\":()=>import(/* webpackChunkName: \"mek-emw-damage\" */\"./subcomponents/mek_emw-damage.vue\"),\r\n        \"mek-emw-accuracy\":()=>import(/* webpackChunkName: \"mek-emw-accuracy\" */\"./subcomponents/mek_emw-accuracy.vue\"),\r\n        \"mek-emw-attack-factor\":()=>import(/* webpackChunkName: \"mek-emw-attack-factor\" */\"./subcomponents/mek_emw-attack-factor.vue\"),\r\n        \"mek-emw-turns-in-use\":()=>import(/* webpackChunkName: \"mek-emw-turns-in-use\" */\"./subcomponents/mek_emw-turns-in-use.vue\"),\r\n        \"mek-emw-feature\":()=>import(/* webpackChunkName: \"mek-emw-feature\" */\"./subcomponents/mek_emw-feature.vue\"),\r\n\r\n        \"mek-space-efficiency\":()=>import(/* webpackChunkName: \"mek-space-efficiency\" */\"../universal/mek-space-efficiency.vue\"),\r\n        \"mek-component-name\":()=>import(/* webpackChunkName: \"mek_component-name\" */\"../universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>import(/* webpackChunkName: \"mek_save-reset-component\" */\"../universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>import(/* webpackChunkName: \"mek_component-stats\" */\"../universal/mek_component-stats.vue\"),\r\n\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.uuid=null;\r\n        obj.component_name=null;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"emw\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.selected_damage={damage:1,cost:1};\r\n        obj.selected_accuracy={accuracy:1,cost:1};\r\n        obj.selected_attack_factor={attack_factor:0,cost:1};\r\n        obj.selected_turns_in_use={turns:Infinity,cost:1};\r\n\r\n        obj.damage_capacity=0.25;\r\n\r\n        obj.feature_array=[];\r\n\r\n        obj.efficiencies={};\r\n        obj.efficiencies.space={};\r\n        obj.efficiencies.space.cost=0;\r\n        obj.efficiencies.space.modifier=0;\r\n\r\n        obj.cost_multipliers={};\r\n        obj.cost_multipliers.accuracy=1;\r\n        obj.cost_multipliers.feature=1;\r\n        obj.cost_multipliers.attack_factor=1;\r\n        obj.cost_multipliers.turns_in_use=1;\r\n\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        updateComponentName(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        updateEfficiencies(_data)\r\n        {\r\n            this.$set(this.efficiencies,\"space\",_data);\r\n            this.component_changed=true;\r\n        },\r\n        updateDamage(_damage)\r\n        {\r\n            this.selected_damage.damage=_damage.damage;\r\n            this.selected_damage.cost=_damage.cost;\r\n            this.component_changed=true;\r\n            this.damage_capacity=_damage.damage/4;\r\n        },\r\n        updateAccuracy(_accuracy)\r\n        {\r\n            this.selected_accuracy.accuracy=_accuracy.accuracy;\r\n            this.selected_accuracy.cost=_accuracy.cost;\r\n            this.cost_multipliers.accuracy=_accuracy.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateAttackFactor(_attack_factor)\r\n        {\r\n            this.selected_attack_factor.attack_factor=_attack_factor.attack_factor;\r\n            this.selected_attack_factor.cost=_attack_factor.cost;\r\n            this.cost_multipliers.attack_factor=_attack_factor.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateTurnsInUse(_turns)\r\n        {\r\n            this.selected_turns_in_use.turns=_turns.turns;\r\n            this.selected_turns_in_use.cost=_turns.cost;\r\n            this.cost_multipliers.turns_in_use=_turns.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateFeature(_featureArray)\r\n        {\r\n            this.$set(this,\"feature_array\",_featureArray);\r\n            this.cost_multipliers.feature=this.feature_array.reduce((_multi,_val)=>{return _multi*=_val.cost},1);\r\n            this.emw_name;\r\n        },\r\n        output_emw_data()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"emw\";\r\n            return_data.component_name=this.component_name===null?this.emw_name:this.component_name;\r\n\r\n            return_data.cost_multipliers=JSON.parse(JSON.stringify(this.cost_multipliers));\r\n            return_data.efficiencies=JSON.parse(JSON.stringify(this.efficiencies));\r\n\r\n            return_data.selected_damage=JSON.parse(JSON.stringify(this.selected_damage));\r\n            return_data.selected_accuracy=JSON.parse(JSON.stringify(this.selected_accuracy));\r\n            return_data.selected_turns_in_use=JSON.parse(JSON.stringify(this.selected_turns_in_use));\r\n            return_data.selected_turns_in_use.turns=this.selected_turns_in_use.turns===Infinity?\"Infinity\":this.selected_turns_in_use.turns;\r\n\r\n            return_data.selected_attack_factor=JSON.parse(JSON.stringify(this.selected_attack_factor));\r\n            return_data.feature_array=JSON.parse(JSON.stringify(this.feature_array));\r\n\r\n            return_data.cost=this.cost;\r\n            return_data.cost_multiplier=this.cost_multiplier;\r\n            return_data.weight=this.weight;\r\n            return_data.final_damage=this.final_damage;\r\n            return_data.damage_capacity=this.selected_damage.damage;\r\n\r\n            if(this.is_beam_shield)\r\n            {\r\n                return_data.beam_shield=JSON.parse(JSON.stringify(this.beam_shield));\r\n            }\r\n\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return return_data;\r\n        },\r\n        ingest_data(_data_object)\r\n        {\r\n            let alertMessage=\"EMW is not valid, resetting.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(this.component_name==this.emw_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n        },\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"clear\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_emw_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                    }\r\n                    break;\r\n                case \"clear\":\r\n                    this.uuid=null;\r\n                    this.efficiencies.space.modifier=0;\r\n                    this.component_name=null;\r\n                    this.selected_damage.damage=1;\r\n                    this.selected_accuracy.accuracy=1;\r\n                    this.selected_attack_factor.attack_factor=0;\r\n                    this.selected_turns_in_use.turns=0;\r\n                    this.$set(this,\"feature_array\",[]);\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        },\r\n    },\r\n    computed:\r\n    {\r\n        raw_space()\r\n        {\r\n            return this.round(this.selected_damage.cost * this.cost_multiplier,2);\r\n        },\r\n        cost:function()\r\n        {\r\n            let subtotal_cost=this.selected_damage.cost * this.cost_multiplier;\r\n            subtotal_cost += this.efficiencies.space.cost;\r\n\r\n            return this.round(subtotal_cost,2);\r\n        },\r\n        weight:function()\r\n        {\r\n            return this.round((this.damage_capacity / 2),2);\r\n        },\r\n        is_beam_shield()\r\n        {\r\n            return this.feature_array.some((_val)=>\r\n            {\r\n                return /beam/gi.test(_val.feature);\r\n            });\r\n        },\r\n        is_variable_beam_shield()\r\n        {\r\n            return this.feature_array.some((_val)=>\r\n            {\r\n                return /variable beam/gi.test(_val.feature);\r\n            });\r\n        },\r\n        beam_shield()\r\n        {\r\n            if(this.is_beam_shield)\r\n            {\r\n                let obj={};\r\n                obj.stopping_power=this.selected_damage.damage;\r\n                obj.defense_accuracy=this.selected_accuracy.accuracy-2;\r\n                obj.damage=this.selected_damage.damage/2;\r\n                return obj;\r\n            }\r\n            return null;\r\n        },\r\n        emw_name()\r\n        {\r\n            let emw_name=this.selected_attack_factor.attack_factor!=0?\"Automated \":\"\";\r\n\r\n            emw_name=this.feature_array.reduce((_name,_val)=>\r\n            {\r\n                return _name+_val.feature+\" \";\r\n            },emw_name);\r\n\r\n            emw_name=this.is_beam_shield ? emw_name.replace(/ $/,\"\") : emw_name+\"EMW\";\r\n\r\n            return emw_name;\r\n        },\r\n    }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_emw-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_emw-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_emw-main.vue?vue&type=template&id=1000991e&\"\nimport script from \"./mek_emw-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_emw-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
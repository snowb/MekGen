{"version":3,"sources":["webpack:///./src/mixins/alerts_mixin.js","webpack:///./src/components/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./src/components/mek_shield/subcomponents/mek_shield-weakness.vue?43df","webpack:///./src/components/data_table_modules/mek_shield/mek_shield-weakness-data-module.js","webpack:///src/components/mek_shield/subcomponents/mek_shield-weakness.vue","webpack:///./src/components/mek_shield/subcomponents/mek_shield-weakness.vue?8a6f","webpack:///./src/components/mek_shield/subcomponents/mek_shield-weakness.vue"],"names":["__webpack_exports__","methods","addAlert","_alert_string","this","alerts","push","publishAlerts","length","$store","commit","$set","__webpack_require__","d","partial_validate","partial_has_feature","partial_get_feature","partial_cleaned_feature","_data_table","_validation_keys","_data","Array","isArray","valid","some","_val","_keys","_key","undefined","_has_feature","found_feature","_table_val","_validator","_get_feature","_default_data","_name","_pkey","_feature","data","key_list","update","json_data","JSON","stringify","parse","render","_vm","_h","$createElement","_c","_self","attrs","items","weakness_table","pkey","selected-keys","selected_keys","headers","weakness","monicker","cost","name","flow","show-headers","format","on","update-selected-data","select_weakness","staticRenderFns","weakness_data_table","only_exclusive","filter","_el","data_table_keys","default_data","all_exclusive","weakness_validate","has_weakness","get_weakness","is_exclusive_weakness","_exclusive_target","_pkey_value","exclusive_target_array","toLowerCase","cleaned_weakness","_weakness_array","hasExclusiveOnly","hasExclusiveAll","error","cleaned_array","temp_selected_weakness_array","reduceRight","_cleaned_array","isAll","clean_weakness","isOnly","includes","reverse","mek_shield_weaknessvue_type_script_lang_js_","props","mixins","alerts_mixin","components","mek-sub-component-table","e","then","bind","obj","suppressAlerts","selected_weakness_array","_selected_weakness","new_selected_weakness_array","toggleWeakness","cleaned_data","forEach","_alert","$emit","[object Object]","_weakness","weakness_array","remove_weakness","computed","weaknessArray","subcomponents_mek_shield_weaknessvue_type_script_lang_js_","component","Object","componentNormalizer"],"mappings":"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","file":"js/mek-shield-weakness.afe04a80.js","sourcesContent":["export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return !_validation_keys.some((_keys)=>\r\n        {//returns true on invalid data, Not the return to return True if matching valid value is found\r\n            return _data[_keys]!=_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        let found_feature=null;\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n        return found_feature;\r\n    }\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.weakness_table,\"pkey\":_vm.pkey,\"selected-keys\":_vm.selected_keys,\"headers\":{weakness:'Weakness',monicker:'Monicker',cost:'Cost'},\"name\":\"Weakness\",\"flow\":\"pkey-col\",\"show-headers\":true,\"format\":{cost:'multiplier'}},on:{\"update-selected-data\":_vm.select_weakness}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature} from \"../universal/mek_partial-function-data-module\";\r\n\r\n//create new weakness_data_table\r\nlet weakness_data_table=\r\n[\r\n    {weakness:\"All\",monicker:\"Shield\",cost:1.0},\r\n    {weakness:\"Ablative\",monicker:\"Screen\",cost:1.0},\r\n    {weakness:\"Energy Only\",monicker:\"Interference\",cost:0.75,only_exclusive:true},\r\n    {weakness:\"Matter Only\",monicker:\"Kinetic\",cost:0.75,only_exclusive:true},\r\n    {weakness:\"Ranged Only\",monicker:\"Swashbuckling\",cost:0.75,only_exclusive:true},\r\n    {weakness:\"Enclosing\",monicker:\"Mirror\",cost:0.5},\r\n    {weakness:\"Surge\",monicker:\"Surge\",cost:2.5}\r\n];\r\nlet only_exclusive=weakness_data_table.filter((_el)=>{return typeof _el.only_exclusive!==\"undefined\";});\r\nlet data_table_keys=[\"weakness\",\"monicker\",\"only_exclusive\",\"cost\"];\r\nlet default_data={weakness:\"All\",monicker:\"Shield\",cost:1.0};\r\nlet all_exclusive=[default_data];\r\n\r\n//data validator for damage_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet weakness_validate=partial_validate(weakness_data_table, data_table_keys);\r\n\r\n//completed function for checking if data has data\r\nlet has_weakness=partial_has_feature(weakness_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_weakness=partial_get_feature(weakness_data_table, has_weakness);\r\n\r\nlet is_exclusive_weakness=function(_exclusive_target, _pkey, _pkey_value)\r\n{\r\n    let exclusive_target_array=null;\r\n    switch(_exclusive_target.toLowerCase())\r\n    {\r\n        case \"only_exclusive\":\r\n            exclusive_target_array=only_exclusive;\r\n            break;\r\n        case \"all_exclusive\":\r\n            exclusive_target_array=all_exclusive;\r\n            break;\r\n    }\r\n    if(exclusive_target_array===null)\r\n    {\r\n        return false;\r\n    }\r\n    return exclusive_target_array.some((_val)=>\r\n    {\r\n        return _val[_pkey]==_pkey_value;\r\n    });\r\n};\r\n\r\nlet cleaned_weakness=function(_weakness_array, _pkey)\r\n{//takes weakness_array, returns cleaned array removing multiple exclusive values\r\n    let hasExclusiveOnly=false;\r\n    let hasExclusiveAll=false;\r\n    let update=false;\r\n    let key_list=[];\r\n    let alerts=[];\r\n\r\n    if(_weakness_array===undefined || _pkey===undefined)\r\n    {\r\n        alerts.push(\"Mek_Shield-weakness: \");\r\n        let error=_weakness_array===undefined\r\n            ? \"**** Missing weakness array. Returning blank. ****\"\r\n            : \"**** No primary key provided. Returning blank. ****\";\r\n        alerts.push(error);\r\n        return {cleaned_array:[default_data],update:true,key_list:[\"All\"],alerts:alerts};\r\n    }\r\n\r\n    let temp_selected_weakness_array=_weakness_array.reduceRight((_cleaned_array, _val)=>\r\n    {\r\n        if(hasExclusiveAll)\r\n        {//found exclusive all weakness, return just that\r\n            key_list=[\"All\"];\r\n            return [default_data];\r\n        }\r\n        let isAll=is_exclusive_weakness(\"all_exclusive\",_pkey,_val[_pkey]);\r\n        if(isAll && _cleaned_array.length==0)\r\n        {//last item added was All, return that and essential end\r\n            hasExclusiveAll=true;\r\n            key_list=[\"All\"];\r\n            return [default_data];\r\n        }\r\n        else if(isAll)\r\n        {//otherwise, not last item, ignore All weakness\r\n            return _cleaned_array;\r\n        }\r\n        if(_val[_pkey]===undefined)\r\n        {//if weakness with pkey doesn't exist in data table, ignore\r\n            alerts.push(\"Mek_Shield-Weakness: \"+JSON.stringify(_val));\r\n            alerts.push(\"**** Missing primary key. Ignoring. ****\");\r\n            return _cleaned_array;\r\n        }\r\n        let clean_weakness=_val;\r\n        if(!weakness_validate(_val))\r\n        {//invalid data\r\n            alerts.push(\"Mek_Shield-Weakness: \"+JSON.stringify(_val))\r\n            alerts.push(\"**** Invalid data, attempting to reset. ****\")\r\n            clean_weakness=get_weakness(_pkey,_val[_pkey]);\r\n            update=true;\r\n            //attempt to set to corrected weakness\r\n        }\r\n        if(clean_weakness===null)\r\n        {//no matching weakness\r\n            alerts.push(\"**** Unable to reset. No matching data. ****\")\r\n            update=true;\r\n            return _cleaned_array;\r\n            //ignore element\r\n        }\r\n\r\n        let isOnly=is_exclusive_weakness(\"only_exclusive\",_pkey,_val[_pkey]);\r\n\r\n        if(isOnly && !hasExclusiveOnly)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusiveOnly=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isOnly && hasExclusiveOnly)\r\n        {\r\n            alerts.push(\"Mek_Shield-Weakness: \"+_val);\r\n            alerts.push(\"**** Duplicate exclusive Shield data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n\r\n        if(!key_list.includes(_val[_pkey]))\r\n        {\r\n            _cleaned_array.push(_val);\r\n            key_list.push(_val[_pkey]);\r\n        }\r\n        return _cleaned_array;\r\n    },[]);\r\n    temp_selected_weakness_array.reverse();\r\n    if(temp_selected_weakness_array.length==0)\r\n    {//empty, reset to default\r\n        temp_selected_weakness_array=[JSON.parse(JSON.stringify(default_data))];\r\n        update=true;\r\n        key_list=[\"All\"];\r\n        alerts.push(\"Mek_Shield-weakness: \");\r\n        alerts.push(\"**** Reseting to default ****\");\r\n    }\r\n    return {cleaned_array:temp_selected_weakness_array,update:update,key_list:key_list,alerts:alerts};\r\n    //returns an object with the pruned weakness array, whether it was updated, and the key_list\r\n}\r\n\r\nexport {weakness_data_table, weakness_validate, has_weakness, get_weakness, exclusive_beam, cleaned_weakness};\r\n","<template>\r\n    <mek-sub-component-table\r\n        :items=\"weakness_table\" :pkey=\"pkey\" :selected-keys=\"selected_keys\"\r\n        :headers=\"{weakness:'Weakness',monicker:'Monicker',cost:'Cost'}\"\r\n        name=\"Weakness\" flow=\"pkey-col\" :show-headers=\"true\"\r\n        :format=\"{cost:'multiplier'}\"\r\n        @update-selected-data=\"select_weakness\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport alerts_mixin from \"../../../mixins/alerts_mixin\";\r\n\r\nimport {weakness_data_table, cleaned_weakness}\r\n    from \"../../data_table_modules/mek_shield/mek_shield-weakness-data-module\";\r\n\r\nexport default \r\n{\r\n    name:\"mek_shield_weakness\",\r\n    props:[\"weaknessArray\"],\r\n    mixins:[alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"../../universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.alerts=[];\r\n        obj.pkey=\"weakness\";\r\n        obj.suppressAlerts=false;\r\n        obj.selected_weakness_array=[{weakness:\"All\",monicker:\"Shield\",cost:1.0}];\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_weakness:function(_selected_weakness)\r\n        {\r\n            this.suppressAlerts=true;//suppress alerts, for exclusive switching\r\n            let new_selected_weakness_array=this.toggleWeakness(this.selected_weakness_array,_selected_weakness);\r\n            let cleaned_data=cleaned_weakness(new_selected_weakness_array, this.pkey);\r\n            new_selected_weakness_array=cleaned_data.cleaned_array;\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            this.$set(this,\"selected_weakness_array\",new_selected_weakness_array);\r\n            this.$emit(\"update-weakness\",new_selected_weakness_array);\r\n            this.suppressAlerts=false;\r\n        },\r\n        toggleWeakness(_weakness_array,_weakness)\r\n        {\r\n            let weakness_array=JSON.parse(JSON.stringify(_weakness_array));\r\n            \r\n            let remove_weakness=weakness_array.some((_val)=>\r\n            {//if _weakness matches already existing weakness, flag for deletion\r\n                return _val[this.pkey]==_weakness[this.pkey];\r\n            },this);\r\n\r\n            if(remove_weakness)\r\n            {//if flagged for removal, filter out\r\n                return weakness_array.filter((_val)=>\r\n                {\r\n                    return _val[this.pkey]!=_weakness[this.pkey];\r\n                },this);\r\n            }\r\n            weakness_array.push(_weakness);\r\n            //otherwise add weakness and return\r\n            return weakness_array;\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        weakness_table()\r\n        {\r\n            return weakness_data_table;\r\n        },\r\n        selected_keys()\r\n        {\r\n            let cleaned_data=cleaned_weakness(this.weaknessArray,this.pkey);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.$emit(\"update-weakness\",cleaned_data.cleaned_array);\r\n            }\r\n            this.$set(this,\"selected_weakness_array\",cleaned_data.cleaned_array);\r\n            return cleaned_data.key_list;\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_shield-weakness.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_shield-weakness.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_shield-weakness.vue?vue&type=template&id=232a9c40&\"\nimport script from \"./mek_shield-weakness.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_shield-weakness.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
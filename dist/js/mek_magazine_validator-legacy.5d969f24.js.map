{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./src/store/modules/validators/mek_magazine_validator.js","webpack:///./node_modules/core-js/modules/es7.object.entries.js"],"names":["DESCRIPTORS","__webpack_require__","getKeys","toIObject","isEnum","f","module","exports","isEntries","it","key","O","keys","length","i","result","call","push","updateMultipliers","round","validators","e","then","bind","_module","filter_data_table","ammo","cleaned_feature","derive","_component","cleanedComponent","alerts","newShots","parseInt","selected_shots","isNaN","newBaseCost","selected_gun","cost","base_cost","damage_capacity","newCost","cost_multiplier","newWeight","weight","data","validateComponent","updateList","hasBlastRadius","feature_array","some","_feat","test","feature","hasBlast","validatedData","cleaned_array","concat","cost_multipliers","Object","entries","reduce","_multi","_val","$export","$entries","S"],"mappings":"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","file":"js/mek_magazine_validator-legacy.5d969f24.js","sourcesContent":["var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","let validators={};\r\n\r\nimport(/* webpackChunkName: \"mek_ammo-list-data-module\" */\r\n    \"@/data_table_modules/mek_magazine/mek_ammo-list-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.filter_data_table=_module.filter_data_table;\r\n    validators.ammo=_module.cleaned_feature;\r\n});\r\n\r\nlet updateMultipliers, round;\r\nimport(/* webpackChunkName: \"validator_functions\" */\"./validator_functions\")\r\n.then((_module)=>\r\n{\r\n    ({updateMultipliers, round} = _module);\r\n});\r\n\r\nvalidators.derive=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let alerts=[];\r\n\r\n    let newShots=parseInt(cleanedComponent.selected_shots);\r\n    if(cleanedComponent.selected_shots!=newShots)\r\n    {//validate shots\r\n        alerts.push(\"Mek-Magazine: selected_shots\");\r\n        alerts.push(\"**** Invalid Selected Shots. Correcting. ****\");\r\n        cleanedComponent.selected_shots=isNaN(newShots) ? 1 : newShots;\r\n    }\r\n    let newBaseCost=round(cleanedComponent.selected_gun.cost*0.01*cleanedComponent.selected_shots);\r\n    if(cleanedComponent.base_cost!=newBaseCost)\r\n    {//validate base_cost\r\n        alerts.push(\"Mek-Magazine: base_cost\");\r\n        alerts.push(\"**** Invalid Base Cost. Correcting. ****\");\r\n        cleanedComponent.base_cost=newBaseCost;\r\n    }\r\n    if(cleanedComponent.damage_capacity!=newBaseCost)\r\n    {//validate damage_capacity\r\n        alerts.push(\"Mek-Magazine: damage_capacity\");\r\n        alerts.push(\"**** Invalid Base Damage Capacity. Correcting. ****\");\r\n        cleanedComponent.damage_capacity=newBaseCost;\r\n    }\r\n    let newCost=newBaseCost * cleanedComponent.cost_multiplier;\r\n    newCost=round(newCost,2);\r\n    if(cleanedComponent.cost!=newCost)\r\n    {//validate cost\r\n        alerts.push(\"Mek-Magazine: cost\");\r\n        alerts.push(\"**** Invalid Cost. Correcting. ****\");\r\n        cleanedComponent.cost=newCost;\r\n    }\r\n    let newWeight=round(newBaseCost/2,2);\r\n    if(cleanedComponent.weight!=newWeight)\r\n    {//validate weight\r\n        alerts.push(\"Mek-Magazine: weight\");\r\n        alerts.push(\"**** Invalid Weight. Correcting. ****\");\r\n        cleanedComponent.weight=newWeight;\r\n    }\r\n    return {data:cleanedComponent,alerts:alerts};\r\n};\r\n\r\nlet validateComponent=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let updateList=[\"feature_array\"];\r\n    let alerts=[];\r\n    let hasBlastRadius=cleanedComponent.feature_array.some((_feat)=>\r\n    {\r\n        return /blast/gi.test(_feat.feature);\r\n    });\r\n    validators.filter_data_table(hasBlastRadius);\r\n    if(cleanedComponent.hasBlast!=hasBlastRadius)\r\n    {//validate blast radius prop\r\n        alerts.push(\"Mek-Magazine: hasBlast\");\r\n        alerts.push(\"**** Invalid hasBlast. Correcting. ****\");\r\n        cleanedComponent.hasBlast=hasBlastRadius;\r\n    }\r\n    //validate ammo array\r\n    let validatedData=validators.ammo(cleanedComponent.feature_array,\"type\");\r\n    cleanedComponent.feature_array=validatedData.cleaned_array;\r\n    alerts=alerts.concat(validatedData.alerts);\r\n\r\n    //update cost_multipliers for components needing update\r\n    validatedData=updateMultipliers(updateList,cleanedComponent,\"Mek-Magazine\");\r\n    cleanedComponent.cost_multipliers=validatedData.data;\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    //validate space efficiency\r\n    cleanedComponent.cost_multiplier=Object.entries(cleanedComponent.cost_multipliers).reduce((_multi, _val)=>\r\n    {//calc new cost_mulitplier\r\n        return _multi*_val[1];\r\n    },1);\r\n    cleanedComponent.cost_multiplier=round(cleanedComponent.cost_multiplier,2);\r\n    cleanedComponent.cost=cleanedComponent.selected_gun.cost * cleanedComponent.cost_multiplier;\r\n    \r\n    return {data:cleanedComponent,alerts:alerts};\r\n};\r\n\r\nexport {validateComponent};","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n"],"sourceRoot":""}
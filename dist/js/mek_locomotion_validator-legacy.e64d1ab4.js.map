{"version":3,"sources":["webpack:///./src/store/modules/validators/mek_locomotion_validator.js"],"names":["loopValidators","validators","__webpack_require__","e","then","bind","_module","create_class_table","create_data_table","class","cleaned_feature","type","validateComponent","_component","loopAlerts","cleanedComponent","alerts","componentsToValidate","validator","pkey","component_prop","_loopValidators","concat","selected_locomotion_type","_loopValidators2","damage_capacity","selected_locomotion_class","kills","weight","data"],"mappings":"6NAiBIA,EAjBAC,EAAW,GAEfC,EAAAC,EAAA,oCAAAC,KAAAF,EAAAG,KAAA,cAECD,KAAK,SAACE,GAEHL,EAAWM,mBAAmBD,EAAQE,kBACtCP,EAAWQ,MAAMH,EAAQI,kBAG7BR,EAAAC,EAAA,mCAAAC,KAAAF,EAAAG,KAAA,cAECD,KAAK,SAACE,GAEHL,EAAWU,KAAKL,EAAQI,kBAI5BR,EAAAC,EAAA,uBAAAC,KAAAF,EAAAG,KAAA,cACCD,KAAK,SAACE,GAEDN,EAAkBM,EAAlBN,iBAGN,IAAIY,EAAkB,SAACC,GAEnB,IACIC,EADAC,EAAiBF,EAEjBG,EAAO,GAEPC,EACJ,CACI,CAACC,UAAUjB,EAAWU,KAAKQ,KAAK,OAAOC,eAAe,6BAP9DC,EASsCrB,EAAeiB,EAAsBF,GAArEA,EATNM,EASMN,iBAAkBD,EATxBO,EASwBP,WACpBE,EAAOA,EAAOM,OAAOR,GAErBb,EAAWM,mBAAmBQ,EAAiBQ,yBAAyBZ,MAExEM,EACA,CACI,CAACC,UAAUjB,EAAWQ,MAAMU,KAAK,OAAOC,eAAe,8BAhB/D,IAAAI,EAkBsCxB,EAAeiB,EAAsBF,GAMvE,OANEA,EAlBNS,EAkBMT,iBAAkBD,EAlBxBU,EAkBwBV,WACpBE,EAAOA,EAAOM,OAAOR,GAErBC,EAAiBU,gBAAgBV,EAAiBW,0BAA0BC,MAC5EZ,EAAiBa,OAAOb,EAAiBU,gBAAgB,EAElD,CAACI,KAAKd,EAAiBC,OAAOA","file":"js/mek_locomotion_validator-legacy.e64d1ab4.js","sourcesContent":["let validators={};\r\n\r\nimport(/* webpackChunkName: \"mek_locomotion-class-data-module\" */\r\n    \"@/data_table_modules/mek_locomotion/mek_locomotion-class-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.create_class_table=_module.create_data_table;\r\n    validators.class=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_locomotion-type-data-module\" */\r\n    \"@/data_table_modules/mek_locomotion/mek_locomotion-type-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.type=_module.cleaned_feature;\r\n});\r\n\r\nlet loopValidators;\r\nimport(/* webpackChunkName: \"validator_functions\" */\"./validator_functions\")\r\n.then((_module)=>\r\n{\r\n    ({loopValidators} = _module);\r\n});\r\n\r\nlet validateComponent=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let loopAlerts;\r\n    let alerts=[];\r\n    //loop thru independent validations\r\n    let componentsToValidate=\r\n    [\r\n        {validator:validators.type,pkey:\"type\",component_prop:\"selected_locomotion_type\"},\r\n    ];\r\n    ({cleanedComponent, loopAlerts} = loopValidators(componentsToValidate, cleanedComponent));\r\n    alerts=alerts.concat(loopAlerts)\r\n    //update class data\r\n    validators.create_class_table(cleanedComponent.selected_locomotion_type.type);\r\n    //validate class data\r\n    componentsToValidate=\r\n    [\r\n        {validator:validators.class,pkey:\"name\",component_prop:\"selected_locomotion_class\"},\r\n    ];\r\n    ({cleanedComponent, loopAlerts} = loopValidators(componentsToValidate, cleanedComponent));\r\n    alerts=alerts.concat(loopAlerts)\r\n\r\n    cleanedComponent.damage_capacity=cleanedComponent.selected_locomotion_class.kills;\r\n    cleanedComponent.weight=cleanedComponent.damage_capacity/2;\r\n    \r\n    return {data:cleanedComponent,alerts:alerts};\r\n};\r\n\r\nexport {validateComponent};"],"sourceRoot":""}
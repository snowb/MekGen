{"version":3,"sources":["webpack:///./src/build_components/mek_config/mek_build-config.vue?fa6f","webpack:///src/build_components/mek_config/mek_build-config.vue","webpack:///./src/build_components/mek_config/mek_build-config.vue?904b","webpack:///./src/build_components/mek_config/mek_build-config.vue","webpack:///./node_modules/core-js/modules/es6.string.includes.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/core-js/modules/es7.array.includes.js","webpack:///./src/mixins/utility_mixin.js","webpack:///./node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/core-js/modules/_string-context.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","title","format","list","sections","configuration_list","collapsible","clickable","selected-item","working_uuid","on","side-menu-clicked","load_config","new-component","newComponent","component-name","computedComponentName","component-changed","component_changed","update-component-name","updateComponentName","key","configurationForms","length","name","flow","pkey","items","show-headers","headers","selected-keys","selectedConfigPkey","update-selected-data","select_config","activeButtons","save-reset-component","saveResetComponent","staticRenderFns","mek_build_configvue_type_script_lang_js_","components","mek-sub-component-table","__webpack_require__","e","then","bind","mek-save-reset-component","mek-component-name","mek-side-menu","props","mixins","utility_mixin","data","obj","configurationFormsList","config","cost","hardpoints","propulsion","flight_without_propulsion","no_hands","modifiers","maneuver_value","armor_stopping_power","melee_damage","flight_movement_allowance","land_movement_alloance","minimum_flight_movement_alloance","selected_configuration","working_configurations","component_name","methods","_name","_config","base_config","$set","JSON","parse","stringify","_action","uuid","create_short_uuid","temp_config","_objectSpread","Object","keys","$emit","selectedData","configCompare","_config1","_config2","config1","config2","hardpoints1","hardpoints2","hardpointCompare","_hardpoints1","_hardpoints2","filtered","filter","_hardpoint","includes","adjustBaseConfig","_current_base_config","new_base_config","computed","undefined","_this","reduce","_obj","_el","_this2","base_form","base_config_key","base_hardpoints","isBaseConfig","slice","return_obj","_newConfigList","push","first_config_key","watch","immediate","handler","_new","working_configs","base_config_uuid","mek_config_mek_build_configvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","$export","context","INCLUDES","P","F","searchString","indexOf","arguments","MATCH","module","exports","KEY","re","f","$includes","el","round","_number","_decimals","Math","multiplier","pow","floor","ceiling","decimalPad","toPrecision","create_uuid","replace","c","crypto","getRandomValues","Uint8Array","toString","invisible_pad","_array_of_items","longestString","forEach","_element","isNumeric","_input","isNaN","parseFloat","isFinite","isObject","cof","it","isRegExp","defined","that","NAME","TypeError","String"],"mappings":"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","file":"js/mek_build-config-legacy.88be1ada.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-side-menu',{attrs:{\"title\":\"Configs\",\"format\":\"full\",\"list\":true,\"sections\":_vm.configuration_list,\"collapsible\":true,\"clickable\":true,\"selected-item\":_vm.working_uuid},on:{\"side-menu-clicked\":_vm.load_config}}),_c('div',{staticClass:\"mek-inline-flex-col\"},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.computedComponentName,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('mek-sub-component-table',{key:'msc-'+_vm.configurationForms.length,attrs:{\"name\":\"Configuration\",\"flow\":\"dropdown-pkey\",\"pkey\":\"config\",\"items\":_vm.configurationForms,\"show-headers\":true,\"headers\":_vm.headers,\"selected-keys\":_vm.selectedConfigPkey},on:{\"update-selected-data\":_vm.select_config}}),_c('mek-save-reset-component',{attrs:{\"activeButtons\":_vm.activeButtons},on:{\"save-reset-component\":_vm.saveResetComponent}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <!--- need side menu for selecting configurations saved to mek, pass by selectedData --->\r\n  <div class=\"mek-inline-flex-row\">\r\n    <mek-side-menu\r\n      title=\"Configs\" format=\"full\"\r\n      :list=\"true\" :sections=\"configuration_list\" :collapsible=\"true\"\r\n      :clickable=\"true\" :selected-item=\"working_uuid\"\r\n      @side-menu-clicked=\"load_config\"\r\n    ></mek-side-menu>\r\n    <div class=\"mek-inline-flex-col\">\r\n      <mek-component-name\r\n        :new-component=\"newComponent\" :component-name=\"computedComponentName\" \r\n        :component-changed=\"component_changed\"\r\n        @update-component-name=\"updateComponentName\"\r\n      ></mek-component-name>\r\n      <mek-sub-component-table\r\n        name=\"Configuration\" flow=\"dropdown-pkey\" pkey=\"config\"\r\n        :items=\"configurationForms\" :show-headers=\"true\" :headers=\"headers\"\r\n        :selected-keys=\"selectedConfigPkey\" :key=\"'msc-'+configurationForms.length\"\r\n        @update-selected-data=\"select_config\"\r\n      ></mek-sub-component-table>\r\n      <!--- frame component ? --->\r\n      <mek-save-reset-component\r\n        @save-reset-component=\"saveResetComponent\"\r\n        :activeButtons=\"activeButtons\"\r\n      ></mek-save-reset-component>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport utility_mixin from \"@/mixins/utility_mixin\";\r\nexport default {\r\n  name: \"mek-build-config\",\r\n  components: {\r\n    \"mek-sub-component-table\": () =>\r\n      import(/* webpackChunkName: \"mek_sub-component-table\" */ \"@/app_components/universal/mek_sub-component-table.vue\"),\r\n    \"mek-save-reset-component\": () =>\r\n      import(/* webpackChunkName: \"mek-save-reset-component\" */ \"@/app_components/universal/mek-save-reset-component.vue\"),\r\n    \"mek-component-name\": () =>\r\n      import(/* webpackChunkName: \"mek-component-name\" */ \"@/app_components/universal/mek-component-name.vue\"),\r\n    \"mek-side-menu\": () =>\r\n      import(/* webpackChunkName: \"mek_side-menu\" */ \"@/app_components/mek_side_menu/mek_side-menu.vue\")\r\n  },\r\n  props: [\"selectedData\"],\r\n  mixins: [utility_mixin],\r\n  data: () => {\r\n    let obj = {};\r\n    obj.configurationFormsList =\r\n    [\r\n      //wildly incomplete\r\n      //needs to be in its own data module\r\n      //with a separate data module for modifiers\r\n      //for use with custom configs\r\n      {\r\n        config: \"Humanoid\",\r\n        cost: 0.375,\r\n        hardpoints: [\"all\"],\r\n        propulsion: [\"all\"],\r\n        flight_without_propulsion: false,\r\n        no_hands: false,\r\n        modifiers: {\r\n        }\r\n      },\r\n      {\r\n        config: \"Tank\",\r\n        cost: 0.3,\r\n        propulsion: [\"wheels\", \"treads\", \"ges\", \"gravitics\"],\r\n          hardpoints: [\"torso\", \"head\", \"pod\", \"binder\"],\r\n        no_hands: true,\r\n        flight_without_propulsion: false,\r\n        modifiers: {\r\n          maneuver_value: -1,\r\n          armor_stopping_power: +2,\r\n        }\r\n      },\r\n      {\r\n        config: \"Avian\",\r\n        cost: 0.35,\r\n        propulsion: [\"legs\", \"ges\", \"thrusters\", \"gravitics\"],\r\n        hardpoints: [\"all\"],\r\n        no_hands: true,\r\n        flight_without_propulsion: true,\r\n        modifiers:\r\n        {\r\n          maneuver_value: -1,\r\n          melee_damage: +2,\r\n          flight_movement_allowance: +6,\r\n          land_movement_alloance: +0,\r\n        }\r\n      },\r\n      {\r\n        config: \"Fighter/Corvette\",\r\n        cost: 0.3,\r\n        propulsion: [\"ges\", \"thrusters\", \"gravitics\"],\r\n        hardpoints: [\"torso\", \"pod\", \"head\", \"wings\", \"binder\"],\r\n        no_hands: true,\r\n        flight_without_propulsion: false,\r\n        modifiers:\r\n        {\r\n          maneuver_value: -2,\r\n          flight_movement_allowance: \"x2\",\r\n          minimum_flight_movement_alloance: 4,\r\n          land_movement_alloance: +0,\r\n        }\r\n      }\r\n    ];\r\n    obj.headers = { config: \"Form\", cost: \"Cost\" };\r\n    obj.selected_configuration = null;//JSON.parse(JSON.stringify(obj.configurationFormsList[0]));\r\n    obj.working_configurations = {};\r\n    obj.component_name = null;\r\n    obj.working_uuid = null;\r\n\r\n    obj.component_changed = true;\r\n    obj.newComponent = true;\r\n    return obj;\r\n  },\r\n  methods:\r\n  {\r\n    updateComponentName(_name)\r\n    {\r\n      this.component_name = _name;\r\n      this.component_changed = true;\r\n    },\r\n    /**\r\n     * \r\n     * needs fix\r\n     * \r\n     * adding additional configs with multiple servos\r\n     * then changing base_config to one with elss servos\r\n     * generates error as additional configs are invalid\r\n     * \r\n     * need to either change 'more servos' config to base_config\r\n     * or delete invalid configs\r\n     * \r\n     */\r\n    select_config(_config)\r\n    {\r\n      let name = this.selected_configuration ? this.selected_configuration.name : null;\r\n      let base_config=this.selected_configuration ? this.selected_configuration.base_config : false;\r\n      //let config = this.selected_configuration ? this.selected_configuration.config : null;\r\n      this.$set(this,\"selected_configuration\",JSON.parse(JSON.stringify(_config)));\r\n      this.selected_configuration.name = name;\r\n      if(base_config)\r\n      {\r\n        this.selected_configuration.base_config = true;\r\n      }\r\n      this.component_changed = true;\r\n    },\r\n    saveResetComponent(_action)\r\n    {\r\n      let uuid = this.working_uuid\r\n        ? this.working_uuid\r\n        : this.create_short_uuid();\r\n      let temp_config = { uuid: uuid, ...this.selected_configuration };\r\n      if(Object.keys(this.working_configurations).length==0)\r\n      {\r\n        temp_config.base_config=true;\r\n      }\r\n      temp_config.name = this.component_name;\r\n      switch (_action) {\r\n        case \"save\":\r\n          this.working_configurations[uuid] = temp_config;\r\n          this.working_uuid = uuid;\r\n          this.$emit(\"saveSelectedData\", \"config\", this.working_configurations);\r\n          this.newComponent = false;\r\n          this.component_changed = false;\r\n          break;\r\n        case \"reset\":\r\n          if (this.working_uuid) {\r\n            this.$set(this,\"selected_configuration\",temp_config);\r\n            break;\r\n          }\r\n        // eslint-disable-next-line\r\n        case \"delete\":\r\n          if (this.working_uuid) {\r\n            //this.$delete(this,\"working_configurations\",uuid);\r\n            delete this.working_configurations[uuid];\r\n            this.$emit(\r\n              \"saveSelectedData\",\r\n              \"config\",\r\n              this.working_configurations\r\n            );\r\n          }\r\n        // eslint-disable-next-line\r\n        case \"new\":\r\n          this.working_uuid = null;\r\n          this.$set(this,\"selected_configuration\",JSON.parse(JSON.stringify(this.configurationForms[0])));\r\n          //this.$set(this,\"selected_configuration\",null);\r\n          this.newComponent = true;\r\n          this.component_changed = true;\r\n          break;\r\n      }\r\n    },\r\n    load_config(_config)\r\n    {\r\n      switch (true) {\r\n        case _config == \"\" && this.working_uuid === null:\r\n          //this.$set(this,\"selected_configuration\",JSON.parse(JSON.stringify(this.configurationFormsList[0])));\r\n          this.$set(this,\"selected_configuration\",null);\r\n          break;\r\n        case _config == \"\":\r\n          this.$set(this,\"selected_configuration\",this.selectedData[this.working_uuid]);\r\n          break;\r\n        default:\r\n          this.$set(this,\"selected_configuration\",this.selectedData[_config]);\r\n          this.working_uuid = _config;\r\n          this.newComponent = false;\r\n          this.component_changed = false;\r\n      }\r\n    },\r\n    configCompare(_config1, _config2)\r\n    {\r\n      let config1=_config1.config;\r\n      let config2=_config2.config;\r\n\r\n      switch(true)\r\n      {\r\n        case config1==config2:\r\n          return 0;\r\n        case config1==\"Humanoid\":\r\n          return 1;\r\n        case config2==\"Humanoid\":\r\n          return -1;\r\n      }\r\n\r\n      let hardpoints1=_config1.hardpoints;\r\n      let hardpoints2=_config2.hardpoints;\r\n      switch(true)\r\n      {\r\n        case hardpoints1[0]==\"all\" && hardpoints2[0]==\"all\":\r\n          return 0;\r\n        case hardpoints1[0]==\"all\":\r\n        case hardpoints1.length > hardpoints2.length:\r\n          return 1;\r\n        case hardpoints2[0]==\"all\":\r\n        case hardpoints1.length < hardpoints2.length:\r\n          return -1;\r\n      }\r\n \r\n      return this.hardpointCompare(hardpoints1,hardpoints2);\r\n    },\r\n    hardpointCompare(_hardpoints1, _hardpoints2)\r\n    {\r\n      let filtered=_hardpoints1.filter(_hardpoint =>\r\n      {\r\n        return !_hardpoints2.includes(_hardpoint);\r\n      });\r\n\r\n      return filtered.length>0 ? 1 : 0;\r\n    },\r\n    adjustBaseConfig(_current_base_config)\r\n    {//scans overall working configs, adjusts base_config config as needed\r\n      let new_base_config=null;\r\n      for(let _config in this.working_configurations)\r\n      {\r\n        if(this.configCompare(_current_base_config,this.working_configurations[_config])==-1)\r\n        {\r\n          new_base_config=this.working_configurations[_config].uuid;\r\n          break;\r\n        }\r\n      }\r\n      if(new_base_config!==null)\r\n      {\r\n        delete _current_base_config.base_config;\r\n        this.working_configurations[new_base_config].base_config=true;\r\n      }\r\n    }\r\n  },\r\n  computed: \r\n  {\r\n    selectedConfigPkey()\r\n    {\r\n      let pkey= this.selectedData===undefined ? [\"Humanoid\"]\r\n              : this.selected_configuration!==null ? [this.selected_configuration.config]\r\n              : this.configurationForms.length>0 ? [this.configurationForms[0].config]\r\n              : [\"Humanoid\"];\r\n      return pkey;\r\n    },\r\n    configuration_list()\r\n    {\r\n      if (\r\n        this.selectedData === undefined ||\r\n        Object.keys(this.selectedData).length == 0\r\n      ) {\r\n        return {};\r\n      }\r\n      let obj = Object.keys(this.working_configurations).reduce((_obj, _el) => {\r\n        _obj[_el] = this.working_configurations[_el].name\r\n          ? this.working_configurations[_el].name\r\n          : this.working_configurations[_el].config;\r\n        _obj[_el] += this.working_configurations[_el].base_config ? \" (Base)\": \"\";\r\n        return _obj;\r\n      }, {});\r\n      if (this.working_uuid === null && Object.keys(this.working_configurations).length==0) {\r\n        //triggering on 'new' ... \r\n        this.working_uuid = Object.keys(this.working_configurations)[0];\r\n        this.$set(this,\"selected_configuration\",this.working_configurations[this.working_uuid]);\r\n        this.component_changed = false;\r\n        this.newComponent = false;\r\n      }\r\n      return obj;\r\n    },\r\n    configurationForms()\r\n    {\r\n      let base_form =\r\n        this.selectedData === undefined || Object.keys(this.selectedData).length == 0\r\n          ? \"Humanoid\"\r\n          : this.selectedData[this.base_config_key].config; //selectedData is an object of objects, need to flag one as 'base'\r\n      let base_hardpoints = this.selectedData === undefined || Object.keys(this.selectedData).length == 0\r\n          ? [\"all\"]\r\n          : this.working_configurations[this.base_config_key].hardpoints; //selectedData is an object of objects, need to flag one as 'base'\r\n      let isBaseConfig=this.selected_configuration && this.selected_configuration.base_config\r\n          ? true : false ;\r\n      if (base_form == \"Humanoid\" || isBaseConfig)\r\n      {\r\n        return this.configurationFormsList;\r\n      }\r\n      \r\n      if (base_hardpoints[0] == \"all\")\r\n      {\r\n        return this.configurationFormsList.slice(1);\r\n      }\r\n      let return_obj = this.configurationFormsList.reduce((_newConfigList, _config) =>\r\n      {\r\n        if([-1,0].includes(this.hardpointCompare(base_hardpoints,_config.hardpoints)))\r\n        {\r\n          _newConfigList.push(_config);\r\n        }\r\n        return _newConfigList;\r\n      }, []);\r\n      return return_obj;\r\n    },\r\n    base_config_key()\r\n    {\r\n      if (\r\n        this.selectedData === undefined ||\r\n        Object.keys(this.selectedData).length == 0\r\n      ) {\r\n        return null;\r\n      }\r\n      let first_config_key = Object.keys(this.working_configurations)[0];\r\n      let base_config_key = null;\r\n      for (let config in this.working_configurations) {\r\n        if (this.working_configurations[config].base_config) {\r\n          base_config_key = config;\r\n        }\r\n      }\r\n      return base_config_key === null ? first_config_key : base_config_key;\r\n    },\r\n    activeButtons()\r\n    {\r\n      return \"save,reset,new\" + (this.working_uuid !== null ? \",delete\" : \"\");\r\n    },\r\n    computedComponentName()\r\n    {\r\n      let name= this.component_name!==null ? this.component_name \r\n              : this.selected_configuration!==null ? this.selected_configuration.config\r\n              : this.configurationForms.length>0 ? this.configurationForms[0].config\r\n              : \"dunno\" ;\r\n      return name;\r\n    }\r\n  },\r\n  watch:\r\n  {\r\n    selectedData:\r\n    {\r\n      immediate: true,\r\n      handler: function(_new) \r\n      {\r\n        let working_configs = JSON.parse( JSON.stringify(this.selectedData || {}) );\r\n        this.$set(this,\"working_configurations\",working_configs);\r\n        if (_new === undefined || Object.keys(_new).length == 0)\r\n        {\r\n          this.$set(this,\"selected_configuration\",JSON.parse(JSON.stringify(this.configurationFormsList[0])));\r\n          this.working_uuid = null;\r\n          this.component_changed = true;\r\n          this.newComponent = true;\r\n          this.$set(this.selected_configuration, \"base_config\", true);\r\n        }\r\n        else if(Object.keys(_new).length>1)\r\n        {\r\n          let base_config_uuid=Object.keys(this.working_configurations)[0];\r\n          for(let _config in this.working_configurations)\r\n          {\r\n            if(this.working_configurations[_config].base_config)\r\n            {\r\n              base_config_uuid=this.working_configurations[_config].uuid;\r\n              break;\r\n            }\r\n          }\r\n          this.adjustBaseConfig(this.working_configurations[base_config_uuid]);\r\n        }\r\n      }\r\n    },\r\n    /* selected_configuration:\r\n    {\r\n      deep: true,\r\n      immediate: true,\r\n      handler: function(_new, _old) {\r\n        console.log(\"new\", JSON.stringify(_new), \"old\", JSON.stringify(_old));\r\n      }\r\n    } */\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_build-config.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_build-config.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_build-config.vue?vue&type=template&id=b2d465aa&scoped=true&\"\nimport script from \"./mek_build-config.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_build-config.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b2d465aa\",\n  null\n  \n)\n\nexport default component.exports","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","export default\r\n{\r\n    methods:\r\n    {\r\n        round:function(_number, _decimals)\r\n        {\r\n            if(typeof _decimals===\"undefined\" || +_decimals==0)\r\n            {\r\n                return Math.round(+_number)\r\n            }\r\n            let multiplier=10 ** +_decimals;\r\n            return Math.round(+_number * multiplier)/multiplier;\r\n        },\r\n        floor:function(_number)\r\n        {\r\n            return Math.floor(+_number);\r\n        },\r\n        ceiling:function(_number)\r\n        {\r\n            return Math.ceiling(+_number);\r\n        },\r\n        decimalPad(_number)\r\n        {\r\n            return +_number%1===0 ? _number.toPrecision(2) : _number;\r\n        },\r\n        create_uuid:function()\r\n        {\r\n            return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\r\n                (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n            )\r\n        },\r\n        create_short_uuid:function()\r\n        {\r\n            return ([1e7]+-1e3).replace(/[018]/g, c =>\r\n                (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n            );\r\n        },\r\n        invisible_pad:function(_array_of_items)\r\n        {\r\n            let longestString=\"\";\r\n            _array_of_items.forEach(function(_element)\r\n            {\r\n                if(_element.length > longestString.length)\r\n                {\r\n                    longestString=_element;\r\n                }\r\n            },0);\r\n            return longestString+\"XX\";\r\n        },\r\n        isNumeric:function isNumeric(_input)\r\n        {\r\n            return typeof _input!=='undefined' && !isNaN(parseFloat(_input)) && isFinite(_input);\r\n        },\r\n    }\r\n};","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n"],"sourceRoot":""}
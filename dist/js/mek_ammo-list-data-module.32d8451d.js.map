{"version":3,"sources":["webpack:///./src/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./src/data_table_modules/mek_magazine/mek_ammo-list-data-module.js"],"names":["__webpack_require__","d","__webpack_exports__","partial_validate","partial_has_feature","partial_get_feature","partial_cleaned_feature","_data_table","_validation_keys","_data","Array","isArray","length","valid","some","_val","every","_keys","_key","undefined","_has_feature","found_feature","_table_val","_validator","_get_feature","_default_data","_name","_pkey","_feature","data","key_list","update","alerts","json_data","JSON","stringify","parse","push","r","feature_data_table","feature_validate","has_feature","get_feature","shock_exclusive","blast_exclusive","cleaned_feature","filter_data_table","_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__","raw_feature_data_table","type","cost","effect","filter","_el","data_table_keys","default_data","data_cached","_has_blast_radius","cached_validate","is_exclusive_feature","_exclusive_target","_pkey_value","exclusive_target_array","toLowerCase","_feature_array","hasExclusiveShock","hasExclusiveBlast","error","cleaned_array","temp_selected_feature_array","reduceRight","_cleaned_array","clean_feature","isShock","isBlast","includes","reverse"],"mappings":"6HAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAOA,IAAIH,EAAiB,CAACI,EAAYC,IAAoBC,IAIlD,GAAkB,qBAARA,IAAwBC,MAAMC,QAAQH,IAA8C,GAAzBA,EAAiBI,OAElF,OAAO,EAEX,IAAIC,EAAMN,EAAYO,KAAMC,IAExB,OAAOP,EAAiBQ,MAAOC,IAE3B,OAAOR,EAAMQ,IAAQF,EAAKE,OAGlC,OAAOJ,GAKPT,EAAqBG,GAAc,CAACW,EAAMH,KAE1C,OAAOR,EAAYO,KAAML,IAErB,YAAqBU,IAAdV,EAAMS,IAAqBT,EAAMS,IAAOH,KAQnDV,EAAoB,CAACE,EAAaa,IAAe,CAACF,EAAMH,KAExD,IAAIM,EAAc,KAYlB,OAXGD,EAAaF,EAAKH,IAEjBR,EAAYO,KAAMQ,IAEd,GAAGA,EAAWJ,IAAOH,EAGjB,OADAM,EAAcC,GACP,QAEbH,GAECE,GAGPf,EAAwB,CAACiB,EAAYH,EAAcI,EAAcC,EAAeC,IAAQ,CAACC,EAAOC,KAEhG,IAAIC,OAAKV,EACLW,EAAS,GACTC,GAAO,EACPC,EAAO,GACPC,EAAUC,KAAKC,UAAUP,GAwB7B,YAtBcT,IAAXS,GAAyBR,EAAaO,EAAMC,EAASD,IAQ/CJ,EAAWK,IAUhBC,EAAKK,KAAKE,MAAMF,KAAKC,UAAUP,IAC/BE,EAAS,CAACD,EAAKF,IACfI,GAAO,IAVPF,EAAKK,KAAKE,MAAMF,KAAKC,UAAUX,EAAaG,EAAMC,EAASD,MAC3DG,EAAS,CAACD,EAAKF,IACfI,GAAO,EACPC,EAAOK,KAAKX,EAAM,KAAKO,GACvBD,EAAOK,KAAK,uCAZZR,EAAKJ,EACLK,EAAS,CAACD,EAAKF,IACfI,GAAO,EACPC,EAAOK,KAAKX,EAAM,KAAKO,GACvBD,EAAOK,KAAK,iDAgBT,CAACR,KAAKA,EAAMC,SAASA,EAAUC,OAAOA,EAAQC,OAAOA,uCCtFhEhC,EAAAsC,EAAApC,GAAAF,EAAAC,EAAAC,EAAA,uCAAAqC,IAAAvC,EAAAC,EAAAC,EAAA,qCAAAsC,IAAAxC,EAAAC,EAAAC,EAAA,gCAAAuC,IAAAzC,EAAAC,EAAAC,EAAA,gCAAAwC,IAAA1C,EAAAC,EAAAC,EAAA,oCAAAyC,IAAA3C,EAAAC,EAAAC,EAAA,oCAAA0C,IAAA5C,EAAAC,EAAAC,EAAA,oCAAA2C,IAAA7C,EAAAC,EAAAC,EAAA,sCAAA4C,IAAA,IAAAC,EAAA/C,EAAA,QAKA,IAAIgD,EACJ,CACI,CAACC,KAAK,YAAYC,KAAK,GAAIC,OAAO,mBAClC,CAACF,KAAK,OAAOC,KAAK,GAAIC,OAAO,gBAC7B,CAACF,KAAK,UAAUC,KAAK,EAAEC,OAAO,YAC9B,CAACF,KAAK,SAASC,KAAK,EAAEC,OAAO,YAC7B,CAACF,KAAK,UAAUC,KAAK,EAAEC,OAAO,kBAC9B,CAACF,KAAK,UAAUC,KAAK,EAAEC,OAAO,oBAC9B,CAACF,KAAK,iBAAiBC,KAAK,EAAEC,OAAO,mBACrC,CAACF,KAAK,YAAYC,KAAK,EAAEC,OAAO,oBAChC,CAACF,KAAK,aAAaC,KAAK,EAAEC,OAAO,gBACjC,CAACF,KAAK,eAAeC,KAAK,EAAEC,OAAO,cAAcR,iBAAgB,GACjE,CAACM,KAAK,cAAcC,KAAK,EAAEC,OAAO,gBAAgBR,iBAAgB,GAClE,CAACM,KAAK,cAAcC,KAAK,EAAEC,OAAO,kBAClC,CAACF,KAAK,UAAUC,KAAK,EAAEC,OAAO,eAAeP,iBAAgB,GAC7D,CAACK,KAAK,WAAWC,KAAK,EAAEC,OAAO,eAAeP,iBAAgB,GAC9D,CAACK,KAAK,YAAYC,KAAK,GAAGC,OAAO,eAAeP,iBAAgB,GAChE,CAACK,KAAK,WAAWC,KAAK,GAAGC,OAAO,eAAeP,iBAAgB,GAC/D,CAACK,KAAK,UAAUC,KAAK,GAAGC,OAAO,eAAeP,iBAAgB,GAC9D,CAACK,KAAK,UAAUC,KAAK,IAAKC,OAAO,gBAEjCR,EAAgBK,EAAuBI,OAAQC,IAAO,MAAoC,qBAAtBA,EAAIV,kBACxEC,EAAgBI,EAAuBI,OAAQC,IAAO,MAAoC,qBAAtBA,EAAIT,kBACxEU,EAAgB,CAAC,OAAO,OAAO,SAAS,kBAAkB,mBAC1DC,EAAa,CAACN,KAAK,UAAUC,KAAK,EAAEC,OAAO,YAE3CZ,EAAmBS,EACnBQ,GAAY,EAEZV,EAAmBW,IAEnBD,GAAY,EAURjB,EATAkB,EASmBT,EAPAA,EAAuBI,OAAQrC,IAE9C,MAAkB,WAAXA,EAAKkC,QAQpBS,EAAgBvD,eAAiB6C,EAAwBM,GAGzDd,EAAkB/B,IAElB,OAAG+C,EAEQE,EAAgBjD,IAE3B+C,GAAY,EACZE,EAAgBvD,eAAiBoC,EAAoBe,GAC9CI,EAAgBjD,KAIvBgC,EAAY,CAACd,EAAMlB,KAEnB,OAAOL,eAAoBmC,EAApBnC,CAAwCuB,EAAMlB,IAIrDiC,EAAY,CAACf,EAAMlB,KAEnB,OAAOJ,eAAoBkC,EAAoBE,EAAxCpC,CAAqDsB,EAAMlB,IAGlEkD,EAAqB,SAASC,EAAmBjC,EAAOkC,GAExD,IAAIC,EAAuB,KAC3B,OAAOF,EAAkBG,eAErB,IAAK,kBACDD,EAAuBnB,EACvB,MACJ,IAAK,kBACDmB,EAAuBlB,EACvB,MAER,OAA4B,OAAzBkB,GAIIA,EAAuBhD,KAAMC,IAEhC,OAAOA,EAAKY,IAAQkC,KASxBhB,EAAgB,SAASmB,EAAgBrC,GAEzC,IAAIsC,GAAkB,EAClBC,GAAkB,EAClBnC,GAAO,EACPD,EAAS,GACTE,EAAO,GAEX,QAAoBb,IAAjB6C,QAAsC7C,IAARQ,EACjC,CACIK,EAAOK,KAAK,4BACZ,IAAI8B,OAAuBhD,IAAjB6C,EACJ,sDACA,wDAEN,OADAhC,EAAOK,KAAK8B,GACL,CAACC,cAAc,CAACb,GAAcxB,QAAO,EAAKD,SAAS,CAAC,WAAWE,OAAOA,GAGjF,IAAIqC,EAA4BL,EAAeM,YAAY,CAACC,EAAgBxD,KAExE,QAAiBI,IAAdJ,EAAKY,GAIJ,OAFAK,EAAOK,KAAK,2BAA2BH,KAAKC,UAAUpB,IACtDiB,EAAOK,KAAK,4CACLkC,EAEX,IAAIC,EAAczD,EAUlB,GATIyB,EAAiBzB,KAEjBiB,EAAOK,KAAK,2BAA2BH,KAAKC,UAAUpB,IACtDiB,EAAOK,KAAK,gDACZmC,EAAc9B,EAAYf,EAAMZ,EAAKY,IACrCZ,EAAKyD,EACLzC,GAAO,GAGQ,OAAhByC,EAIC,OAFAxC,EAAOK,KAAK,gDACZN,GAAO,EACAwC,EAGX,IAAIE,EAAQd,EAAqB,kBAAkBhC,EAAMZ,EAAKY,IAC1D+C,EAAQf,EAAqB,kBAAkBhC,EAAMZ,EAAKY,IAE9D,OAAG8C,IAAYR,GAEXM,EAAelC,KAAKtB,GACpBkD,GAAkB,EAClBnC,EAASO,KAAKtB,EAAKY,IACZ4C,GAEHE,GAAWR,GAEfjC,EAAOK,KAAK,2BAA2BtB,GACvCiB,EAAOK,KAAK,uDACZN,GAAO,EACAwC,GAGRG,IAAYR,GAEXK,EAAelC,KAAKtB,GACpBmD,GAAkB,EAClBpC,EAASO,KAAKtB,EAAKY,IACZ4C,GAEHG,GAAWR,GAEflC,EAAOK,KAAK,2BAA2BtB,GACvCiB,EAAOK,KAAK,8DACZN,GAAO,EACAwC,IAGPzC,EAAS6C,SAAS5D,EAAKY,MAEvB4C,EAAelC,KAAKtB,GACpBe,EAASO,KAAKtB,EAAKY,KAEhB4C,IACT,IAeF,OAdAF,EAA4BA,EAA4BjB,OAAQrC,IAE5D,MAAkC,WAA3BA,EAAKY,GAAOoC,eACXG,GAAgD,WAA3BnD,EAAKY,GAAOoC,gBAE1Ca,UACoC,GAApCP,EAA4BzD,SAE3ByD,EAA4B,CAACnC,KAAKE,MAAMF,KAAKC,UAAUoB,KACvDxB,GAAO,EACPD,EAAS,CAAC,WACVE,EAAOK,KAAK,4BACZL,EAAOK,KAAK,kCAET,CAAC+B,cAAcC,EAA4BtC,OAAOA,EAAOD,SAASA,EAASE,OAAOA","file":"js/mek_ammo-list-data-module.32d8451d.js","sourcesContent":["//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return _validation_keys.every((_keys)=>\r\n        {//return true if all validation_keys in _data match an element in _data_table\r\n            return _data[_keys]==_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature} \r\n    from \"@/data_table_modules/universal/mek_partial-function-data-module\";\r\n\r\n//create new ammo_data_table\r\nlet raw_feature_data_table=\r\n[\r\n    {type:\"Paintball\",cost:0.5,effect:\"Practice Rounds\"},\r\n    {type:\"Foam\",cost:0.5,effect:\"Firefighting\"},\r\n    {type:\"High-Ex\",cost:1,effect:\"Standard\"},\r\n    {type:\"Tracer\",cost:3,effect:\"+1 to WA\"},\r\n    {type:\"Kinetic\",cost:3,effect:\"More Knockback\"},\r\n    {type:\"Tangler\",cost:3,effect:\"Grappling Attack\"},\r\n    {type:\"Armor Piercing\",cost:4,effect:\"1/2 SP vs Armor\"},\r\n    {type:\"Disruptor\",cost:4,effect:\"1/2 SP vs Energy\"},\r\n    {type:\"Incendiary\",cost:4,effect:\"Flamethrower\"},\r\n    {type:\"Shock (only)\",cost:4,effect:\"Stun Effect\",shock_exclusive:true},\r\n    {type:\"Shock (add)\",cost:6,effect:\"Stun & Damage\",shock_exclusive:true},\r\n    {type:\"Scattershot\",cost:5,effect:\"Shotgun Effect\"},\r\n    {type:\"Blast I\",cost:6,effect:\"1-Hex Radius\",blast_exclusive:true},\r\n    {type:\"Blast II\",cost:8,effect:\"2-Hex Radius\",blast_exclusive:true},\r\n    {type:\"Blast III\",cost:10,effect:\"3-Hex Radius\",blast_exclusive:true},\r\n    {type:\"Blast IV\",cost:12,effect:\"4-Hex Radius\",blast_exclusive:true},\r\n    {type:\"Blast V\",cost:14,effect:\"5-Hex Radius\",blast_exclusive:true},\r\n    {type:\"Nuclear\",cost:1000,effect:\"Atomic Ammo\"},\r\n];\r\nlet shock_exclusive=raw_feature_data_table.filter((_el)=>{return typeof _el.shock_exclusive!==\"undefined\";});\r\nlet blast_exclusive=raw_feature_data_table.filter((_el)=>{return typeof _el.blast_exclusive!==\"undefined\";});\r\nlet data_table_keys=[\"type\",\"cost\",\"effect\",\"shock_exclusive\",\"blast_exclusive\"];\r\nlet default_data={type:\"High-Ex\",cost:1,effect:\"Standard\"};\r\n\r\nlet feature_data_table=raw_feature_data_table;\r\nlet data_cached=false;\r\n\r\nlet filter_data_table=(_has_blast_radius)=>\r\n{\r\n    data_cached=false;\r\n    if(!_has_blast_radius)\r\n    {\r\n        feature_data_table=raw_feature_data_table.filter((_val)=>\r\n        {\r\n            return _val.type!=\"Nuclear\";\r\n        });\r\n    }\r\n    else\r\n    {\r\n        feature_data_table=raw_feature_data_table;\r\n    }\r\n};\r\nlet cached_validate=partial_validate(raw_feature_data_table, data_table_keys);\r\n//data validator for feature_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet feature_validate=(_data)=>\r\n{\r\n    if(data_cached)\r\n    {\r\n        return cached_validate(_data);\r\n    }\r\n    data_cached=true;\r\n    cached_validate=partial_validate(feature_data_table, data_table_keys);\r\n    return cached_validate(_data);\r\n};\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=(_pkey,_data)=>\r\n{\r\n    return partial_has_feature(feature_data_table)(_pkey,_data);\r\n};\r\n\r\n//completed function for returning matching data\r\nlet get_feature=(_pkey,_data)=>\r\n{\r\n    return partial_get_feature(feature_data_table, has_feature)(_pkey,_data);\r\n};\r\n\r\nlet is_exclusive_feature=function(_exclusive_target, _pkey, _pkey_value)\r\n{\r\n    let exclusive_target_array=null;\r\n    switch(_exclusive_target.toLowerCase())\r\n    {\r\n        case \"shock_exclusive\":\r\n            exclusive_target_array=shock_exclusive;\r\n            break;\r\n        case \"blast_exclusive\":\r\n            exclusive_target_array=blast_exclusive;\r\n            break;\r\n    }\r\n    if(exclusive_target_array===null)\r\n    {\r\n        return false;\r\n    }\r\n    return exclusive_target_array.some((_val)=>\r\n    {\r\n        return _val[_pkey]==_pkey_value;\r\n    });\r\n};\r\n\r\n/*** \r\n * \r\n * create cleaned_feat function for features\r\n * \r\n *  ***/\r\nlet cleaned_feature=function(_feature_array, _pkey)\r\n{//takes feature_array, returns cleaned array removing multiple exclusive values\r\n    let hasExclusiveShock=false;\r\n    let hasExclusiveBlast=false;\r\n    let update=false;\r\n    let key_list=[];\r\n    let alerts=[];\r\n\r\n    if(_feature_array===undefined || _pkey===undefined)\r\n    {\r\n        alerts.push(\"Mek_Magazine-Ammo-List: \");\r\n        let error=_feature_array===undefined\r\n            ? \"**** Missing feature array. Returning default. ****\"\r\n            : \"**** No primary key provided. Returning default. ****\";\r\n        alerts.push(error);\r\n        return {cleaned_array:[default_data],update:true,key_list:[\"High-Ex\"],alerts:alerts};\r\n    }\r\n\r\n    let temp_selected_feature_array=_feature_array.reduceRight((_cleaned_array, _val)=>\r\n    {\r\n        if(_val[_pkey]===undefined)\r\n        {//if feature with pkey doesn't exist in data table, ignore\r\n            alerts.push(\"Mek_Magazine-Ammo-List: \"+JSON.stringify(_val));\r\n            alerts.push(\"**** Missing primary key. Ignoring. ****\");\r\n            return _cleaned_array;\r\n        }\r\n        let clean_feature=_val;\r\n        if(!feature_validate(_val))\r\n        {//invalid data\r\n            alerts.push(\"Mek_Magazine-Ammo-List: \"+JSON.stringify(_val))\r\n            alerts.push(\"**** Invalid data, attempting to reset. ****\")\r\n            clean_feature=get_feature(_pkey,_val[_pkey]);\r\n            _val=clean_feature;//replace current value with correct value\r\n            update=true;\r\n            //attempt to set to corrected feature\r\n        }\r\n        if(clean_feature===null)\r\n        {//no matching feature\r\n            alerts.push(\"**** Unable to reset. No matching data. ****\")\r\n            update=true;\r\n            return _cleaned_array;\r\n            //ignore element\r\n        }\r\n        let isShock=is_exclusive_feature(\"shock_exclusive\",_pkey,_val[_pkey]);\r\n        let isBlast=is_exclusive_feature(\"blast_exclusive\",_pkey,_val[_pkey]);\r\n\r\n        if(isShock && !hasExclusiveShock)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusiveShock=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isShock && hasExclusiveShock)\r\n        {\r\n            alerts.push(\"Mek_Magazine-Ammo-List: \"+_val);\r\n            alerts.push(\"**** Duplicate exclusive shock data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n\r\n        if(isBlast && !hasExclusiveBlast)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusiveBlast=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isBlast && hasExclusiveBlast)\r\n        {\r\n            alerts.push(\"Mek_Magazine-Ammo-List: \"+_val);\r\n            alerts.push(\"**** Duplicate exclusive blast radius data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n\r\n        if(!key_list.includes(_val[_pkey]))\r\n        {\r\n            _cleaned_array.push(_val);\r\n            key_list.push(_val[_pkey]);\r\n        }\r\n        return _cleaned_array;\r\n    },[]);\r\n    temp_selected_feature_array=temp_selected_feature_array.filter((_val)=>\r\n    {\r\n        return _val[_pkey].toLowerCase()!=\"nuclear\" \r\n            || (hasExclusiveBlast && _val[_pkey].toLowerCase()==\"nuclear\");\r\n        //filter out nuclear if blast-radius isn't a feature\r\n    }).reverse();\r\n    if(temp_selected_feature_array.length==0)\r\n    {//empty, reset to default\r\n        temp_selected_feature_array=[JSON.parse(JSON.stringify(default_data))];\r\n        update=true;\r\n        key_list=[\"High-Ex\"];\r\n        alerts.push(\"Mek_Magazine-Ammo-List: \");\r\n        alerts.push(\"**** Reseting to default ****\");\r\n    }\r\n    return {cleaned_array:temp_selected_feature_array,update:update,key_list:key_list,alerts:alerts};\r\n    //returns an object with the pruned feature array, whether it was updated, and the key_list\r\n};\r\n\r\nexport {feature_data_table, feature_validate, has_feature, get_feature, shock_exclusive, blast_exclusive, cleaned_feature, filter_data_table};\r\n"],"sourceRoot":""}
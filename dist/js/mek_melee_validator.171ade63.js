(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["mek_melee_validator"],{"0618":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateComponent", function() { return validateComponent; });\n/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("ac6a");\n/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__);\n\nlet validators = {};\n__webpack_require__.e(/* import() | mek_melee-accuracy-data-module */ "mek_melee-accuracy-data-module").then(__webpack_require__.bind(null, "6403")).then(_module => {\n  validators.accuracy = _module.cleaned_feature;\n});\n__webpack_require__.e(/* import() | mek_melee-damage-data-module */ "mek_melee-damage-data-module").then(__webpack_require__.bind(null, "a520")).then(_module => {\n  validators.damage = _module.cleaned_feature;\n});\n__webpack_require__.e(/* import() | mek_melee-feature-data-module */ "mek_melee-feature-data-module").then(__webpack_require__.bind(null, "6b67")).then(_module => {\n  validators.feature = _module.cleaned_feature;\n});\n__webpack_require__.e(/* import() | mek_melee-entangle-range-data-module */ "mek_melee-entangle-range-data-module").then(__webpack_require__.bind(null, "da12")).then(_module => {\n  validators.entangle = _module.cleaned_feature;\n});\n__webpack_require__.e(/* import() | mek_space-efficiency-data-module */ "mek_space-efficiency-data-module").then(__webpack_require__.bind(null, "16e1")).then(_module => {\n  validators.space_efficiency = _module.validate_efficiency;\n});\nlet loopValidators, updateMultipliers, round;\n__webpack_require__.e(/* import() | validator_functions */ "validator_functions").then(__webpack_require__.bind(null, "07de")).then(_module => {\n  loopValidators = _module.loopValidators;\n  updateMultipliers = _module.updateMultipliers;\n  round = _module.round;\n});\n\nvalidators.derived = _component => {\n  let cleanedComponent = _component;\n  let alerts = [];\n  let validatedData;\n  let updateList = ["selected_accuracy", "feature_array"]; //update cost_multipliers for components needing update\n\n  validatedData = updateMultipliers(updateList, cleanedComponent, "Mek-Melee");\n  cleanedComponent.cost_multipliers = validatedData.data;\n  alerts = alerts.concat(validatedData.alerts); //update cost_multiplier\n\n  let cost_multiplier = Object.entries(cleanedComponent.cost_multipliers).reduce((_multi, _val) => {\n    //calc new cost_multiplier\n    return _multi * _val[1];\n  }, 1);\n  cost_multiplier = round(cost_multiplier, 2);\n\n  if (cleanedComponent.cost_multiplier != cost_multiplier) {\n    alerts.push("Mek-Melee: cost_multiplier");\n    alerts.push("**** Invalid Cost Multiplier. Correcting. ****");\n    cleanedComponent.cost_multiplier = round(cost_multiplier, 2);\n  }\n\n  let newDamageCapacity = cleanedComponent.selected_damage.damage;\n\n  if (cleanedComponent.damage_capacity != newDamageCapacity) {\n    alerts.push("Mek-Melee: damage_capacity");\n    alerts.push("**** Invalid Damage Capacity. Correcting. ****");\n    cleanedComponent.damage_capacity = newDamageCapacity;\n  }\n\n  let newWeight = newDamageCapacity / 2;\n\n  if (cleanedComponent.weight != newWeight) {\n    alerts.push("Mek-Melee: weight");\n    alerts.push("**** Invalid Weight. Correcting. ****");\n    cleanedComponent.weight = newWeight;\n  }\n\n  let newCost = cleanedComponent.selected_damage.cost * cost_multiplier + cleanedComponent.efficiencies.space.cost;\n  newCost = round(newCost, 2);\n\n  if (cleanedComponent.cost != newCost) {\n    alerts.push("Mek-Melee: cost");\n    alerts.push("**** Invalid Cost. Correcting. ****");\n    cleanedComponent.cost = newCost;\n  } //check and update entangle-range trade values\n\n\n  let isEntangle = cleanedComponent.feature_array.some(_val => {\n    return _val.feature == "Entangle";\n  });\n\n  if (isEntangle) {\n    let base_damage = cleanedComponent.selected_damage.damage;\n    let range_mod = cleanedComponent.entangle.range_modifier;\n    let damage_mod = cleanedComponent.entangle.damage_modifier;\n    let cleanedEntangle = validators.entangle(base_damage, range_mod, damage_mod);\n    cleanedComponent.entangle = {\n      range_modifier: cleanedEntangle.range_mod,\n      damage_modifier: cleanedEntangle.damage_mod\n    };\n    alerts = alerts.concat(cleanedEntangle.alerts);\n\n    if (cleanedComponent.final_damage != cleanedEntangle.damage) {\n      alerts.push("Mek-Melee: final_damage");\n      alerts.push("**** Invalid Final Damage. Correcting. ****");\n      cleanedComponent.final_damage = cleanedEntangle.damage;\n    }\n  } else if (cleanedComponent.entangle !== undefined) {\n    alerts.push("Mek-Melee: entangle");\n    alerts.push("**** Invalid Entangle. Correcting. ****");\n    cleanedComponent.entangle = {\n      range_mod: 0,\n      damage_mod: 0\n    };\n\n    if (cleanedComponent.final_damage != cleanedComponent.selected_damage.damage) {\n      alerts.push("Mek-Melee: final_damage");\n      alerts.push("**** Invalid Final Damage. Correcting. ****");\n    }\n  }\n\n  return {\n    data: cleanedComponent,\n    alerts: alerts\n  };\n};\n\nlet validateComponent = _component => {\n  let cleanedComponent = _component;\n  let validatedData;\n  let loopAlerts;\n  let alerts = []; //loop thru independent validations\n\n  let componentsToValidate = [{\n    validator: validators.damage,\n    pkey: "damage",\n    component_prop: "selected_damage"\n  }, {\n    validator: validators.accuracy,\n    pkey: "accuracy",\n    component_prop: \'selected_accuracy\'\n  }, {\n    validator: validators.feature,\n    pkey: "feature",\n    component_prop: \'feature_array\'\n  }];\n\n  var _loopValidators = loopValidators(componentsToValidate, cleanedComponent);\n\n  cleanedComponent = _loopValidators.cleanedComponent;\n  loopAlerts = _loopValidators.loopAlerts;\n  alerts = alerts.concat(loopAlerts); //update cost_multipliers for components needing update\n\n  validatedData = validators.derived(cleanedComponent);\n  cleanedComponent = validatedData.data;\n  alerts = alerts.concat(validatedData.alerts); //validate space efficienc\n\n  let base_cost = cleanedComponent.selected_damage.cost * cleanedComponent.cost_multiplier;\n  validatedData = validators.space_efficiency(cleanedComponent.efficiencies.space, base_cost, "Mek-Melee");\n  alerts = alerts.concat(validatedData.alerts);\n  cleanedComponent.efficiencies.space = validatedData.data;\n  return {\n    data: cleanedComponent,\n    alerts: alerts\n  };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0618\n')}}]);
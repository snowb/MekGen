{"version":3,"sources":["webpack:///./src/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./src/mixins/alerts_mixin.js","webpack:///./src/design_components/mek_beam/subcomponents/mek_beam-shots.vue?6266","webpack:///./src/data_table_modules/mek_beam/mek_beam-shots-data-module.js","webpack:///src/design_components/mek_beam/subcomponents/mek_beam-shots.vue","webpack:///./src/design_components/mek_beam/subcomponents/mek_beam-shots.vue?0dc9","webpack:///./src/design_components/mek_beam/subcomponents/mek_beam-shots.vue"],"names":["__webpack_require__","d","__webpack_exports__","partial_validate","partial_has_feature","partial_get_feature","partial_cleaned_feature","_data_table","_validation_keys","_data","Array","isArray","length","valid","some","_val","_keys","_key","undefined","_has_feature","found_feature","_table_val","_validator","_get_feature","_default_data","_name","_pkey","_feature","data","key_list","update","alerts","json_data","JSON","stringify","parse","push","methods","addAlert","_alert_string","this","publishAlerts","$store","commit","$set","render","_vm","_h","$createElement","_c","_self","attrs","items","shots_table","pkey","selected-keys","selected_keys","headers","shots","cost","name","flow","show-headers","format","on","update-selected-data","select_shots","staticRenderFns","raw_shots_data_table","shots_data_table","data_cached","data_table_keys","default_data","cached_validate","shots_validate","has_feature","get_feature","cleaned_feature","filter_shots_data_table","_mag_fed","filter","mek_beam_shotsvue_type_script_lang_js_","props","mixins","alerts_mixin","components","mek-sub-component-table","e","then","bind","obj","suppressAlerts","_shots","$emit","computed","[object Object]","magFed","cleaned_data","forEach","_alert","watch","_newval","_oldval","subcomponents_mek_beam_shotsvue_type_script_lang_js_","component","Object","componentNormalizer"],"mappings":"kHAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAOA,IAAIH,EAAiB,CAACI,EAAYC,IAAoBC,IAIlD,GAAkB,qBAARA,IAAwBC,MAAMC,QAAQH,IAA8C,GAAzBA,EAAiBI,OAElF,OAAO,EAEX,IAAIC,EAAMN,EAAYO,KAAMC,IAExB,OAAQP,EAAiBM,KAAME,IAE3B,OAAOP,EAAMO,IAAQD,EAAKC,OAGlC,OAAOH,GAKPT,EAAqBG,GAAc,CAACU,EAAMF,KAE1C,OAAOR,EAAYO,KAAML,IAErB,YAAqBS,IAAdT,EAAMQ,IAAqBR,EAAMQ,IAAOF,KAQnDV,EAAoB,CAACE,EAAaY,IAAe,CAACF,EAAMF,KAExD,IAAIK,EAAc,KAYlB,OAXGD,EAAaF,EAAKF,IAEjBR,EAAYO,KAAMO,IAEd,GAAGA,EAAWJ,IAAOF,EAGjB,OADAK,EAAcC,GACP,QAEbH,GAECE,GAGPd,EAAwB,CAACgB,EAAYH,EAAcI,EAAcC,EAAeC,IAAQ,CAACC,EAAOC,KAEhG,IAAIC,OAAKV,EACLW,EAAS,GACTC,GAAO,EACPC,EAAO,GACPC,EAAUC,KAAKC,UAAUP,GAwB7B,YAtBcT,IAAXS,GAAyBR,EAAaO,EAAMC,EAASD,IAQ/CJ,EAAWK,IAUhBC,EAAKK,KAAKE,MAAMF,KAAKC,UAAUP,IAC/BE,EAAS,CAACD,EAAKF,IACfI,GAAO,IAVPF,EAAKK,KAAKE,MAAMF,KAAKC,UAAUX,EAAaG,EAAMC,EAASD,MAC3DG,EAAS,CAACD,EAAKF,IACfI,GAAO,EACPC,EAAOK,KAAKX,EAAM,KAAKO,GACvBD,EAAOK,KAAK,uCAZZR,EAAKJ,EACLK,EAAS,CAACD,EAAKF,IACfI,GAAO,EACPC,EAAOK,KAAKX,EAAM,KAAKO,GACvBD,EAAOK,KAAK,iDAgBT,CAACR,KAAKA,EAAMC,SAASA,EAAUC,OAAOA,EAAQC,OAAOA,uCCrFhE7B,EAAA,MACImC,QACA,CACIC,SAASC,GAELC,KAAKT,OAAOK,KAAKG,IAErBE,gBAEOD,KAAKT,OAAOnB,OAAO,GAElB4B,KAAKE,OAAOC,OAAO,eAAeH,KAAKT,QAE3CS,KAAKI,KAAKJ,KAAK,SAAS,iDCdpC,IAAAK,EAAA,WAA0B,IAAAC,EAAAN,KAAaO,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,2BAAqCE,MAAA,CAAOC,MAAAN,EAAAO,YAAAC,KAAAR,EAAAQ,KAAAC,gBAAAT,EAAAU,cAAAC,QAAA,CAAqFC,MAAA,QAAAC,KAAA,QAA0BC,KAAA,QAAAC,KAAA,WAAAC,gBAAA,EAAAC,OAAA,CAAgEJ,KAAA,eAAmBK,GAAA,CAAKC,uBAAAnB,EAAAoB,iBAC5UC,EAAA,uCCGA,IAAIC,EACJ,CACI,CAACV,MAAM,EAAEC,KAAK,KACd,CAACD,MAAM,EAAEC,KAAK,IACd,CAACD,MAAM,EAAEC,KAAK,IACd,CAACD,MAAM,EAAEC,KAAK,IACd,CAACD,MAAM,EAAEC,KAAK,IACd,CAACD,MAAM,GAAGC,KAAK,IACf,CAACD,MAAM,eAAeC,KAAK,GAC3B,CAACD,MAAM,GAAGC,KAAK,IAEfU,EAAiBD,EACjBE,GAAY,EACZC,EAAgB,CAAC,QAAQ,QACzBC,EAAa,CAACd,MAAM,eAAeC,KAAK,GAExCc,EAAgBtE,eAAiBkE,EAAkBE,GAGnDG,EAAgBjE,IAEhB,OAAG6D,EAEQG,EAAgBhE,IAE3B6D,GAAY,EACZG,EAAgBtE,eAAiBkE,EAAkBE,GAC5CE,EAAgBhE,KAIvBkE,EAAYvE,eAAoBiE,GAGhCO,EAAYvE,eAAoBgE,EAAkBM,GAGlDE,EACAvE,eAAwBoE,EAAgBC,EAAaC,EAAaJ,EAAc,kBAE5EM,EAAyBC,IAErBA,GAUAV,EAAiBD,EAAqBY,OAAQjE,IAE1C,OAAmB,GAAZA,EAAK2C,OAAwB,gBAAZ3C,EAAK2C,QAEjCc,EAAa,CAACd,MAAM,GAAGC,KAAK,KAZ5BU,EAAiBD,EAAqBY,OAAQjE,IAE1C,OAAmB,IAAZA,EAAK2C,QAEhBc,EAAa,CAACd,MAAM,eAAeC,KAAK,IAW5CgB,EAAYvE,eAAoBiE,GAChCO,EAAYvE,eAAoBgE,EAAkBM,GAClDE,EACIvE,eAAwBoE,EAAgBC,EAAaC,EAAaJ,EAAc,kBACpFF,GAAY,GAEhBQ,GAAwB,GCrD5B,IAAAG,EAAA,CACArB,KAAA,iBACAsB,MAAA,mBACAC,OAAA,CAAAC,EAAA,MACAC,WACA,CACAC,0BAAA,IAAAtF,EAAAuF,EAAA,kBAAAC,KAAAxF,EAAAyF,KAAA,eAEA7D,KAAA,WAEA,IAAA8D,EAAA,CACA3D,OAAA,GACAuB,KAAA,QACAqC,gBAAA,GACA,OAAAD,GAEArD,QACA,CACA6B,aAAA,SAAA0B,GAEA,IAAAhE,EAAAK,KAAAE,MAAAF,KAAAC,UAAA0D,IACApD,KAAAqD,MAAA,eAAAjE,KAGAkE,SACA,CACAC,cAGA,OADAjB,EAAAtC,KAAAwD,QACA3B,GAEA0B,gBAEAvD,KAAAwD,OACA,IAAAC,EAAApB,EAAArC,KAAAc,KAAAd,KAAAkB,OAcA,OAbAuC,EAAAlE,OAAAnB,OAAA,IAAA4B,KAAAmD,iBAEAM,EAAAlE,OAAAmE,QAAAC,IAEA3D,KAAAF,SAAA6D,KAEA3D,KAAAC,iBAEAwD,EAAAnE,QAEAU,KAAA0B,aAAA+B,EAAArE,MAEAY,KAAAmD,gBAAA,EACAM,EAAApE,WAGAuE,MACA,CACAL,OAAAM,EAAAC,GAEAD,GAAAC,IAEA9D,KAAAmD,gBAAA,MCzEsXY,EAAA,cCOtXC,EAAgBC,OAAAC,EAAA,KAAAD,CACdF,EACA1D,EACAsB,GACF,EACA,KACA,KACA,MAIejE,EAAA,WAAAsG","file":"js/mek_beam-shots.c2a314af.js","sourcesContent":["//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return !_validation_keys.some((_keys)=>\r\n        {//returns true on invalid data, Not the return to return True if matching valid value is found\r\n            return _data[_keys]!=_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.shots_table,\"pkey\":_vm.pkey,\"selected-keys\":_vm.selected_keys,\"headers\":{shots:'Shots',cost:'Cost'},\"name\":\"Shots\",\"flow\":\"pkey-row\",\"show-headers\":true,\"format\":{cost:'multiplier'}},on:{\"update-selected-data\":_vm.select_shots}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature} from \"../universal/mek_partial-function-data-module\";\r\n\r\n//create new shots_data_table\r\nlet raw_shots_data_table=\r\n[\r\n    {shots:0,cost:0.33},\r\n    {shots:1,cost:0.5},\r\n    {shots:2,cost:0.6},\r\n    {shots:3,cost:0.7},\r\n    {shots:5,cost:0.8},\r\n    {shots:10,cost:0.9},\r\n    {shots:\"__INFINITY__\",cost:1},\r\n    {shots:15,cost:1},\r\n];\r\nlet shots_data_table=raw_shots_data_table;\r\nlet data_cached=false;\r\nlet data_table_keys=[\"shots\",\"cost\"];\r\nlet default_data={shots:\"__INFINITY__\",cost:1};\r\n\r\nlet cached_validate=partial_validate(shots_data_table, data_table_keys);\r\n//data validator for shots_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet shots_validate=(_data)=>\r\n{\r\n    if(data_cached)\r\n    {\r\n        return cached_validate(_data);\r\n    }\r\n    data_cached=true;\r\n    cached_validate=partial_validate(shots_data_table, data_table_keys);\r\n    return cached_validate(_data);\r\n}\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=partial_has_feature(shots_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_feature=partial_get_feature(shots_data_table, has_feature);\r\n\r\n//completed function for returning cleaed data\r\nlet cleaned_feature=\r\n    partial_cleaned_feature(shots_validate, has_feature, get_feature, default_data, \"Mek_Beam-Shots\");\r\n\r\n    let filter_shots_data_table=(_mag_fed)=>\r\n    {\r\n        if(!_mag_fed)\r\n        {\r\n            shots_data_table=raw_shots_data_table.filter((_val)=>\r\n            {\r\n                return _val.shots!=15;\r\n            });\r\n            default_data={shots:\"__INFINITY__\",cost:1};\r\n        }\r\n        else\r\n        {\r\n            shots_data_table=raw_shots_data_table.filter((_val)=>\r\n            {\r\n                return _val.shots!=0 && _val.shots!=\"__INFINITY__\";\r\n            });\r\n            default_data={shots:15,cost:1};\r\n        }\r\n        //reset all functions for new table\r\n        has_feature=partial_has_feature(shots_data_table);\r\n        get_feature=partial_get_feature(shots_data_table, has_feature);\r\n        cleaned_feature=\r\n            partial_cleaned_feature(shots_validate, has_feature, get_feature, default_data, \"Mek_Beam-Shots\");\r\n        data_cached=false;\r\n    };\r\n    filter_shots_data_table(false);\r\n\r\nexport {shots_data_table, shots_validate, has_feature, get_feature, cleaned_feature, filter_shots_data_table};\r\n","<template>\r\n    <mek-sub-component-table\r\n        :items=\"shots_table\" :pkey=\"pkey\" :selected-keys=\"selected_keys\"\r\n        :headers=\"{shots:'Shots',cost:'Cost'}\"\r\n        name=\"Shots\" flow=\"pkey-row\" :show-headers=\"true\"\r\n        :format=\"{cost:'multiplier'}\"\r\n        @update-selected-data=\"select_shots\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n\r\n<script>\r\nimport alerts_mixin from \"../../../mixins/alerts_mixin\";\r\nimport {shots_data_table, cleaned_feature, filter_shots_data_table}\r\n    from \"../../../data_table_modules/mek_beam/mek_beam-shots-data-module.js\";\r\n\r\nexport default \r\n{\r\n    name: \"mek_beam_shots\",\r\n    props:[\"shots\",\"magFed\"],\r\n    mixins:[alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"../../universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={}\r\n        obj.alerts=[];\r\n        obj.pkey=\"shots\";\r\n        obj.suppressAlerts=false;\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_shots:function(_shots)\r\n        {\r\n            let data=JSON.parse(JSON.stringify(_shots));        \r\n            this.$emit(\"update-shots\",data);\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        shots_table()\r\n        {\r\n            filter_shots_data_table(this.magFed);\r\n            return shots_data_table;\r\n        },\r\n        selected_keys()\r\n        {\r\n            this.magFed;\r\n            let cleaned_data=cleaned_feature(this.pkey, this.shots);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.select_shots(cleaned_data.data);\r\n            }\r\n            this.suppressAlerts=false;\r\n            return cleaned_data.key_list;\r\n        }\r\n    },\r\n    watch:\r\n    {\r\n        magFed(_newval,_oldval)\r\n        {\r\n            if(_newval!=_oldval)\r\n            {\r\n                this.suppressAlerts=true;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_beam-shots.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_beam-shots.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_beam-shots.vue?vue&type=template&id=0b5d0d13&\"\nimport script from \"./mek_beam-shots.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_beam-shots.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
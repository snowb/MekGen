{"version":3,"sources":["webpack:///./src/data_table_modules/mek_shield/mek_shield-class-data-module.js","webpack:///./src/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./node_modules/core-js/library/fn/json/stringify.js","webpack:///./src/data_table_modules/universal/servo_classes_data.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js"],"names":["class_data_table","data_cached","create_class_data_table","_type","type","undefined","type_multiplier","toLowerCase","servo_classes","map","_val","newelement","stopping_power","code","id","name","kills","cost","this","data_table_keys","cached_validate","partial_validate","class_validate","_data","has_feature","partial_has_feature","get_feature","partial_get_feature","default_data","JSON","parse","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","cleaned_feature","partial_cleaned_feature","_data_table","_validation_keys","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_1___default","length","valid","some","every","_keys","_key","_has_feature","found_feature","_table_val","_this","_validator","_get_feature","_default_data","_name","_pkey","_feature","data","key_list","update","alerts","json_data","push","core","__webpack_require__","$JSON","stringify","module","exports","it","apply","arguments","__webpack_exports__"],"mappings":"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","file":"js/mek_shield-class-data-module-legacy.102d1d9c.js","sourcesContent":["//data table module, raw data output for re-use in non-vue-component formats\r\nimport servo_classes from \"@/data_table_modules/universal/servo_classes_data\";\r\nimport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature} \r\n    from \"@/data_table_modules/universal/mek_partial-function-data-module\";\r\n\r\n//create new class_data_table\r\nlet class_data_table=[];\r\nlet data_cached=false;\r\nlet create_class_data_table=function(_type)\r\n{\r\n    let type=_type===undefined?\"standard\":_type;\r\n    let type_multiplier=1;//Standard\r\n    switch(type.toLowerCase())\r\n    {\r\n        case \"active\":\r\n            type_multiplier=1.5\r\n            break;\r\n        case \"reactive\":\r\n            type_multiplier=3;\r\n            break;\r\n    }\r\n\r\n    class_data_table=servo_classes.map(function(_val)\r\n    {//generate new class_data_table\r\n        let newelement=\r\n        {\r\n            stopping_power:_val.code+4,\r\n            code:_val.code,\r\n            id:_val.id,\r\n            name:_val.name,\r\n            kills:(_val.code+4)*5,\r\n            cost:(_val.code+4)*type_multiplier\r\n        };\r\n        return newelement;\r\n    },this);\r\n    data_cached=false;\r\n};\r\ncreate_class_data_table(\"standard\");\r\nlet data_table_keys=[\"stopping_power\",\"code\",\"id\",\"name\",\"kills\",\"cost\"];\r\n\r\nlet cached_validate=partial_validate(class_data_table, data_table_keys);\r\n//data validator for create_class_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet class_validate=(_data)=>\r\n{//must run uniquely every time to ensure updated class_data_table\r\n    if(data_cached)\r\n    {\r\n        return cached_validate(_data);\r\n    }\r\n    data_cached=true;\r\n    cached_validate=partial_validate(class_data_table, data_table_keys);\r\n    return cached_validate(_data);\r\n}\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=partial_has_feature(class_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_feature=partial_get_feature(class_data_table, has_feature);\r\n\r\nlet default_data=JSON.parse(JSON.stringify(get_feature(\"code\",1)));\r\n//\r\n//completed function for returning cleaed data\r\nlet cleaned_feature=\r\n    partial_cleaned_feature(class_validate, has_feature, get_feature, default_data, \"Mek_Shield-Class\");\r\n\r\nexport {class_data_table, class_validate, has_feature, get_feature, cleaned_feature, create_class_data_table};\r\n","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return _validation_keys.every((_keys)=>\r\n        {//return true if all validation_keys in _data match an element in _data_table\r\n            return _data[_keys]==_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","export default\r\n    [\r\n        {code:1,id:\"SL\",name:\"Superlight\"},\r\n        {code:2,id:\"LW\",name:\"Lightweight\"},\r\n        {code:3,id:\"STR\",name:\"Striker\"},\r\n        {code:4,id:\"MS\",name:\"Medium Striker\"},\r\n        {code:5,id:\"HS\",name:\"Heavy Striker\"},\r\n        {code:6,id:\"MW\",name:\"Mediumweight\"},\r\n        {code:7,id:\"LH\",name:\"Light Heavy\"},\r\n        {code:8,id:\"MH\",name:\"Medium Heavy\"},\r\n        {code:9,id:\"AH\",name:\"Armored Heavy\"},\r\n        {code:10,id:\"SH\",name:\"Super Heavy\"},\r\n        {code:11,id:\"MgH\",name:\"Mega Heavy\"}\r\n    ];\r\n\r\n","module.exports = require(\"core-js/library/fn/json/stringify\");"],"sourceRoot":""}
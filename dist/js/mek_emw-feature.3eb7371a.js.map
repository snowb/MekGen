{"version":3,"sources":["webpack:///./src/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./src/design_components/mek_emw/subcomponents/mek_emw-feature.vue?8179","webpack:///src/design_components/mek_emw/subcomponents/mek_emw-feature.vue","webpack:///./src/design_components/mek_emw/subcomponents/mek_emw-feature.vue?e15c","webpack:///./src/design_components/mek_emw/subcomponents/mek_emw-feature.vue","webpack:///./src/mixins/alerts_mixin.js","webpack:///./src/data_table_modules/mek_emw/mek_emw-feature-data-module.js"],"names":["__webpack_require__","d","__webpack_exports__","partial_validate","partial_has_feature","partial_get_feature","partial_cleaned_feature","_data_table","_validation_keys","_data","Array","isArray","length","valid","some","_val","every","_keys","_key","undefined","_has_feature","found_feature","_table_val","_validator","_get_feature","_default_data","_name","_pkey","_feature","data","key_list","update","alerts","json_data","JSON","stringify","parse","push","render","_vm","this","_h","$createElement","_c","_self","attrs","items","feature_table","pkey","selected-keys","selected_keys","headers","feature","cost","name","flow","show-headers","format","on","update-selected-data","select_feature","staticRenderFns","mek_emw_featurevue_type_script_lang_js_","props","mixins","alerts_mixin","components","mek-sub-component-table","e","then","bind","obj","suppressAlerts","selected_feature_array","methods","_selected_feature","new_selected_feature_array","toggleFeature","cleaned_data","Object","mek_emw_feature_data_module","cleaned_array","forEach","_alert","addAlert","publishAlerts","$set","$emit","[object Object]","_feature_array","feature_array","remove_feature","return_array","filter","computed","infiniteUse","featureArray","watch","_newval","_oldval","subcomponents_mek_emw_featurevue_type_script_lang_js_","component","componentNormalizer","_alert_string","$store","commit","r","feature_data_table","feature_validate","has_feature","get_feature","exclusive_beam","cleaned_feature","filter_data_table","_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__","raw_feature_data_table","exclusive_beam_shield","_el","data_table_keys","data_cached","_infinite_use","cached_validate","is_exclusive_feature","_exclusive_target","_pkey_value","exclusive_target_array","toLowerCase","hasExclusiveBeam","error","temp_selected_feature_array","reduceRight","_cleaned_array","clean_feature","isBeam","includes","reverse"],"mappings":"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","file":"js/mek_emw-feature.3eb7371a.js","sourcesContent":["//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return _validation_keys.every((_keys)=>\r\n        {//return true if all validation_keys in _data match an element in _data_table\r\n            return _data[_keys]==_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.feature_table,\"pkey\":_vm.pkey,\"selected-keys\":_vm.selected_keys,\"headers\":{feature:'Feature',cost:'Cost'},\"name\":\"Features\",\"flow\":\"pkey-col\",\"show-headers\":true,\"format\":{cost:'multiplier'}},on:{\"update-selected-data\":_vm.select_feature}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <mek-sub-component-table\r\n        :items=\"feature_table\" :pkey=\"pkey\" :selected-keys=\"selected_keys\"\r\n        :headers=\"{feature:'Feature',cost:'Cost'}\"\r\n        name=\"Features\" flow=\"pkey-col\" :show-headers=\"true\"\r\n        :format=\"{cost:'multiplier'}\"\r\n        @update-selected-data=\"select_feature\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport alerts_mixin from \"@/mixins/alerts_mixin\";\r\n\r\nimport {feature_data_table, cleaned_feature, filter_data_table}\r\n    from \"@/data_table_modules/mek_emw/mek_emw-feature-data-module\";\r\nexport default \r\n{\r\n    name:\"mek_melee_feature\",\r\n    props:[\"featureArray\",\"infiniteUse\"],\r\n    mixins:[alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"@/design_components/universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.alerts=[];\r\n        obj.pkey=\"feature\";\r\n        obj.suppressAlerts=false;\r\n        obj.selected_feature_array=[];\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_feature:function(_selected_feature)\r\n        {\r\n            this.suppressAlerts=true;//suppress alerts, for exclusive switching\r\n            let new_selected_feature_array=this.toggleFeature(this.selected_feature_array,_selected_feature);\r\n            let cleaned_data=cleaned_feature(new_selected_feature_array, this.pkey);\r\n            new_selected_feature_array=cleaned_data.cleaned_array;\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            this.publishAlerts();\r\n            this.$set(this,\"selected_feature_array\",new_selected_feature_array);\r\n            this.$emit(\"update-feature\",new_selected_feature_array);\r\n            this.suppressAlerts=false;\r\n        },\r\n        toggleFeature(_feature_array,_feature)\r\n        {//consider moving to universal data module functions thing\r\n            let feature_array=JSON.parse(JSON.stringify(_feature_array));\r\n            \r\n            let remove_feature=feature_array.some((_val)=>\r\n            {//if _feature matches already existing feature, flag for deletion\r\n                return _val[this.pkey]==_feature[this.pkey];\r\n            },this);\r\n\r\n            if(remove_feature)\r\n            {//if flagged for removal, filter out\r\n                let return_array=feature_array.filter((_val)=>\r\n                {\r\n                    return _val[this.pkey]!=_feature[this.pkey];\r\n                },this);\r\n                return return_array;\r\n            }\r\n            feature_array.push(_feature);\r\n            //otherwise add feature and return\r\n            return feature_array;\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        feature_table()\r\n        {\r\n            filter_data_table(this.infiniteUse);\r\n            return feature_data_table;\r\n        },\r\n        selected_keys()\r\n        {\r\n            this.infiniteUse;\r\n            let cleaned_data=cleaned_feature(this.featureArray,this.pkey);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            \r\n            if(cleaned_data.update)\r\n            {\r\n                this.$emit(\"alert-generated\",true);\r\n                this.$emit(\"update-feature\",cleaned_data.cleaned_array);\r\n            }\r\n            this.$set(this,\"selected_feature_array\",cleaned_data.cleaned_array);\r\n            return cleaned_data.key_list;\r\n        },\r\n    },\r\n    watch:\r\n    {\r\n        \"infiniteUse\":function(_newval,_oldval)\r\n        {//must track changes in blastRadius to disable alerts for removed features on cleaned_feat\r\n            if(_newval!=_oldval)\r\n            {\r\n                this.suppressAlerts=true;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_emw-feature.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_emw-feature.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_emw-feature.vue?vue&type=template&id=a2b33a96&\"\nimport script from \"./mek_emw-feature.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_emw-feature.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature} \r\n    from \"@/data_table_modules/universal/mek_partial-function-data-module\";\r\n\r\n//create new feature_data_table\r\nlet raw_feature_data_table=\r\n[\r\n    {feature:\"Rechargeable\",cost:1.1},\r\n    {feature:\"Thrown\",cost:1.2},\r\n    {feature:\"Quick\",cost:2},\r\n    {feature:\"Hyper\",cost:7.5},\r\n    {feature:\"Beam Shield\",cost:1.5,exclusive_beam_shield:true},\r\n    {feature:\"Variable Beam Shield\",cost:2,exclusive_beam_shield:true}\r\n];\r\nlet exclusive_beam=raw_feature_data_table.filter((_el)=>{return typeof _el.exclusive_beam_shield!==\"undefined\";});\r\nlet data_table_keys=[\"feature\",\"cost\",\"exclusive_beam_shield\"];\r\n\r\nlet feature_data_table=raw_feature_data_table;\r\nlet data_cached=false;\r\n\r\nlet filter_data_table=(_infinite_use)=>\r\n{\r\n    data_cached=false;\r\n    if(_infinite_use)\r\n    {\r\n        feature_data_table=raw_feature_data_table.filter((_val)=>\r\n        {\r\n            return _val.feature!=\"Rechargeable\";\r\n        });\r\n    }\r\n    else\r\n    {\r\n        feature_data_table=raw_feature_data_table;\r\n    }\r\n};\r\n\r\nlet cached_validate=partial_validate(raw_feature_data_table, data_table_keys);\r\n//data validator for feature_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet feature_validate=(_data)=>\r\n{\r\n    if(data_cached)\r\n    {\r\n        return cached_validate(_data);\r\n    }\r\n    data_cached=true;\r\n    cached_validate=partial_validate(feature_data_table, data_table_keys);\r\n    return cached_validate(_data);\r\n};\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=(_pkey,_data)=>\r\n{\r\n    return partial_has_feature(feature_data_table)(_pkey,_data);\r\n};\r\n\r\n//completed function for returning matching data\r\nlet get_feature=(_pkey,_data)=>\r\n{\r\n    return partial_get_feature(feature_data_table, has_feature)(_pkey,_data);\r\n};\r\n\r\nlet is_exclusive_feature=function(_exclusive_target, _pkey, _pkey_value)\r\n{\r\n    let exclusive_target_array=null;\r\n    switch(_exclusive_target.toLowerCase())\r\n    {\r\n        case \"exclusive_beam\":\r\n            exclusive_target_array=exclusive_beam;\r\n            break;\r\n    }\r\n    if(exclusive_target_array===null)\r\n    {\r\n        return false;\r\n    }\r\n    return exclusive_target_array.some((_val)=>\r\n    {\r\n        return _val[_pkey]==_pkey_value;\r\n    });\r\n};\r\n\r\nlet cleaned_feature=function(_feature_array, _pkey)\r\n{//takes feature_array, returns cleaned array removing multiple exclusive values\r\n    let hasExclusiveBeam=false;\r\n    let update=false;\r\n    let key_list=[];\r\n    let alerts=[];\r\n\r\n    if(_feature_array===undefined || _pkey===undefined)\r\n    {\r\n        alerts.push(\"Mek_EMW-Feature: \");\r\n        let error=_feature_array===undefined\r\n            ? \"**** Missing feature array. Returning blank. ****\"\r\n            : \"**** No primary key provided. Returning blank. ****\";\r\n        alerts.push(error);\r\n        return {cleaned_array:[],update:true,key_list:[],alerts:alerts};\r\n    }\r\n\r\n    let temp_selected_feature_array=_feature_array.reduceRight((_cleaned_array, _val)=>\r\n    {\r\n        if(_val[_pkey]===undefined)\r\n        {//if feature with pkey doesn't exist in data table, ignore\r\n            alerts.push(\"Mek_EMW-Feature: \"+JSON.stringify(_val));\r\n            alerts.push(\"**** Missing primary key. Ignoring. ****\");\r\n            return _cleaned_array;\r\n        }\r\n        let clean_feature=_val;\r\n        if(!feature_validate(_val))\r\n        {//invalid data\r\n            alerts.push(\"Mek_EMW-Feature: \"+JSON.stringify(_val))\r\n            alerts.push(\"**** Invalid data, attempting to reset. ****\")\r\n            clean_feature=get_feature(_pkey,_val[_pkey]);\r\n            _val=clean_feature;//replace current value with correct value\r\n            update=true;\r\n            //attempt to set to corrected feature\r\n        }\r\n        if(clean_feature===null)\r\n        {//no matching feature\r\n            alerts.push(\"**** Unable to reset. No matching data. ****\")\r\n            update=true;\r\n            return _cleaned_array;\r\n            //ignore element\r\n        }\r\n        let isBeam=is_exclusive_feature(\"exclusive_beam\",_pkey,_val[_pkey]);\r\n\r\n        if(isBeam && !hasExclusiveBeam)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusiveBeam=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isBeam && hasExclusiveBeam)\r\n        {\r\n            alerts.push(\"Mek_EMW-Feature: \"+_val);\r\n            alerts.push(\"**** Duplicate exclusive EMW data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n\r\n        if(!key_list.includes(_val[_pkey]))\r\n        {\r\n            _cleaned_array.push(_val);\r\n            key_list.push(_val[_pkey]);\r\n        }\r\n        return _cleaned_array;\r\n    },[]);\r\n    temp_selected_feature_array.reverse();\r\n\r\n    return {cleaned_array:temp_selected_feature_array,update:update,key_list:key_list,alerts:alerts};\r\n    //returns an object with the pruned feature array, whether it was updated, and the key_list\r\n}\r\n\r\nexport {feature_data_table, feature_validate, has_feature, get_feature, exclusive_beam, cleaned_feature, filter_data_table};\r\n"],"sourceRoot":""}
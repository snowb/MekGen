{"version":3,"sources":["webpack:///./src/data_table_modules/mek_emw/mek_emw-accuracy-data-module.js","webpack:///./src/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./node_modules/core-js/library/fn/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js"],"names":["__webpack_require__","r","__webpack_exports__","d","accuracy_data_table","accuracy_validate","has_feature","get_feature","cleaned_feature","_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__","accuracy","cost","defense_ability","data_table_keys","default_data","partial_validate","partial_has_feature","partial_get_feature","partial_cleaned_feature","_data_table","_validation_keys","_data","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_1___default","length","valid","some","_val","every","_keys","_key","undefined","_has_feature","found_feature","_table_val","_this","_validator","_get_feature","_default_data","_name","_pkey","_feature","data","key_list","update","alerts","json_data","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","JSON","parse","push","core","$JSON","stringify","module","exports","it","apply","arguments"],"mappings":"gIAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,wCAAAE,IAAAJ,EAAAG,EAAAD,EAAA,sCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAAN,EAAAG,EAAAD,EAAA,gCAAAK,IAAAP,EAAAG,EAAAD,EAAA,oCAAAM,IAAA,IAAAC,EAAAT,EAAA,QAKII,EACJ,CACI,CAACM,UAAU,EAAEC,KAAK,GAAIC,iBAAiB,GACvC,CAACF,UAAU,EAAEC,KAAK,GAAIC,iBAAiB,GACvC,CAACF,SAAS,EAAEC,KAAK,GAAIC,iBAAiB,GACtC,CAACF,SAAS,EAAEC,KAAK,EAAEC,iBAAiB,GACpC,CAACF,SAAS,EAAEC,KAAK,IAAIC,gBAAgB,GACrC,CAACF,SAAS,EAAEC,KAAK,EAAEC,gBAAgB,IAEnCC,EAAgB,CAAC,WAAW,OAAO,mBACnCC,EAAa,CAACJ,SAAS,EAAEC,KAAK,EAAEC,iBAAiB,GAIjDP,EAAkBU,eAAiBX,EAAqBS,GAGxDP,EAAYU,eAAoBZ,GAGhCG,EAAYU,eAAoBb,EAAqBE,GAGrDE,EACAU,eAAwBb,EAAmBC,EAAaC,EAAaO,EAAc,0RCtBnFC,EAAiB,SAACI,EAAYC,GAAb,OAAgC,SAACC,GAIlD,GAAkB,qBAARA,IAAwBC,IAAcF,IAA8C,GAAzBA,EAAiBG,OAElF,OAAO,EAEX,IAAIC,EAAML,EAAYM,KAAK,SAACC,GAExB,OAAON,EAAiBO,MAAM,SAACC,GAE3B,OAAOP,EAAMO,IAAQF,EAAKE,OAGlC,OAAOJ,IAKPR,EAAoB,SAACG,GAAD,OAAe,SAACU,EAAMH,GAE1C,OAAOP,EAAYM,KAAK,SAACJ,GAErB,YAAqBS,IAAdT,EAAMQ,IAAqBR,EAAMQ,IAAOH,MAQnDT,EAAoB,SAACE,EAAaY,GAAd,OAA6B,SAACF,EAAMH,GAExD,IAAIM,EAAc,KAYlB,OAXGD,EAAaF,EAAKH,IAEjBP,EAAYM,KAAK,SAACQ,GAEd,GAAGA,EAAWJ,IAAOH,EAGjB,OADAM,EAAcC,GACP,GAEbC,GAECF,IAGPd,EAAwB,SAACiB,EAAYJ,EAAcK,EAAcC,EAAeC,GAAxD,OAAgE,SAACC,EAAOC,GAEhG,IAAIC,OAAKX,EACLY,EAAS,GACTC,GAAO,EACPC,EAAO,GACPC,EAAUC,IAAeN,GAwB7B,YAtBcV,IAAXU,GAAyBT,EAAaQ,EAAMC,EAASD,IAQ/CJ,EAAWK,IAUhBC,EAAKM,KAAKC,MAAMF,IAAeN,IAC/BE,EAAS,CAACD,EAAKF,IACfI,GAAO,IAVPF,EAAKM,KAAKC,MAAMF,IAAeV,EAAaG,EAAMC,EAASD,MAC3DG,EAAS,CAACD,EAAKF,IACfI,GAAO,EACPC,EAAOK,KAAKX,EAAM,KAAKO,GACvBD,EAAOK,KAAK,uCAZZR,EAAKJ,EACLK,EAAS,CAACD,EAAKF,IACfI,GAAO,EACPC,EAAOK,KAAKX,EAAM,KAAKO,GACvBD,EAAOK,KAAK,iDAgBT,CAACR,KAAKA,EAAMC,SAASA,EAAUC,OAAOA,EAAQC,OAAOA,2BCtFhE,IAAAM,EAAWlD,EAAQ,QACnBmD,EAAAD,EAAAH,OAAAG,EAAAH,KAAA,CAAuCK,UAAAL,KAAAK,YACvCC,EAAAC,QAAA,SAAAC,GACA,OAAAJ,EAAAC,UAAAI,MAAAL,EAAAM,kCCHAJ,EAAAC,QAAiBtD,EAAQ","file":"js/mek_emw-accuracy-data-module-legacy.c9e513e4.js","sourcesContent":["//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature} \r\n    from \"@/data_table_modules/universal/mek_partial-function-data-module\";\r\n\r\n//create new accuracy_data_table\r\nlet accuracy_data_table=\r\n[\r\n    {accuracy:-2,cost:0.6,defense_ability:-4},\r\n    {accuracy:-1,cost:0.8,defense_ability:-3},\r\n    {accuracy:0,cost:0.9,defense_ability:-2},\r\n    {accuracy:1,cost:1,defense_ability:-1},\r\n    {accuracy:2,cost:1.5,defense_ability:0},\r\n    {accuracy:3,cost:2,defense_ability:1}\r\n];\r\nlet data_table_keys=[\"accuracy\",\"cost\",\"defense_ability\"];\r\nlet default_data={accuracy:1,cost:1,defense_ability:-1};\r\n\r\n//data validator for accuracy_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet accuracy_validate=partial_validate(accuracy_data_table, data_table_keys);\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=partial_has_feature(accuracy_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_feature=partial_get_feature(accuracy_data_table, has_feature);\r\n\r\n//completed function for returning cleaed data\r\nlet cleaned_feature=\r\n    partial_cleaned_feature(accuracy_validate, has_feature, get_feature, default_data, \"Mek_EMW-Accuracy\");\r\n\r\nexport {accuracy_data_table, accuracy_validate, has_feature, get_feature, cleaned_feature};\r\n","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return _validation_keys.every((_keys)=>\r\n        {//return true if all validation_keys in _data match an element in _data_table\r\n            return _data[_keys]==_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","module.exports = require(\"core-js/library/fn/json/stringify\");"],"sourceRoot":""}
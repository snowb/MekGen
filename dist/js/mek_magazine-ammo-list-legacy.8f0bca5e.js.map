{"version":3,"sources":["webpack:///./src/design_components/mek_magazine/subcomponents/mek_magazine-ammo-list.vue?cce8","webpack:///src/design_components/mek_magazine/subcomponents/mek_magazine-ammo-list.vue","webpack:///./src/design_components/mek_magazine/subcomponents/mek_magazine-ammo-list.vue?a109","webpack:///./src/design_components/mek_magazine/subcomponents/mek_magazine-ammo-list.vue","webpack:///./src/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./src/mixins/alerts_mixin.js","webpack:///./src/data_table_modules/mek_magazine/mek_ammo-list-data-module.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","items","filteredAmmoArray","selected-keys","selected_keys","pkey","headers","type","cost","effect","show-headers","format","name","flow","on","update-selected-data","select_ammo","staticRenderFns","mek_magazine_ammo_listvue_type_script_lang_js_","props","mixins","alerts_mixin","components","mek-sub-component-table","__webpack_require__","e","then","bind","data","obj","selected_ammo_array","alerts","suppressAlerts","methods","_selected_ammo","_this","new_selected_ammo_array","toggleFeature","cleaned_data","Object","mek_ammo_list_data_module","cleaned_array","length","forEach","_alert","addAlert","publishAlerts","$set","$emit","_feature_array","_feature","_this2","feature_array","JSON","parse","stringify","remove_feature","some","_val","filter","push","computed","hasBlast","_this3","ammoArray","update","key_list","watch","_newval","_oldval","subcomponents_mek_magazine_ammo_listvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","partial_validate","_data_table","_validation_keys","_data","Array","isArray","valid","every","_keys","partial_has_feature","_key","undefined","partial_get_feature","_has_feature","found_feature","_table_val","partial_cleaned_feature","_validator","_get_feature","_default_data","_name","_pkey","json_data","_alert_string","$store","commit","raw_feature_data_table","shock_exclusive","blast_exclusive","_el","data_table_keys","default_data","feature_data_table","data_cached","filter_data_table","_has_blast_radius","cached_validate","feature_validate","has_feature","get_feature","is_exclusive_feature","_exclusive_target","_pkey_value","exclusive_target_array","toLowerCase","cleaned_feature","hasExclusiveShock","hasExclusiveBlast","error","temp_selected_feature_array","reduceRight","_cleaned_array","clean_feature","isShock","isBlast","includes","reverse"],"mappings":"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","file":"js/mek_magazine-ammo-list-legacy.8f0bca5e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.filteredAmmoArray,\"selected-keys\":_vm.selected_keys,\"pkey\":_vm.pkey,\"headers\":{type:'Type',cost:'Cost',effect:'Effect'},\"show-headers\":true,\"format\":{cost:'multiplier'},\"name\":\"Ammo Table\",\"flow\":\"pkey-col\"},on:{\"update-selected-data\":_vm.select_ammo}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <mek-sub-component-table\r\n        :items=\"filteredAmmoArray\" :selected-keys=\"selected_keys\" :pkey=\"pkey\"\r\n        :headers=\"{type:'Type',cost:'Cost',effect:'Effect'}\" :show-headers=\"true\"\r\n        :format=\"{cost:'multiplier'}\" name=\"Ammo Table\" flow=\"pkey-col\"\r\n        @update-selected-data=\"select_ammo\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport alerts_mixin from \"@/mixins/alerts_mixin\";\r\n\r\nimport {feature_data_table, cleaned_feature, filter_data_table} \r\n    from \"@/data_table_modules/mek_magazine/mek_ammo-list-data-module.js\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_magazine_ammo_list\",\r\n    props:[\"ammoArray\",\"hasBlast\"],\r\n    mixins:[alerts_mixin],\r\n    components:\r\n    {\r\n         \"mek-sub-component-table\":()=>import(/* webpackChunkName: \"mek_sub-component-table\" */\"@/app_components/universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.selected_ammo_array=[];\r\n        obj.pkey=\"type\";\r\n        obj.alerts=[];\r\n        obj.suppressAlerts=false;\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_ammo:function(_selected_ammo)\r\n        {//refactor to external ammo array cleaner\r\n            this.suppressAlerts=true;//suppress alerts, for exclusive switching\r\n            let new_selected_ammo_array=this.toggleFeature(this.selected_ammo_array,_selected_ammo);\r\n            let cleaned_data=cleaned_feature(new_selected_ammo_array, this.pkey);\r\n            new_selected_ammo_array=cleaned_data.cleaned_array;\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            this.$set(this,\"selected_ammo_array\",new_selected_ammo_array);\r\n            this.$emit(\"update-ammo\",new_selected_ammo_array);\r\n            this.suppressAlerts=false;\r\n        },\r\n        toggleFeature(_feature_array,_feature)\r\n        {\r\n            let feature_array=JSON.parse(JSON.stringify(_feature_array));\r\n            \r\n            let remove_feature=feature_array.some((_val)=>\r\n            {//if _feature matches already existing feature, flag for deletion\r\n                return _val[this.pkey]==_feature[this.pkey];\r\n            },this);\r\n\r\n            if(remove_feature)\r\n            {//if flagged for removal, filter out\r\n                return feature_array.filter((_val)=>\r\n                {\r\n                    return _val[this.pkey]!=_feature[this.pkey];\r\n                },this);\r\n            }\r\n            feature_array.push(_feature);\r\n            //otherwise add feature and return\r\n            return feature_array;\r\n        }\r\n    },\r\n    computed:\r\n    {\r\n        filteredAmmoArray()\r\n        {\r\n            filter_data_table(this.hasBlast);\r\n            return feature_data_table;\r\n        },\r\n        selected_keys()\r\n        {\r\n            let cleaned_data=cleaned_feature(this.ammoArray,this.pkey);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.$emit(\"alert-generated\",true);\r\n                this.$emit(\"update-ammo\",cleaned_data.cleaned_array);\r\n            }\r\n            this.$set(this,\"selected_ammo_array\",cleaned_data.cleaned_array);\r\n            return cleaned_data.key_list;\r\n        }\r\n    },\r\n    watch:\r\n    {\r\n        \"hasBlast\":function(_newval,_oldval)\r\n        {//must track changes in hasBlast to disable alerts for removed features on cleaned_feat\r\n            if(_newval!=_oldval)\r\n            {\r\n                this.suppressAlerts=true;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_magazine-ammo-list.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_magazine-ammo-list.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_magazine-ammo-list.vue?vue&type=template&id=ba39dc8a&scoped=true&\"\nimport script from \"./mek_magazine-ammo-list.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_magazine-ammo-list.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ba39dc8a\",\n  null\n  \n)\n\nexport default component.exports","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return _validation_keys.every((_keys)=>\r\n        {//return true if all validation_keys in _data match an element in _data_table\r\n            return _data[_keys]==_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature} \r\n    from \"@/data_table_modules/universal/mek_partial-function-data-module\";\r\n\r\n//create new ammo_data_table\r\nlet raw_feature_data_table=\r\n[\r\n    {type:\"Paintball\",cost:0.5,effect:\"Practice Rounds\"},\r\n    {type:\"Foam\",cost:0.5,effect:\"Firefighting\"},\r\n    {type:\"High-Ex\",cost:1,effect:\"Standard\"},\r\n    {type:\"Tracer\",cost:3,effect:\"+1 to WA\"},\r\n    {type:\"Kinetic\",cost:3,effect:\"More Knockback\"},\r\n    {type:\"Tangler\",cost:3,effect:\"Grappling Attack\"},\r\n    {type:\"Armor Piercing\",cost:4,effect:\"1/2 SP vs Armor\"},\r\n    {type:\"Disruptor\",cost:4,effect:\"1/2 SP vs Energy\"},\r\n    {type:\"Incendiary\",cost:4,effect:\"Flamethrower\"},\r\n    {type:\"Shock (only)\",cost:4,effect:\"Stun Effect\",shock_exclusive:true},\r\n    {type:\"Shock (add)\",cost:6,effect:\"Stun & Damage\",shock_exclusive:true},\r\n    {type:\"Scattershot\",cost:5,effect:\"Shotgun Effect\"},\r\n    {type:\"Blast I\",cost:6,effect:\"1-Hex Radius\",blast_exclusive:true},\r\n    {type:\"Blast II\",cost:8,effect:\"2-Hex Radius\",blast_exclusive:true},\r\n    {type:\"Blast III\",cost:10,effect:\"3-Hex Radius\",blast_exclusive:true},\r\n    {type:\"Blast IV\",cost:12,effect:\"4-Hex Radius\",blast_exclusive:true},\r\n    {type:\"Blast V\",cost:14,effect:\"5-Hex Radius\",blast_exclusive:true},\r\n    {type:\"Nuclear\",cost:1000,effect:\"Atomic Ammo\"},\r\n];\r\nlet shock_exclusive=raw_feature_data_table.filter((_el)=>{return typeof _el.shock_exclusive!==\"undefined\";});\r\nlet blast_exclusive=raw_feature_data_table.filter((_el)=>{return typeof _el.blast_exclusive!==\"undefined\";});\r\nlet data_table_keys=[\"type\",\"cost\",\"effect\",\"shock_exclusive\",\"blast_exclusive\"];\r\nlet default_data={type:\"High-Ex\",cost:1,effect:\"Standard\"};\r\n\r\nlet feature_data_table=raw_feature_data_table;\r\nlet data_cached=false;\r\n\r\nlet filter_data_table=(_has_blast_radius)=>\r\n{\r\n    data_cached=false;\r\n    if(!_has_blast_radius)\r\n    {\r\n        feature_data_table=raw_feature_data_table.filter((_val)=>\r\n        {\r\n            return _val.type!=\"Nuclear\";\r\n        });\r\n    }\r\n    else\r\n    {\r\n        feature_data_table=raw_feature_data_table;\r\n    }\r\n};\r\nlet cached_validate=partial_validate(raw_feature_data_table, data_table_keys);\r\n//data validator for feature_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet feature_validate=(_data)=>\r\n{\r\n    if(data_cached)\r\n    {\r\n        return cached_validate(_data);\r\n    }\r\n    data_cached=true;\r\n    cached_validate=partial_validate(feature_data_table, data_table_keys);\r\n    return cached_validate(_data);\r\n};\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=(_pkey,_data)=>\r\n{\r\n    return partial_has_feature(feature_data_table)(_pkey,_data);\r\n};\r\n\r\n//completed function for returning matching data\r\nlet get_feature=(_pkey,_data)=>\r\n{\r\n    return partial_get_feature(feature_data_table, has_feature)(_pkey,_data);\r\n};\r\n\r\nlet is_exclusive_feature=function(_exclusive_target, _pkey, _pkey_value)\r\n{\r\n    let exclusive_target_array=null;\r\n    switch(_exclusive_target.toLowerCase())\r\n    {\r\n        case \"shock_exclusive\":\r\n            exclusive_target_array=shock_exclusive;\r\n            break;\r\n        case \"blast_exclusive\":\r\n            exclusive_target_array=blast_exclusive;\r\n            break;\r\n    }\r\n    if(exclusive_target_array===null)\r\n    {\r\n        return false;\r\n    }\r\n    return exclusive_target_array.some((_val)=>\r\n    {\r\n        return _val[_pkey]==_pkey_value;\r\n    });\r\n};\r\n\r\n/*** \r\n * \r\n * create cleaned_feat function for features\r\n * \r\n *  ***/\r\nlet cleaned_feature=function(_feature_array, _pkey)\r\n{//takes feature_array, returns cleaned array removing multiple exclusive values\r\n    let hasExclusiveShock=false;\r\n    let hasExclusiveBlast=false;\r\n    let update=false;\r\n    let key_list=[];\r\n    let alerts=[];\r\n\r\n    if(_feature_array===undefined || _pkey===undefined)\r\n    {\r\n        alerts.push(\"Mek_Magazine-Ammo-List: \");\r\n        let error=_feature_array===undefined\r\n            ? \"**** Missing feature array. Returning default. ****\"\r\n            : \"**** No primary key provided. Returning default. ****\";\r\n        alerts.push(error);\r\n        return {cleaned_array:[default_data],update:true,key_list:[\"High-Ex\"],alerts:alerts};\r\n    }\r\n\r\n    let temp_selected_feature_array=_feature_array.reduceRight((_cleaned_array, _val)=>\r\n    {\r\n        if(_val[_pkey]===undefined)\r\n        {//if feature with pkey doesn't exist in data table, ignore\r\n            alerts.push(\"Mek_Magazine-Ammo-List: \"+JSON.stringify(_val));\r\n            alerts.push(\"**** Missing primary key. Ignoring. ****\");\r\n            return _cleaned_array;\r\n        }\r\n        let clean_feature=_val;\r\n        if(!feature_validate(_val))\r\n        {//invalid data\r\n            alerts.push(\"Mek_Magazine-Ammo-List: \"+JSON.stringify(_val))\r\n            alerts.push(\"**** Invalid data, attempting to reset. ****\")\r\n            clean_feature=get_feature(_pkey,_val[_pkey]);\r\n            _val=clean_feature;//replace current value with correct value\r\n            update=true;\r\n            //attempt to set to corrected feature\r\n        }\r\n        if(clean_feature===null)\r\n        {//no matching feature\r\n            alerts.push(\"**** Unable to reset. No matching data. ****\")\r\n            update=true;\r\n            return _cleaned_array;\r\n            //ignore element\r\n        }\r\n        let isShock=is_exclusive_feature(\"shock_exclusive\",_pkey,_val[_pkey]);\r\n        let isBlast=is_exclusive_feature(\"blast_exclusive\",_pkey,_val[_pkey]);\r\n\r\n        if(isShock && !hasExclusiveShock)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusiveShock=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isShock && hasExclusiveShock)\r\n        {\r\n            alerts.push(\"Mek_Magazine-Ammo-List: \"+_val);\r\n            alerts.push(\"**** Duplicate exclusive shock data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n\r\n        if(isBlast && !hasExclusiveBlast)\r\n        {\r\n            _cleaned_array.push(_val);\r\n            hasExclusiveBlast=true;\r\n            key_list.push(_val[_pkey]);\r\n            return _cleaned_array;\r\n        }\r\n        else if(isBlast && hasExclusiveBlast)\r\n        {\r\n            alerts.push(\"Mek_Magazine-Ammo-List: \"+_val);\r\n            alerts.push(\"**** Duplicate exclusive blast radius data. Ignoring. ****\");\r\n            update=true;\r\n            return _cleaned_array;\r\n        }\r\n\r\n        if(!key_list.includes(_val[_pkey]))\r\n        {\r\n            _cleaned_array.push(_val);\r\n            key_list.push(_val[_pkey]);\r\n        }\r\n        return _cleaned_array;\r\n    },[]);\r\n    temp_selected_feature_array=temp_selected_feature_array.filter((_val)=>\r\n    {\r\n        return _val[_pkey].toLowerCase()!=\"nuclear\" \r\n            || (hasExclusiveBlast && _val[_pkey].toLowerCase()==\"nuclear\");\r\n        //filter out nuclear if blast-radius isn't a feature\r\n    }).reverse();\r\n    if(temp_selected_feature_array.length==0)\r\n    {//empty, reset to default\r\n        temp_selected_feature_array=[JSON.parse(JSON.stringify(default_data))];\r\n        update=true;\r\n        key_list=[\"High-Ex\"];\r\n        alerts.push(\"Mek_Magazine-Ammo-List: \");\r\n        alerts.push(\"**** Reseting to default ****\");\r\n    }\r\n    return {cleaned_array:temp_selected_feature_array,update:update,key_list:key_list,alerts:alerts};\r\n    //returns an object with the pruned feature array, whether it was updated, and the key_list\r\n};\r\n\r\nexport {feature_data_table, feature_validate, has_feature, get_feature, shock_exclusive, blast_exclusive, cleaned_feature, filter_data_table};\r\n"],"sourceRoot":""}
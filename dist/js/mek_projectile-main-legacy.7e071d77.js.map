{"version":3,"sources":["webpack:///./src/components/mek_projectile/mek_projectile-main.vue?611e","webpack:///src/components/mek_projectile/mek_projectile-main.vue","webpack:///./src/components/mek_projectile/mek_projectile-main.vue?1cd6","webpack:///./src/components/mek_projectile/mek_projectile-main.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","width","attrs","new-component","newComponent","component-name","component_name","projectile_name","component-changed","component_changed","on","update-component-name","updateComponentName","damage","selected_damage","update-damage","updateDamage","accuracy","selected_accuracy","update-accuracy","updateAccuracy","burst-value","selected_burst_value","update-burst-value","updateBurstValue","multi-feed","selected_multi_feed","update-multi-feed","updateMultiFeed","align-self","range-mod","selected_range_mod","base-range","range","update-range-mod","updateRangeMod","feature-array","feature_array","burst_value","update-feature","updateFeature","space_efficiency","efficiencies","space","raw_space","update-efficiencies","updateEfficiencies","cols","rows","slot","_v","_s","damage_capacity","range_mod","max-width","margin-left","feature_list","space_cost","round","weight","cost","cost_multiplier","font-weight","save-reset-component","componentSaveReset","staticRenderFns","mek_projectile_mainvue_type_script_lang_js_","name","props","mixins","selected_item_mixin","utility_mixin","component_computed_mixin","component_methods_mixin","components","mek-projectile-damage","__webpack_require__","e","then","bind","mek-projectile-accuracy","mek-projectile-multi-feed","mek-projectile-range-mod","mek-projectile-burst-value","mek-projectile-feature","mek-space-efficiency","mek-component-name","mek-save-reset-component","mek-component-stats","data","obj","uuid","component_category","component_type","original_component","feeds","modifier","cost_multipliers","feature","multi_feed","methods","_name","_data","$set","_damage","_accuracy","_multi_feed","_burst_value","_range_mod","_featureArray","reduce","_multi","_val","_action","action","$store","commit","output_data","ingest_data","JSON","parse","feeds1","_this","return_data","create_uuid","stringify_default","final_damage","$nextTick","_data_object","_this2","alertMessage","universal_ingest_data","computed","subtotal_cost","length","replace","mek_projectile_mek_projectile_mainvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/mek_projectile-main-legacy.7e071d77.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"mek-inline-flex-col\",staticStyle:{\"width\":\"100%\"}},[_c('mek-component-name',{attrs:{\"new-component\":_vm.newComponent,\"component-name\":_vm.component_name||_vm.projectile_name,\"component-changed\":_vm.component_changed},on:{\"update-component-name\":_vm.updateComponentName}}),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-projectile-damage',{attrs:{\"damage\":_vm.selected_damage},on:{\"update-damage\":_vm.updateDamage}}),_c('mek-projectile-accuracy',{attrs:{\"accuracy\":_vm.selected_accuracy},on:{\"update-accuracy\":_vm.updateAccuracy}}),_c('mek-projectile-burst-value',{attrs:{\"burst-value\":_vm.selected_burst_value},on:{\"update-burst-value\":_vm.updateBurstValue}}),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('div',{staticClass:\"mek-inline-flex-col\"},[_c('mek-projectile-multi-feed',{attrs:{\"multi-feed\":_vm.selected_multi_feed},on:{\"update-multi-feed\":_vm.updateMultiFeed}})],1),_c('mek-projectile-range-mod',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"range-mod\":_vm.selected_range_mod,\"base-range\":_vm.selected_damage.range},on:{\"update-range-mod\":_vm.updateRangeMod}}),_c('mek-projectile-feature',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"feature-array\":_vm.feature_array,\"burst-value\":_vm.selected_burst_value.burst_value},on:{\"update-feature\":_vm.updateFeature}}),_c('mek-space-efficiency',{staticStyle:{\"align-self\":\"baseline\"},attrs:{\"space_efficiency\":_vm.efficiencies.space,\"raw_space\":_vm.raw_space},on:{\"update-efficiencies\":_vm.updateEfficiencies}})],1)],1),_c('div',{staticClass:\"mek-inline-flex-row\"},[_c('mek-component-stats',{attrs:{\"cols\":4,\"rows\":5}},[_c('div',{attrs:{\"slot\":\"col1-row1\"},slot:\"col1-row1\"},[_vm._v(\"Kills: \"+_vm._s(_vm.selected_damage.damage)+\" K\")]),_c('div',{attrs:{\"slot\":\"col1-row2\"},slot:\"col1-row2\"},[_vm._v(\"Damage Capacity: \"+_vm._s(_vm.damage_capacity)+\" K\")]),_c('div',{attrs:{\"slot\":\"col1-row3\"},slot:\"col1-row3\"},[_vm._v(\"Final Range: \"+_vm._s(_vm.selected_damage.range * _vm.selected_range_mod.range_mod))]),_c('div',{attrs:{\"slot\":\"col2-row1\"},slot:\"col2-row1\"},[_vm._v(\"Feature(s):\"),_c('div',{staticStyle:{\"max-width\":\"150px\",\"margin-left\":\"10px\"}},[_vm._v(_vm._s(_vm.feature_list))])]),_c('div',{attrs:{\"slot\":\"col3-row1\"},slot:\"col3-row1\"},[_vm._v(\"Base Space: \"+_vm._s(_vm.raw_space))]),_c('div',{attrs:{\"slot\":\"col3-row2\"},slot:\"col3-row2\"},[_vm._v(\"Space: \"+_vm._s(_vm.space_cost))]),_c('div',{attrs:{\"slot\":\"col3-row3\"},slot:\"col3-row3\"},[_vm._v(\"Weight: \"+_vm._s(_vm.round(_vm.weight,2))+\" tons\")]),_c('div',{attrs:{\"slot\":\"col3-row4\"},slot:\"col3-row4\"},[_vm._v(\" \")]),_c('div',{attrs:{\"slot\":\"col3-row5\"},slot:\"col3-row5\"},[_vm._v(\"Standard Ammo Cost: \"+_vm._s(_vm.round(_vm.cost*0.01,2))+\"/shot\")]),_c('div',{attrs:{\"slot\":\"col4-row1\"},slot:\"col4-row1\"},[_vm._v(\"Base Cost: \"+_vm._s(_vm.selected_damage.cost))]),_c('div',{attrs:{\"slot\":\"col4-row2\"},slot:\"col4-row2\"},[_vm._v(\"Multiplier: x\"+_vm._s(_vm.cost_multiplier))]),_c('div',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"slot\":\"col4-row3\"},slot:\"col4-row3\"},[_vm._v(\"Total Cost: \"+_vm._s(_vm.cost))])]),_c('mek-save-reset-component',{on:{\"save-reset-component\":_vm.componentSaveReset}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <span class=\"mek-inline-flex-col\" style=\"width:100%;\">\r\n        <mek-component-name :new-component=\"newComponent\" :component-name=\"component_name||projectile_name\"\r\n            :component-changed=\"component_changed\"\r\n            @update-component-name=\"updateComponentName\"\r\n        ></mek-component-name>\r\n        \r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-projectile-damage @update-damage=\"updateDamage\" :damage=\"selected_damage\"></mek-projectile-damage>\r\n            <mek-projectile-accuracy \r\n                @update-accuracy=\"updateAccuracy\" \r\n                :accuracy=\"selected_accuracy\"\r\n            ></mek-projectile-accuracy>\r\n            <mek-projectile-burst-value \r\n                    @update-burst-value=\"updateBurstValue\" \r\n                    :burst-value=\"selected_burst_value\"\r\n                ></mek-projectile-burst-value>\r\n            <div class=\"mek-inline-flex-row\">\r\n                <div class=\"mek-inline-flex-col\">\r\n                    <mek-projectile-multi-feed \r\n                        @update-multi-feed=\"updateMultiFeed\" \r\n                        :multi-feed=\"selected_multi_feed\"\r\n                    ></mek-projectile-multi-feed>\r\n                    <!-- not using for now\r\n                    mek-projectile-mount-type \r\n                        @update-mount-type=\"updateMountType\" \r\n                        :mount-type=\"selected_mount_type\"\r\n                    ></mek-projectile-mount-type-->\r\n                </div>\r\n                <mek-projectile-range-mod style=\"align-self:baseline;\"\r\n                    @update-range-mod=\"updateRangeMod\"\r\n                    :range-mod=\"selected_range_mod\"\r\n                    :base-range=\"selected_damage.range\"\r\n                ></mek-projectile-range-mod>\r\n                <mek-projectile-feature style=\"align-self:baseline;\"\r\n                        @update-feature=\"updateFeature\"\r\n                        :feature-array=\"feature_array\"\r\n                        :burst-value=\"selected_burst_value.burst_value\"\r\n                    ></mek-projectile-feature>\r\n                <mek-space-efficiency style=\"align-self:baseline;\"\r\n                    :space_efficiency=\"efficiencies.space\"\r\n                    :raw_space=\"raw_space\"\r\n                    @update-efficiencies=\"updateEfficiencies\"\r\n                ></mek-space-efficiency>\r\n            </div>                \r\n        </div>\r\n        <div class=\"mek-inline-flex-row\">\r\n            <mek-component-stats :cols=\"4\" :rows=\"5\">\r\n                <div slot=\"col1-row1\">Kills: {{selected_damage.damage}} K</div>\r\n                <div slot=\"col1-row2\">Damage Capacity: {{damage_capacity}} K</div>\r\n                <div slot=\"col1-row3\">Final Range: {{selected_damage.range * selected_range_mod.range_mod}}</div>\r\n\r\n                <div slot=\"col2-row1\">Feature(s):<div style=\"max-width:150px;margin-left:10px;\">{{feature_list}}</div></div>\r\n\r\n                <div slot=\"col3-row1\">Base Space: {{raw_space}}</div>\r\n                <div slot=\"col3-row2\">Space: {{space_cost}}</div>\r\n                <div slot=\"col3-row3\">Weight: {{round(weight,2)}} tons</div>\r\n                <div slot=\"col3-row4\">&nbsp;</div>\r\n                <div slot=\"col3-row5\">Standard Ammo Cost: {{round(cost*0.01,2)}}/shot</div>\r\n\r\n                <div slot=\"col4-row1\">Base Cost: {{selected_damage.cost}}</div>\r\n                <div slot=\"col4-row2\">Multiplier: x{{cost_multiplier}}</div>\r\n                <div slot=\"col4-row3\" style=\"font-weight:bold;\">Total Cost: {{cost}}</div>\r\n            </mek-component-stats>\r\n            <mek-save-reset-component @save-reset-component=\"componentSaveReset\"></mek-save-reset-component>\r\n        </div>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\nimport selected_item_mixin from \"../../mixins/selected_item_mixin\";\r\nimport utility_mixin from \"../../mixins/utility_mixin\";\r\nimport component_computed_mixin from \"../../mixins/component_computed_mixin\";\r\nimport component_methods_mixin from \"../../mixins/component_methods_mixin\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_projectile\",\r\n    props:[],\r\n    mixins:[selected_item_mixin, utility_mixin, component_computed_mixin,component_methods_mixin],\r\n    components:\r\n    {\r\n        \"mek-projectile-damage\":()=>import(\"./subcomponents/mek_projectile-damage.vue\"),\r\n        \"mek-projectile-accuracy\":()=>import(\"./subcomponents/mek_projectile-accuracy.vue\"),\r\n        \"mek-projectile-multi-feed\":()=>import(\"./subcomponents/mek_projectile-multi-feed.vue\"),\r\n        \"mek-projectile-range-mod\":()=>import(\"./subcomponents/mek_projectile-range-mod.vue\"),\r\n        \"mek-projectile-burst-value\":()=>import(\"./subcomponents/mek_projectile-burst-value.vue\"),\r\n        \"mek-projectile-feature\":()=>import(\"./subcomponents/mek_projectile-feature.vue\"),\r\n        //\"mek-projectile-mount-type\":mek_projectile_mount_type,\r\n\r\n        \"mek-space-efficiency\":()=>import(/* webpackChunkName: \"mek-space-efficiency\" */\"../universal/mek-space-efficiency.vue\"),\r\n        \"mek-component-name\":()=>import(/* webpackChunkName: \"mek_component-name\" */\"../universal/mek-component-name.vue\"),\r\n        \"mek-save-reset-component\":()=>import(/* webpackChunkName: \"mek_save-reset-component\" */\"../universal/mek-save-reset-component.vue\"),\r\n        \"mek-component-stats\":()=>import(/* webpackChunkName: \"mek_component-stats\" */\"../universal/mek_component-stats.vue\"),\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.uuid=null;\r\n        obj.component_name=null;\r\n        obj.component_category=\"equipment\";\r\n        obj.component_type=\"projectile\";\r\n        obj.original_component=null;\r\n        obj.component_changed=true;\r\n\r\n        obj.selected_damage={damage:1,cost:1,range:3};\r\n        obj.selected_accuracy={accuracy:0,cost:1};\r\n        obj.selected_range_mod={range_mod:1,cost:1};\r\n        obj.selected_multi_feed={feeds:1,cost:1};\r\n        obj.selected_burst_value={burst_value:1,cost:1};\r\n\r\n        obj.damage_capacity=1;\r\n\r\n        obj.feature_array=[];\r\n\r\n        obj.efficiencies={};\r\n        obj.efficiencies.space={};\r\n        obj.efficiencies.space.cost=0;\r\n        obj.efficiencies.space.modifier=0;\r\n\r\n        obj.cost_multipliers={};\r\n        obj.cost_multipliers.accuracy=1;\r\n        obj.cost_multipliers.feature=1;\r\n        obj.cost_multipliers.multi_feed=1;\r\n        obj.cost_multipliers.burst_value=1;\r\n        obj.cost_multipliers.range_mod=1;\r\n\r\n        //obj.selected_mount_type={mount_type:\"Servo-Mounted\"};\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        updateComponentName(_name)\r\n        {\r\n            this.component_name=_name;\r\n            this.component_changed=true;\r\n        },\r\n        updateEfficiencies(_data)\r\n        {\r\n            this.$set(this.efficiencies,\"space\",_data);\r\n            this.component_changed=true;\r\n        },\r\n        updateDamage(_damage)\r\n        {\r\n            this.selected_damage.damage=_damage.damage;\r\n            this.selected_damage.cost=_damage.cost;\r\n            this.selected_damage.range=_damage.range;\r\n            this.component_changed=true;\r\n            this.damage_capacity=_damage.damage;\r\n        },\r\n        updateAccuracy(_accuracy)\r\n        {\r\n            this.selected_accuracy.accuracy=_accuracy.accuracy;\r\n            this.selected_accuracy.cost=_accuracy.cost;\r\n            this.cost_multipliers.accuracy=_accuracy.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateMultiFeed(_multi_feed)\r\n        {\r\n            this.selected_multi_feed.feeds=_multi_feed.feeds;\r\n            this.selected_multi_feed.cost=_multi_feed.cost;\r\n            this.cost_multipliers.multi_feed=_multi_feed.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateBurstValue(_burst_value)\r\n        {\r\n            this.selected_burst_value.burst_value=_burst_value.burst_value;\r\n            this.selected_burst_value.cost=_burst_value.cost;\r\n            this.cost_multipliers.burst_value=_burst_value.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateRangeMod(_range_mod)\r\n        {\r\n            this.selected_range_mod.range_mod=_range_mod.range_mod;\r\n            this.selected_range_mod.cost=_range_mod.cost;\r\n            this.cost_multipliers.range_mod=_range_mod.cost;\r\n            this.component_changed=true;\r\n        },\r\n        updateFeature(_featureArray)\r\n        {\r\n            this.$set(this,\"feature_array\",_featureArray);\r\n            this.cost_multipliers.feature=this.feature_array.reduce((_multi,_val)=>{return _multi*=_val.cost},1);\r\n            this.projectile_name;\r\n        },\r\n        /* updateMountType(_mountType)\r\n        {\r\n            this.$set(this,\"selected_mount_type\",_mountType);\r\n            this.projectile_name;\r\n        }, */\r\n        componentSaveReset:function(_action)\r\n        {\r\n            let action=_action==\"reset\" && this.original_component==null?\"clear\":_action;\r\n            switch(action)\r\n            {\r\n                case \"save\":\r\n                    this.$store.commit('saveComponent',this.output_data());\r\n                    break;\r\n                case \"reset\":\r\n                    if(this.original_component!==null)\r\n                    {\r\n                        this.ingest_data(JSON.parse(this.original_component));\r\n                    }\r\n                    break;\r\n                case \"clear\":\r\n                    this.uuid=null;\r\n                    this.efficiencies.space.modifier=0;\r\n                    this.component_name=null;\r\n                    this.selected_damage.damage=1;\r\n                    this.selected_accuracy.accuracy=1;\r\n                    this.selected_range_mod.range_mod=1;\r\n                    this.selected_multi_feed.feeds1;\r\n                    this.selected_burst_value.burst_value=1;\r\n                    //this.mount_type.mount_type=\"Servo-Mounted\";\r\n                    this.$set(this,\"feature_array\",[]);\r\n                    this.$store.commit(\"saveComponent\",null);\r\n                    break;\r\n            }\r\n        },\r\n        output_data()\r\n        {\r\n            let return_data={};\r\n            this.uuid=this.uuid===null ? this.create_uuid() : this.uuid;\r\n            return_data.uuid=this.uuid;\r\n            return_data.component_category=\"equipment\";\r\n            return_data.component_type=\"projectile\";\r\n            return_data.component_name=this.component_name===null?this.projectile_name:this.component_name;\r\n\r\n            return_data.cost_multipliers=JSON.parse(JSON.stringify(this.cost_multipliers));\r\n            return_data.efficiencies=JSON.parse(JSON.stringify(this.efficiencies));\r\n\r\n            return_data.selected_damage=JSON.parse(JSON.stringify(this.selected_damage));\r\n            return_data.selected_accuracy=JSON.parse(JSON.stringify(this.selected_accuracy));\r\n            return_data.feature_array=JSON.parse(JSON.stringify(this.feature_array));\r\n            return_data.selected_range_mod=JSON.parse(JSON.stringify(this.selected_range_mod));\r\n            return_data.selected_multi_feed=JSON.parse(JSON.stringify(this.selected_multi_feed));\r\n            return_data.selected_burst_value=JSON.parse(JSON.stringify(this.selected_burst_value));\r\n            //return_data.selected_mount_type=JSON.parse(JSON.stringify(this.selected_mount_type));\r\n\r\n            return_data.cost=this.cost;\r\n            return_data.cost_multiplier=this.cost_multiplier;\r\n            return_data.weight=this.weight;\r\n            return_data.final_damage=this.final_damage;\r\n            return_data.damage_capacity=this.damage_capacity;\r\n\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n            this.original_component=JSON.stringify(return_data);\r\n            return return_data;\r\n        },\r\n        ingest_data(_data_object)\r\n        {\r\n            let alertMessage=\"Projectile is not valid, resetting.\";\r\n            this.universal_ingest_data(_data_object,alertMessage);\r\n            if(this.component_name==this.projectile_name)\r\n                {//reset component_name if component generated\r\n                    this.$set(this,\"component_name\",null);\r\n                }\r\n            this.$nextTick(()=>{this.component_changed=false;});\r\n        },\r\n    },\r\n    computed:\r\n    {\r\n        raw_space()\r\n        {\r\n            return this.round(this.selected_damage.cost * this.cost_multiplier,2);\r\n        },\r\n        cost:function()\r\n        {\r\n            let subtotal_cost=this.selected_damage.cost * this.cost_multiplier;\r\n            subtotal_cost += this.efficiencies.space.cost;\r\n\r\n            return this.round(subtotal_cost,2);\r\n        },\r\n        projectile_name()\r\n        {\r\n            let projectile_name=this.selected_burst_value.burst_value>1?\"Burst-\"+this.selected_burst_value.burst_value+\" \":\"\";\r\n\r\n            projectile_name=this.feature_array.reduce((_name,_val)=>\r\n            {\r\n                return _name+_val.feature+\" \";\r\n            },projectile_name);\r\n\r\n            //projectile_name=projectile_name+\" \"+this.selected_mount_type.mount_type+\" Gun\";\r\n            projectile_name=projectile_name.length>0?projectile_name+\" Gun\":\"Gun\";\r\n\r\n            return projectile_name.replace(/\\s+/g,\" \");\r\n        }\r\n    }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_projectile-main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_projectile-main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_projectile-main.vue?vue&type=template&id=1ac5a67b&\"\nimport script from \"./mek_projectile-main.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_projectile-main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
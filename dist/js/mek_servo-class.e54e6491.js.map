{"version":3,"sources":["webpack:///./src/data_table_modules/mek_servo/mek_servo-class-data-module.js","webpack:///./src/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./src/design_components/mek_servo/subcomponents/mek_servo-class.vue?e5f9","webpack:///src/design_components/mek_servo/subcomponents/mek_servo-class.vue","webpack:///./src/design_components/mek_servo/subcomponents/mek_servo-class.vue?7306","webpack:///./src/design_components/mek_servo/subcomponents/mek_servo-class.vue","webpack:///./src/data_table_modules/universal/servo_classes_data.js","webpack:///./src/mixins/alerts_mixin.js"],"names":["__webpack_require__","r","__webpack_exports__","d","create_class_data_table","class_data_table","servo_class_validate","has_feature","get_feature","cleaned_feature","_data_table_modules_universal_servo_classes_data__WEBPACK_IMPORTED_MODULE_0__","_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_1__","data_table_keys","_servo_type","type_cost_multiplier","type_space_multiplier","type_kills_multiplier","type_cost_modifier","type_space_modifier","type_kills_modifier","isArm","isLeg","servo_type","undefined","toLowerCase","new_class_table","servo_classes","map","_val","obj","code","id","name","cost","space","kills","damage_bonus","Math","ceil","throw_range","floor","partial_validate","partial_has_feature","partial_get_feature","default_data","partial_cleaned_feature","_data_table","_validation_keys","_data","Array","isArray","length","valid","some","every","_keys","_key","_has_feature","found_feature","_table_val","_validator","_get_feature","_default_data","_name","_pkey","_feature","data","key_list","update","alerts","json_data","JSON","stringify","parse","push","render","_vm","this","_h","$createElement","_c","_self","attrs","items","class_table","headers","class_table_headers","selected-keys","selected_keys","pkey","flow","show-headers","on","update-selected-data","select_class","staticRenderFns","mek_servo_classvue_type_script_lang_js_","props","mixins","alerts_mixin","components","mek-sub-component-table","e","then","bind","selected_class","suppressAlerts","methods","_selected_class","$set","$emit","computed","[object Object]","cleaned_data","Object","mek_servo_class_data_module","servoClass","forEach","_alert","addAlert","publishAlerts","servoType","watch","_newval","_oldval","subcomponents_mek_servo_classvue_type_script_lang_js_","component","componentNormalizer","_alert_string","$store","commit"],"mappings":"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","file":"js/mek_servo-class.e54e6491.js","sourcesContent":["//data table module, raw data output for re-use in non-vue-component formats\r\nimport servo_classes from \"@/data_table_modules/universal/servo_classes_data\";\r\nimport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature} \r\n    from \"@/data_table_modules/universal/mek_partial-function-data-module\";\r\n\r\nlet class_data_table=[];\r\nlet data_table_keys=[\"code\",\"id\",\"name\",\"cost\",\"kills\",\"damage_bonus\",\"throw_range\"];\r\n//create new class_data_table\r\nlet create_class_data_table=function(_servo_type)\r\n{//factory function to create class_data_table based on servo_type, otherwise creates a generic head-type servo\r\n    let type_cost_multiplier=1;\r\n    let type_space_multiplier=1;\r\n    let type_kills_multiplier=1;\r\n    let type_cost_modifier=0;\r\n    let type_space_modifier=0;\r\n    let type_kills_modifier=0;\r\n    let isArm=false;\r\n    let isLeg=false;\r\n    let servo_type=_servo_type!==undefined ? _servo_type.toLowerCase() : \"torso\";\r\n\r\n    switch(servo_type)\r\n    {\r\n        case \"torso\":\r\n            type_cost_multiplier=2;\r\n            type_space_multiplier=2;\r\n            type_kills_multiplier=2;\r\n            break;\r\n        case \"arm\":\r\n            isArm=true;\r\n            break;\r\n        case \"leg\":\r\n            isLeg=true;\r\n            break;\r\n        case \"pod\":\r\n            type_space_multiplier=2;\r\n            type_kills_multiplier=0;\r\n            break;\r\n        //case \"head\": //head, wing, tail are all just 1s\r\n        //case \"wing\":\r\n        //case \"tail\":\r\n        //  break;\r\n        //default:\r\n        //  assume head, x1 multipliers\r\n    }\r\n    let new_class_table = servo_classes.map((_val)=>\r\n    {\r\n        let obj={};\r\n        obj.code=_val.code;\r\n        obj.id=_val.id; \r\n        obj.name=_val.name; \r\n        obj.cost=(_val.code*type_cost_multiplier)+type_cost_modifier;\r\n        obj.space=(_val.code*type_space_multiplier)+type_space_modifier;\r\n        obj.kills=(_val.code*type_kills_multiplier)+type_kills_modifier;\r\n        if(isArm || isLeg)\r\n        {\r\n            obj.damage_bonus=isLeg ? Math.ceil(obj.code/2)-1 : Math.ceil(obj.code/3)-1;\r\n            if(isArm)\r\n            {\r\n                obj.throw_range=Math.floor(obj.code/2)+1;\r\n            }\r\n        }\r\n        return obj;\r\n    });\r\n    class_data_table=new_class_table;\r\n};\r\ncreate_class_data_table();//create default servo_class_table\r\n\r\n//data validator for class_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet servo_class_validate=partial_validate(class_data_table, data_table_keys);\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=partial_has_feature(class_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_feature=partial_get_feature(class_data_table, has_feature);\r\n\r\nlet default_data=get_feature(\"code\",1);\r\n\r\n//completed function for returning cleaed data\r\nlet cleaned_feature=\r\n    partial_cleaned_feature(servo_class_validate, has_feature, get_feature, default_data, \"Mek_Servo-Class\");\r\n\r\nexport {create_class_data_table, class_data_table, servo_class_validate, has_feature, get_feature, cleaned_feature};\r\n","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return _validation_keys.every((_keys)=>\r\n        {//return true if all validation_keys in _data match an element in _data_table\r\n            return _data[_keys]==_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.class_table,\"headers\":_vm.class_table_headers,\"selected-keys\":_vm.selected_keys,\"pkey\":_vm.pkey,\"name\":\"Servo Class\",\"flow\":\"pkey-col\",\"show-headers\":true},on:{\"update-selected-data\":_vm.select_class}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <mek-sub-component-table\r\n        :items=\"class_table\" :headers=\"class_table_headers\" :selected-keys=\"selected_keys\" :pkey=\"pkey\"\r\n        name=\"Servo Class\" flow=\"pkey-col\" :show-headers=\"true\"\r\n        @update-selected-data=\"select_class\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport alerts_mixin from \"@/mixins/alerts_mixin.js\";\r\n\r\nimport {create_class_data_table, class_data_table, cleaned_feature} \r\n    from \"@/data_table_modules/mek_servo/mek_servo-class-data-module.js\";\r\n\r\nexport default \r\n{\r\n    name:\"mek_servo_class\",\r\n    props:[\"servoClass\",\"servoType\"],\r\n    mixins:[alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"@/design_components/universal/mek_sub-component-table.vue\"),\r\n    },\r\n    data:()=>\r\n    {\r\n        let obj={};\r\n        obj.pkey=\"name\";\r\n        obj.alerts=[];\r\n        obj.selected_class=null;\r\n        obj.suppressAlerts=false;\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_class:function(_selected_class)\r\n        {\r\n            let selected_class=JSON.parse(JSON.stringify(_selected_class));\r\n            this.$set(this,\"selected_class\",selected_class);\r\n            this.$emit(\"update-servo-class\",selected_class);\r\n        },\r\n    },\r\n    computed:\r\n    {\r\n        selected_keys()\r\n        {\r\n            let cleaned_data=cleaned_feature(this.pkey, this.servoClass);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.$emit(\"alert-generated\",true);\r\n                this.select_class(cleaned_data.data);\r\n            }\r\n            return cleaned_data.key_list;\r\n        },\r\n        class_table_headers()\r\n        {\r\n            let isArm=this.servoType.toLowerCase()==\"arm\";\r\n            let isLeg=this.servoType.toLowerCase()==\"leg\";\r\n\r\n            let obj={};\r\n            obj.name='Name';\r\n            obj.cost='Cost';\r\n            obj.space='Space';\r\n            obj.kills='Kills';\r\n\r\n            if(isArm || isLeg)\r\n            {\r\n                obj.damage_bonus=\"DMG+\";\r\n                if(isArm)\r\n                {\r\n                    obj.throw_range=\"Throw\";\r\n                }\r\n            }\r\n            return obj;\r\n        },\r\n        class_table()\r\n        {\r\n            create_class_data_table(this.servoType);\r\n            return class_data_table;\r\n        }\r\n    },\r\n    watch:\r\n    {\r\n        \"servoType\":function(_newval,_oldval)\r\n        {//must track changes in servoType to disable alerts for removed features on cleaned_feat\r\n            if(_newval!=_oldval)\r\n            {\r\n                this.suppressAlerts=true;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_servo-class.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_servo-class.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_servo-class.vue?vue&type=template&id=2cb82607&scoped=true&\"\nimport script from \"./mek_servo-class.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_servo-class.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2cb82607\",\n  null\n  \n)\n\nexport default component.exports","export default\r\n    [\r\n        {code:1,id:\"SL\",name:\"Superlight\"},\r\n        {code:2,id:\"LW\",name:\"Lightweight\"},\r\n        {code:3,id:\"STR\",name:\"Striker\"},\r\n        {code:4,id:\"MS\",name:\"Medium Striker\"},\r\n        {code:5,id:\"HS\",name:\"Heavy Striker\"},\r\n        {code:6,id:\"MW\",name:\"Mediumweight\"},\r\n        {code:7,id:\"LH\",name:\"Light Heavy\"},\r\n        {code:8,id:\"MH\",name:\"Medium Heavy\"},\r\n        {code:9,id:\"AH\",name:\"Armored Heavy\"},\r\n        {code:10,id:\"SH\",name:\"Super Heavy\"},\r\n        {code:11,id:\"MgH\",name:\"Mega Heavy\"}\r\n    ];\r\n\r\n","export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}"],"sourceRoot":""}
(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["mek_emw-turns-in-use-data-module"],{"706d":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return partial_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return partial_has_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return partial_get_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return partial_cleaned_feature; });\nvar _this = undefined;\n\n//data table module, raw data output for re-use in non-vue-component formats\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \n//          neutral and reusable across all data modules\n//partial data validator\n//called with data_table and validation_keys in data-module\nvar partial_validate = function partial_validate(_data_table, _validation_keys) {\n  return function (_data) {\n    //_data_table: Array, array of data to validate against\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\n    //_data: Object, data to be compared to data table \n    if (typeof _data === "undefined" || !Array.isArray(_validation_keys) || _validation_keys.length == 0) {\n      return false;\n    }\n\n    var valid = _data_table.some(function (_val) {\n      return _validation_keys.every(function (_keys) {\n        //return true if all validation_keys in _data match an element in _data_table\n        return _data[_keys] == _val[_keys];\n      });\n    });\n\n    return valid;\n  };\n}; //partial_has_feature, determine if provided data table has matching element with provided key and val\n//called in data module to generate full function with local data\n\n\nvar partial_has_feature = function partial_has_feature(_data_table) {\n  return function (_key, _val) {\n    return _data_table.some(function (_data) {\n      return _data[_key] !== undefined && _data[_key] == _val;\n    });\n  };\n}; //partial get_feature, returns full function for data module\n//requires data_table (array) and module\'s has_feature function\n//returns full matching element in provided data table\n//has_feature must exist in data table module\n\n\nvar partial_get_feature = function partial_get_feature(_data_table, _has_feature) {\n  return function (_key, _val) {\n    var found_feature = null;\n\n    if (_has_feature(_key, _val)) {\n      _data_table.some(function (_table_val) {\n        if (_table_val[_key] == _val) {\n          found_feature = _table_val;\n          return true;\n        }\n      }, _this);\n    }\n\n    return found_feature;\n  };\n};\n\nvar partial_cleaned_feature = function partial_cleaned_feature(_validator, _has_feature, _get_feature, _default_data, _name) {\n  return function (_pkey, _feature) {\n    //input: primary key, selected feature, filtered data table\n    var data = undefined;\n    var key_list = [];\n    var update = false;\n    var alerts = [];\n    var json_data = JSON.stringify(_feature);\n\n    if (_feature === undefined || !_has_feature(_pkey, _feature[_pkey])) {\n      data = _default_data;\n      key_list = [data[_pkey]];\n      update = true;\n      alerts.push(_name + ": " + json_data);\n      alerts.push("**** Invalid data. Reseting to default. ****");\n    } else if (!_validator(_feature)) {\n      data = JSON.parse(JSON.stringify(_get_feature(_pkey, _feature[_pkey])));\n      key_list = [data[_pkey]];\n      update = true;\n      alerts.push(_name + ": " + json_data);\n      alerts.push("**** Invalid data. Reseting. ****");\n    } else {\n      data = JSON.parse(JSON.stringify(_feature));\n      key_list = [data[_pkey]];\n      update = false;\n    }\n\n    return {\n      data: data,\n      key_list: key_list,\n      update: update,\n      alerts: alerts\n    };\n  };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///706d\n')},"9e76":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "turns_data_table", function() { return turns_data_table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "turns_validate", function() { return turns_validate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has_feature", function() { return has_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_feature", function() { return get_feature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cleaned_feature", function() { return cleaned_feature; });\n/* harmony import */ var _data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("706d");\n//data table module, raw data output for re-use in non-vue-component formats\n //create new turns_data_table\n\nvar turns_data_table = [{\n  turns: 1,\n  cost: 0.3\n}, {\n  turns: 2,\n  cost: 0.4\n}, {\n  turns: 3,\n  cost: 0.5\n}, {\n  turns: 4,\n  cost: 0.6\n}, {\n  turns: 5,\n  cost: 0.7\n}, {\n  turns: 7,\n  cost: 0.8\n}, {\n  turns: 10,\n  cost: 0.9\n}, {\n  turns: "__INFINITY__",\n  cost: 1.0\n}];\nvar data_table_keys = ["turns", "cost"];\nvar default_data = {\n  turns: Infinity,\n  cost: 1\n}; //data validator for turns_data_table\n//call partial_validate with appropriate data for full validate\n\nvar turns_validate = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_validate */ "d"])(turns_data_table, data_table_keys); //completed function for checking if data has data\n\nvar has_feature = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_has_feature */ "c"])(turns_data_table); //completed function for returning matching data\n\nvar get_feature = Object(_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__[/* partial_get_feature */ "b"])(turns_data_table, has_feature);\n/**** \r\n * see cleaned_feat can be converted to partial func due to use of Infinity\r\n * probably with a For...Of loop prior to JSON clone\r\n * \r\n *  ****/\n\nvar cleaned_feature = function cleaned_feature(_pkey, _feature) {\n  //input: primary key, selected feature, filtered data table\n  var data = undefined;\n  var key_list = [];\n  var update = false;\n  var alerts = [];\n  var json_data = JSON.stringify(_feature);\n\n  if (_feature === undefined || !has_feature(_pkey, _feature[_pkey])) {\n    data = default_data;\n    key_list = [data[_pkey]];\n    update = true;\n    alerts.push("Mek_EMW-Turns-In-Use: " + json_data);\n    alerts.push("**** Invalid data. Reseting to default. ****");\n  } else if (!turns_validate(_feature)) {\n    data = JSON.parse(JSON.stringify(get_feature(_pkey, _feature[_pkey])));\n    data.turns = data.turns === null ? Infinity : data.turns;\n    key_list = [data[_pkey]];\n    update = true;\n    alerts.push("Mek_EMW-Turns-In-Use: " + json_data);\n    alerts.push("**** Invalid data. Reseting. ****");\n  } else {\n    data = JSON.parse(JSON.stringify(_feature));\n    data.turns = data.turns === null ? Infinity : data.turns;\n    key_list = [data[_pkey]];\n    update = false;\n  }\n\n  return {\n    data: data,\n    key_list: key_list,\n    update: update,\n    alerts: alerts\n  };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZGF0YV90YWJsZV9tb2R1bGVzL21la19lbXcvbWVrX2Vtdy10dXJucy1pbi11c2UtZGF0YS1tb2R1bGUuanM/OWU3NiJdLCJuYW1lcyI6WyJ0dXJuc19kYXRhX3RhYmxlIiwidHVybnMiLCJjb3N0IiwiZGF0YV90YWJsZV9rZXlzIiwiZGVmYXVsdF9kYXRhIiwiSW5maW5pdHkiLCJ0dXJuc192YWxpZGF0ZSIsInBhcnRpYWxfdmFsaWRhdGUiLCJoYXNfZmVhdHVyZSIsInBhcnRpYWxfaGFzX2ZlYXR1cmUiLCJnZXRfZmVhdHVyZSIsInBhcnRpYWxfZ2V0X2ZlYXR1cmUiLCJjbGVhbmVkX2ZlYXR1cmUiLCJfcGtleSIsIl9mZWF0dXJlIiwiZGF0YSIsInVuZGVmaW5lZCIsImtleV9saXN0IiwidXBkYXRlIiwiYWxlcnRzIiwianNvbl9kYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsInB1c2giLCJwYXJzZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtDQUlBOztBQUNBLElBQUlBLGdCQUFnQixHQUNwQixDQUNJO0FBQUNDLE9BQUssRUFBQyxDQUFQO0FBQVNDLE1BQUksRUFBQztBQUFkLENBREosRUFFSTtBQUFDRCxPQUFLLEVBQUMsQ0FBUDtBQUFTQyxNQUFJLEVBQUM7QUFBZCxDQUZKLEVBR0k7QUFBQ0QsT0FBSyxFQUFDLENBQVA7QUFBU0MsTUFBSSxFQUFDO0FBQWQsQ0FISixFQUlJO0FBQUNELE9BQUssRUFBQyxDQUFQO0FBQVNDLE1BQUksRUFBQztBQUFkLENBSkosRUFLSTtBQUFDRCxPQUFLLEVBQUMsQ0FBUDtBQUFTQyxNQUFJLEVBQUM7QUFBZCxDQUxKLEVBTUk7QUFBQ0QsT0FBSyxFQUFDLENBQVA7QUFBU0MsTUFBSSxFQUFDO0FBQWQsQ0FOSixFQU9JO0FBQUNELE9BQUssRUFBQyxFQUFQO0FBQVVDLE1BQUksRUFBQztBQUFmLENBUEosRUFRSTtBQUFDRCxPQUFLLEVBQUMsY0FBUDtBQUFzQkMsTUFBSSxFQUFDO0FBQTNCLENBUkosQ0FEQTtBQVdBLElBQUlDLGVBQWUsR0FBQyxDQUFDLE9BQUQsRUFBUyxNQUFULENBQXBCO0FBQ0EsSUFBSUMsWUFBWSxHQUFDO0FBQUNILE9BQUssRUFBQ0ksUUFBUDtBQUFnQkgsTUFBSSxFQUFDO0FBQXJCLENBQWpCLEMsQ0FFQTtBQUNBOztBQUNBLElBQUlJLGNBQWMsR0FBQ0MsK0hBQWdCLENBQUNQLGdCQUFELEVBQW1CRyxlQUFuQixDQUFuQyxDLENBRUE7O0FBQ0EsSUFBSUssV0FBVyxHQUFDQyxrSUFBbUIsQ0FBQ1QsZ0JBQUQsQ0FBbkMsQyxDQUVBOztBQUNBLElBQUlVLFdBQVcsR0FBQ0Msa0lBQW1CLENBQUNYLGdCQUFELEVBQW1CUSxXQUFuQixDQUFuQztBQUVBOzs7Ozs7QUFLQSxJQUFJSSxlQUFlLEdBQUMsU0FBaEJBLGVBQWdCLENBQVNDLEtBQVQsRUFBZ0JDLFFBQWhCLEVBQ3BCO0FBQUM7QUFDRyxNQUFJQyxJQUFJLEdBQUNDLFNBQVQ7QUFDQSxNQUFJQyxRQUFRLEdBQUMsRUFBYjtBQUNBLE1BQUlDLE1BQU0sR0FBQyxLQUFYO0FBQ0EsTUFBSUMsTUFBTSxHQUFDLEVBQVg7QUFDQSxNQUFJQyxTQUFTLEdBQUNDLElBQUksQ0FBQ0MsU0FBTCxDQUFlUixRQUFmLENBQWQ7O0FBRUEsTUFBR0EsUUFBUSxLQUFHRSxTQUFYLElBQXdCLENBQUNSLFdBQVcsQ0FBQ0ssS0FBRCxFQUFPQyxRQUFRLENBQUNELEtBQUQsQ0FBZixDQUF2QyxFQUNBO0FBQ0lFLFFBQUksR0FBQ1gsWUFBTDtBQUNBYSxZQUFRLEdBQUMsQ0FBQ0YsSUFBSSxDQUFDRixLQUFELENBQUwsQ0FBVDtBQUNBSyxVQUFNLEdBQUMsSUFBUDtBQUNBQyxVQUFNLENBQUNJLElBQVAsQ0FBWSwyQkFBeUJILFNBQXJDO0FBQ0FELFVBQU0sQ0FBQ0ksSUFBUCxDQUFZLDhDQUFaO0FBQ0gsR0FQRCxNQVFLLElBQUcsQ0FBQ2pCLGNBQWMsQ0FBQ1EsUUFBRCxDQUFsQixFQUNMO0FBQ0lDLFFBQUksR0FBQ00sSUFBSSxDQUFDRyxLQUFMLENBQVdILElBQUksQ0FBQ0MsU0FBTCxDQUFlWixXQUFXLENBQUNHLEtBQUQsRUFBT0MsUUFBUSxDQUFDRCxLQUFELENBQWYsQ0FBMUIsQ0FBWCxDQUFMO0FBQ0FFLFFBQUksQ0FBQ2QsS0FBTCxHQUFXYyxJQUFJLENBQUNkLEtBQUwsS0FBYSxJQUFiLEdBQWtCSSxRQUFsQixHQUEyQlUsSUFBSSxDQUFDZCxLQUEzQztBQUNBZ0IsWUFBUSxHQUFDLENBQUNGLElBQUksQ0FBQ0YsS0FBRCxDQUFMLENBQVQ7QUFDQUssVUFBTSxHQUFDLElBQVA7QUFDQUMsVUFBTSxDQUFDSSxJQUFQLENBQVksMkJBQXlCSCxTQUFyQztBQUNBRCxVQUFNLENBQUNJLElBQVAsQ0FBWSxtQ0FBWjtBQUNILEdBUkksTUFVTDtBQUNJUixRQUFJLEdBQUNNLElBQUksQ0FBQ0csS0FBTCxDQUFXSCxJQUFJLENBQUNDLFNBQUwsQ0FBZVIsUUFBZixDQUFYLENBQUw7QUFDQUMsUUFBSSxDQUFDZCxLQUFMLEdBQVdjLElBQUksQ0FBQ2QsS0FBTCxLQUFhLElBQWIsR0FBa0JJLFFBQWxCLEdBQTJCVSxJQUFJLENBQUNkLEtBQTNDO0FBQ0FnQixZQUFRLEdBQUMsQ0FBQ0YsSUFBSSxDQUFDRixLQUFELENBQUwsQ0FBVDtBQUNBSyxVQUFNLEdBQUMsS0FBUDtBQUNIOztBQUNELFNBQU87QUFBQ0gsUUFBSSxFQUFDQSxJQUFOO0FBQVlFLFlBQVEsRUFBQ0EsUUFBckI7QUFBK0JDLFVBQU0sRUFBQ0EsTUFBdEM7QUFBOENDLFVBQU0sRUFBQ0E7QUFBckQsR0FBUDtBQUNILENBakNEIiwiZmlsZSI6IjllNzYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL2RhdGEgdGFibGUgbW9kdWxlLCByYXcgZGF0YSBvdXRwdXQgZm9yIHJlLXVzZSBpbiBub24tdnVlLWNvbXBvbmVudCBmb3JtYXRzXHJcbmltcG9ydCB7cGFydGlhbF92YWxpZGF0ZSwgcGFydGlhbF9oYXNfZmVhdHVyZSwgcGFydGlhbF9nZXRfZmVhdHVyZX0gXHJcbiAgICBmcm9tIFwiQC9kYXRhX3RhYmxlX21vZHVsZXMvdW5pdmVyc2FsL21la19wYXJ0aWFsLWZ1bmN0aW9uLWRhdGEtbW9kdWxlXCI7XHJcblxyXG4vL2NyZWF0ZSBuZXcgdHVybnNfZGF0YV90YWJsZVxyXG5sZXQgdHVybnNfZGF0YV90YWJsZT1cclxuW1xyXG4gICAge3R1cm5zOjEsY29zdDowLjN9LFxyXG4gICAge3R1cm5zOjIsY29zdDowLjR9LFxyXG4gICAge3R1cm5zOjMsY29zdDowLjV9LFxyXG4gICAge3R1cm5zOjQsY29zdDowLjZ9LFxyXG4gICAge3R1cm5zOjUsY29zdDowLjd9LFxyXG4gICAge3R1cm5zOjcsY29zdDowLjh9LFxyXG4gICAge3R1cm5zOjEwLGNvc3Q6MC45fSxcclxuICAgIHt0dXJuczpcIl9fSU5GSU5JVFlfX1wiLGNvc3Q6MS4wfVxyXG5dO1xyXG5sZXQgZGF0YV90YWJsZV9rZXlzPVtcInR1cm5zXCIsXCJjb3N0XCJdO1xyXG5sZXQgZGVmYXVsdF9kYXRhPXt0dXJuczpJbmZpbml0eSxjb3N0OjF9O1xyXG5cclxuLy9kYXRhIHZhbGlkYXRvciBmb3IgdHVybnNfZGF0YV90YWJsZVxyXG4vL2NhbGwgcGFydGlhbF92YWxpZGF0ZSB3aXRoIGFwcHJvcHJpYXRlIGRhdGEgZm9yIGZ1bGwgdmFsaWRhdGVcclxubGV0IHR1cm5zX3ZhbGlkYXRlPXBhcnRpYWxfdmFsaWRhdGUodHVybnNfZGF0YV90YWJsZSwgZGF0YV90YWJsZV9rZXlzKTtcclxuXHJcbi8vY29tcGxldGVkIGZ1bmN0aW9uIGZvciBjaGVja2luZyBpZiBkYXRhIGhhcyBkYXRhXHJcbmxldCBoYXNfZmVhdHVyZT1wYXJ0aWFsX2hhc19mZWF0dXJlKHR1cm5zX2RhdGFfdGFibGUpO1xyXG5cclxuLy9jb21wbGV0ZWQgZnVuY3Rpb24gZm9yIHJldHVybmluZyBtYXRjaGluZyBkYXRhXHJcbmxldCBnZXRfZmVhdHVyZT1wYXJ0aWFsX2dldF9mZWF0dXJlKHR1cm5zX2RhdGFfdGFibGUsIGhhc19mZWF0dXJlKTtcclxuXHJcbi8qKioqIFxyXG4gKiBzZWUgY2xlYW5lZF9mZWF0IGNhbiBiZSBjb252ZXJ0ZWQgdG8gcGFydGlhbCBmdW5jIGR1ZSB0byB1c2Ugb2YgSW5maW5pdHlcclxuICogcHJvYmFibHkgd2l0aCBhIEZvci4uLk9mIGxvb3AgcHJpb3IgdG8gSlNPTiBjbG9uZVxyXG4gKiBcclxuICogICoqKiovXHJcbmxldCBjbGVhbmVkX2ZlYXR1cmU9ZnVuY3Rpb24oX3BrZXksIF9mZWF0dXJlKVxyXG57Ly9pbnB1dDogcHJpbWFyeSBrZXksIHNlbGVjdGVkIGZlYXR1cmUsIGZpbHRlcmVkIGRhdGEgdGFibGVcclxuICAgIGxldCBkYXRhPXVuZGVmaW5lZDtcclxuICAgIGxldCBrZXlfbGlzdD1bXTtcclxuICAgIGxldCB1cGRhdGU9ZmFsc2U7XHJcbiAgICBsZXQgYWxlcnRzPVtdO1xyXG4gICAgbGV0IGpzb25fZGF0YT1KU09OLnN0cmluZ2lmeShfZmVhdHVyZSk7XHJcblxyXG4gICAgaWYoX2ZlYXR1cmU9PT11bmRlZmluZWQgfHwgIWhhc19mZWF0dXJlKF9wa2V5LF9mZWF0dXJlW19wa2V5XSkpXHJcbiAgICB7XHJcbiAgICAgICAgZGF0YT1kZWZhdWx0X2RhdGE7XHJcbiAgICAgICAga2V5X2xpc3Q9W2RhdGFbX3BrZXldXTtcclxuICAgICAgICB1cGRhdGU9dHJ1ZTtcclxuICAgICAgICBhbGVydHMucHVzaChcIk1la19FTVctVHVybnMtSW4tVXNlOiBcIitqc29uX2RhdGEpO1xyXG4gICAgICAgIGFsZXJ0cy5wdXNoKFwiKioqKiBJbnZhbGlkIGRhdGEuIFJlc2V0aW5nIHRvIGRlZmF1bHQuICoqKipcIik7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmKCF0dXJuc192YWxpZGF0ZShfZmVhdHVyZSkpXHJcbiAgICB7XHJcbiAgICAgICAgZGF0YT1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGdldF9mZWF0dXJlKF9wa2V5LF9mZWF0dXJlW19wa2V5XSkpKTtcclxuICAgICAgICBkYXRhLnR1cm5zPWRhdGEudHVybnM9PT1udWxsP0luZmluaXR5OmRhdGEudHVybnM7XHJcbiAgICAgICAga2V5X2xpc3Q9W2RhdGFbX3BrZXldXTtcclxuICAgICAgICB1cGRhdGU9dHJ1ZTtcclxuICAgICAgICBhbGVydHMucHVzaChcIk1la19FTVctVHVybnMtSW4tVXNlOiBcIitqc29uX2RhdGEpO1xyXG4gICAgICAgIGFsZXJ0cy5wdXNoKFwiKioqKiBJbnZhbGlkIGRhdGEuIFJlc2V0aW5nLiAqKioqXCIpO1xyXG4gICAgfVxyXG4gICAgZWxzZVxyXG4gICAge1xyXG4gICAgICAgIGRhdGE9SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShfZmVhdHVyZSkpO1xyXG4gICAgICAgIGRhdGEudHVybnM9ZGF0YS50dXJucz09PW51bGw/SW5maW5pdHk6ZGF0YS50dXJucztcclxuICAgICAgICBrZXlfbGlzdD1bZGF0YVtfcGtleV1dO1xyXG4gICAgICAgIHVwZGF0ZT1mYWxzZTtcclxuICAgIH1cclxuICAgIHJldHVybiB7ZGF0YTpkYXRhLCBrZXlfbGlzdDprZXlfbGlzdCwgdXBkYXRlOnVwZGF0ZSwgYWxlcnRzOmFsZXJ0c307XHJcbn07XHJcblxyXG5leHBvcnQge3R1cm5zX2RhdGFfdGFibGUsIHR1cm5zX3ZhbGlkYXRlLCBoYXNfZmVhdHVyZSwgZ2V0X2ZlYXR1cmUsIGNsZWFuZWRfZmVhdHVyZX07XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9e76\n')}}]);
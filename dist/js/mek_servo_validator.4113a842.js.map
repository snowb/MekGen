{"version":3,"sources":["webpack:///./src/store/modules/validators/mek_servo_validator.js"],"names":["loopValidators","updateMultipliers","round","validators","__webpack_require__","e","then","bind","_module","servo_class","cleaned_feature","create_class_table","create_class_data_table","servo_trade","servo_type","armor","armor_filter","filter_data_table","armor_type","armor_RAM","validateComponent","_component","validatedData","loopAlerts","cleanedComponent","updateList","alerts","componentsToValidate","validator","pkey","component_prop","skipUpdateList","_loopValidators","concat","selected_servo_type","type","selected_servo_class","data","trade_formatted","kills","kills_space_trade","kills_modifier","space","space_modifier","cost","total_kills","available_space","code","selected_armor","cost_multiplier","Object","entries","cost_multipliers","reduce","_multi","_val","weight","stopping_power"],"mappings":"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","file":"js/mek_servo_validator.4113a842.js","sourcesContent":["let validators={};\r\n\r\nimport(/* webpackChunkName: \"mek_servo-class-data-module\" */\"@/data_table_modules/mek_servo/mek_servo-class-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.servo_class=_module.cleaned_feature;\r\n    validators.create_class_table=_module.create_class_data_table;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_servo-kills-space-trade-data-module\" */\"@/data_table_modules/mek_servo/mek_servo-kills-space-trade-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.servo_trade=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_servo-type-data-module\" */\"@/data_table_modules/mek_servo/mek_servo-type-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.servo_type=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_armor-data-module\" */\"@/data_table_modules/mek_armor/mek_armor-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.armor=_module.cleaned_feature;\r\n    validators.armor_filter=_module.filter_data_table;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_armor-type-data-module\" */\"@/data_table_modules/mek_armor/mek_armor-type-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.armor_type=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_armor-RAM-data-module\" */\"@/data_table_modules/mek_armor/mek_armor-RAM-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.armor_RAM=_module.cleaned_feature;\r\n});\r\n\r\nlet loopValidators, updateMultipliers, round;\r\nimport(/* webpackChunkName: \"validator_functions\" */\"./validator_functions\")\r\n.then((_module)=>\r\n{\r\n    ({loopValidators, updateMultipliers, round} = _module);\r\n});\r\n\r\nlet validateComponent=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let validatedData;\r\n    let updateList=[\"selected_armor_type\",\"selected_absorption\"];\r\n    let loopAlerts;\r\n    let alerts=[];\r\n    let componentsToValidate=\r\n    [\r\n        {validator:validators.servo_type,pkey:\"type\",component_prop:\"selected_servo_type\",skipUpdateList:true},\r\n        {validator:validators.armor_type,pkey:\"damage_coefficient\",component_prop:\"selected_armor_type\",},\r\n        {validator:validators.armor_RAM,pkey:\"absorption\",component_prop:'selected_absorption'},\r\n    ];\r\n    ({cleanedComponent, loopAlerts} = loopValidators(componentsToValidate, cleanedComponent));\r\n    alerts=alerts.concat(loopAlerts)\r\n    //update mek_servo class table based on mek servo type\r\n    validators.create_class_table(_component.selected_servo_type.type);\r\n    //validate servo-class\r\n    validatedData=validators.servo_class(\"code\",_component.selected_servo_class);\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.selected_servo_class=validatedData.data;\r\n    //generate properly formatted kill-space-trade data\r\n    let trade_formatted=\r\n        {\r\n            kills:_component.kills_space_trade.kills_modifier,\r\n            space:_component.kills_space_trade.space_modifier,\r\n            cost:_component.kills_space_trade.cost\r\n        };\r\n    //validate servo-kills-space-trade\r\n    validatedData=validators.servo_trade(\r\n        trade_formatted,\r\n        _component.selected_servo_class.kills,\r\n        _component.selected_servo_class.space);\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.kills_space_trade=validatedData.data;\r\n    // update total kills and available_space\r\n    cleanedComponent.total_kills=cleanedComponent.selected_servo_class.kills + cleanedComponent.kills_space_trade.kills_modifier;\r\n    cleanedComponent.available_space=cleanedComponent.selected_servo_class.space + cleanedComponent.kills_space_trade.space_modifier;\r\n    //update armor based on servo class\r\n    validators.armor_filter(_component.selected_servo_class.code+2);\r\n    //validate armor\r\n    validatedData=validators.armor(\"code\",_component.selected_armor);\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.selected_armor=validatedData.data;\r\n\r\n    cleanedComponent=updateMultipliers(updateList,cleanedComponent);\r\n    //validate space efficiency\r\n    let cost_multiplier=Object.entries(cleanedComponent.cost_multipliers).reduce((_multi, _val)=>\r\n    {//calc new cost_mulitplier\r\n        return _multi*_val[1];\r\n    },1);\r\n    cleanedComponent.cost_multiplier.armor=round(cost_multiplier,2);\r\n    cleanedComponent.weight=(cleanedComponent.total_kills + cleanedComponent.selected_armor.stopping_power)/2;\r\n    cleanedComponent.cost=cleanedComponent.selected_servo_class.cost\r\n                          + (cleanedComponent.selected_armor.cost * cleanedComponent.cost_multiplier.armor)\r\n                          + cleanedComponent.kills_space_trade.cost;\r\n\r\n    return {data:cleanedComponent, alerts:alerts};\r\n};\r\n\r\nexport {validateComponent};"],"sourceRoot":""}
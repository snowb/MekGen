{"version":3,"sources":["webpack:///./src/mixins/alerts_mixin.js","webpack:///./src/components/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./src/components/mek_projectile/subcomponents/mek_projectile-burst-value.vue?d82b","webpack:///./src/components/data_table_modules/mek_projectile/mek_projectile-burst-value-data-module.js","webpack:///src/components/mek_projectile/subcomponents/mek_projectile-burst-value.vue","webpack:///./src/components/mek_projectile/subcomponents/mek_projectile-burst-value.vue?0baf","webpack:///./src/components/mek_projectile/subcomponents/mek_projectile-burst-value.vue"],"names":["__webpack_exports__","methods","addAlert","_alert_string","this","alerts","push","publishAlerts","length","$store","commit","$set","partial_validate","_data_table","_validation_keys","_data","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_1___default","valid","some","_val","_keys","partial_has_feature","_key","undefined","partial_get_feature","_has_feature","found_feature","_table_val","_this","partial_cleaned_feature","_validator","_get_feature","_default_data","_name","_pkey","_feature","data","key_list","update","json_data","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","JSON","parse","render","_vm","_h","$createElement","_c","_self","attrs","items","burst_value_table","pkey","selected-keys","selected_keys","headers","burst_value","cost","show-headers","name","flow","format","on","update-selected-data","select_burst_value","staticRenderFns","burst_value_data_table","data_table_keys","default_data","burst_value_validate","has_feature","get_feature","cleaned_feature","mek_projectile_burst_valuevue_type_script_lang_js_","props","mixins","alerts_mixin","components","mek-sub-component-table","__webpack_require__","e","then","bind","obj","suppressAlerts","_burst_value","stringify_default","$emit","computed","cleaned_data","burstValue","forEach","_alert","subcomponents_mek_projectile_burst_valuevue_type_script_lang_js_","component","Object","componentNormalizer"],"mappings":"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","file":"js/mek-projectile-burst-value-legacy.232b1c9e.js","sourcesContent":["export default\r\n{\r\n    methods:\r\n    {\r\n        addAlert(_alert_string)\r\n        {\r\n            this.alerts.push(_alert_string);\r\n        },\r\n        publishAlerts()\r\n        {\r\n            if(this.alerts.length>0)\r\n            {   \r\n                this.$store.commit(\"alertMessage\",this.alerts);\r\n            }\r\n            this.$set(this,\"alerts\",[]);\r\n        },\r\n    }\r\n}","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return !_validation_keys.some((_keys)=>\r\n        {//returns true on invalid data, Not the return to return True if matching valid value is found\r\n            return _data[_keys]!=_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mek-sub-component-table',{attrs:{\"items\":_vm.burst_value_table,\"pkey\":_vm.pkey,\"selected-keys\":_vm.selected_keys,\"headers\":{burst_value:'BV',cost:'Cost'},\"show-headers\":true,\"name\":\"Burst Value\",\"flow\":\"pkey-row\",\"format\":{cost:'multiplier'}},on:{\"update-selected-data\":_vm.select_burst_value}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature} from \"../universal/mek_partial-function-data-module\";\r\n\r\n//create new burst_value_data_table\r\nlet burst_value_data_table=\r\n[\r\n    {burst_value:1,cost:1},\r\n    {burst_value:2,cost:1.5},\r\n    {burst_value:3,cost:2},\r\n    {burst_value:4,cost:2.5},\r\n    {burst_value:5,cost:3},\r\n    {burst_value:6,cost:3.5},\r\n    {burst_value:7,cost:4},\r\n    {burst_value:8,cost:4.5},\r\n];\r\nlet data_table_keys=[\"burst_value\",\"cost\"];\r\nlet default_data={burst_value:1,cost:1};\r\n\r\n//data validator for burst_value_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet burst_value_validate=partial_validate(burst_value_data_table, data_table_keys);\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=partial_has_feature(burst_value_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_feature=partial_get_feature(burst_value_data_table, has_feature);\r\n\r\n//completed function for returning cleaed data\r\nlet cleaned_feature=\r\n    partial_cleaned_feature(burst_value_validate, has_feature, get_feature, default_data, \"Mek_Projectile-Burst_Value\");\r\n\r\nexport {burst_value_data_table, burst_value_validate, has_feature, get_feature, cleaned_feature};\r\n","<template>\r\n    <mek-sub-component-table\r\n        :items=\"burst_value_table\" :pkey=\"pkey\" :selected-keys=\"selected_keys\"\r\n        :headers=\"{burst_value:'BV',cost:'Cost'}\" :show-headers=\"true\"\r\n        name=\"Burst Value\" flow=\"pkey-row\" :format=\"{cost:'multiplier'}\"\r\n        @update-selected-data=\"select_burst_value\"\r\n    ></mek-sub-component-table>\r\n</template>\r\n<script>\r\nimport alerts_mixin from \"../../../mixins/alerts_mixin\";\r\n\r\nimport {burst_value_data_table, cleaned_feature}\r\n    from \"../../data_table_modules/mek_projectile/mek_projectile-burst-value-data-module.js\";\r\n\r\nexport default\r\n{\r\n    name:\"mek_projectile_burst_value\",\r\n    props:[\"burstValue\"],\r\n    mixins:[alerts_mixin],\r\n    components:\r\n    {\r\n        \"mek-sub-component-table\":()=>import(\"../../universal/mek_sub-component-table.vue\")\r\n    },\r\n    data:function()\r\n    {\r\n        let obj={};\r\n        obj.alerts=[];\r\n        obj.pkey=\"burst_value\";\r\n        obj.suppressAlerts=false;\r\n        return obj;\r\n    },\r\n    methods:\r\n    {\r\n        select_burst_value:function(_burst_value)\r\n        {\r\n            let data=JSON.parse(JSON.stringify(_burst_value));\r\n            this.$emit(\"update-burst-value\",data);\r\n        },\r\n    },\r\n    computed:\r\n    {\r\n        burst_value_table()\r\n        {\r\n            return burst_value_data_table;\r\n        },\r\n        selected_keys()\r\n        {\r\n            let cleaned_data=cleaned_feature(this.pkey, this.burstValue);\r\n            if(cleaned_data.alerts.length>0 && !this.suppressAlerts)\r\n            {\r\n                cleaned_data.alerts.forEach((_alert)=>\r\n                {\r\n                    this.addAlert(_alert);\r\n                });\r\n                this.publishAlerts();\r\n            }\r\n            if(cleaned_data.update)\r\n            {\r\n                this.select_burst_value(cleaned_data.data);\r\n            }\r\n            return cleaned_data.key_list;\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_projectile-burst-value.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mek_projectile-burst-value.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mek_projectile-burst-value.vue?vue&type=template&id=23e669b8&scoped=true&\"\nimport script from \"./mek_projectile-burst-value.vue?vue&type=script&lang=js&\"\nexport * from \"./mek_projectile-burst-value.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"23e669b8\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
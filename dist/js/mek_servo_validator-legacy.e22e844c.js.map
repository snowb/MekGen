{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/_object-to-array.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/entries.js","webpack:///./node_modules/core-js/library/modules/es7.object.entries.js","webpack:///./node_modules/core-js/library/fn/object/entries.js","webpack:///./src/store/modules/validators/mek_servo_validator.js"],"names":["getKeys","__webpack_require__","toIObject","isEnum","f","module","exports","isEntries","it","key","O","keys","length","i","result","call","push","$export","$entries","S","entries","Object","loopValidators","updateMultipliers","round","validators","e","then","bind","_module","servo_class","cleaned_feature","create_class_table","create_class_data_table","servo_trade","servo_type","armor","armor_filter","filter_data_table","armor_type","armor_RAM","validateComponent","_component","validatedData","loopAlerts","cleanedComponent","updateList","alerts","componentsToValidate","validator","pkey","component_prop","skipUpdateList","_loopValidators","concat","selected_servo_type","type","selected_servo_class","data","trade_formatted","kills","kills_space_trade","kills_modifier","space","space_modifier","cost","total_kills","available_space","code","selected_armor","cost_multiplier","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_entries__WEBPACK_IMPORTED_MODULE_0___default","cost_multipliers","reduce","_multi","_val","weight","stopping_power"],"mappings":"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","file":"js/mek_servo_validator-legacy.e22e844c.js","sourcesContent":["var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n","module.exports = require(\"core-js/library/fn/object/entries\");","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n","let validators={};\r\n\r\nimport(/* webpackChunkName: \"mek_servo-class-data-module\" */\"@/data_table_modules/mek_servo/mek_servo-class-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.servo_class=_module.cleaned_feature;\r\n    validators.create_class_table=_module.create_class_data_table;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_servo-kills-space-trade-data-module\" */\"@/data_table_modules/mek_servo/mek_servo-kills-space-trade-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.servo_trade=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_servo-type-data-module\" */\"@/data_table_modules/mek_servo/mek_servo-type-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.servo_type=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_armor-data-module\" */\"@/data_table_modules/mek_armor/mek_armor-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.armor=_module.cleaned_feature;\r\n    validators.armor_filter=_module.filter_data_table;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_armor-type-data-module\" */\"@/data_table_modules/mek_armor/mek_armor-type-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.armor_type=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_armor-RAM-data-module\" */\"@/data_table_modules/mek_armor/mek_armor-RAM-data-module.js\")\r\n.then((_module)=>\r\n{\r\n    validators.armor_RAM=_module.cleaned_feature;\r\n});\r\n\r\nlet loopValidators, updateMultipliers, round;\r\nimport(/* webpackChunkName: \"validator_functions\" */\"./validator_functions\")\r\n.then((_module)=>\r\n{\r\n    ({loopValidators, updateMultipliers, round} = _module);\r\n});\r\n\r\nlet validateComponent=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let validatedData;\r\n    let updateList=[\"selected_armor_type\",\"selected_absorption\"];\r\n    let loopAlerts;\r\n    let alerts=[];\r\n    let componentsToValidate=\r\n    [\r\n        {validator:validators.servo_type,pkey:\"type\",component_prop:\"selected_servo_type\",skipUpdateList:true},\r\n        {validator:validators.armor_type,pkey:\"damage_coefficient\",component_prop:\"selected_armor_type\",},\r\n        {validator:validators.armor_RAM,pkey:\"absorption\",component_prop:'selected_absorption'},\r\n    ];\r\n    ({cleanedComponent, loopAlerts} = loopValidators(componentsToValidate, cleanedComponent));\r\n    alerts=alerts.concat(loopAlerts)\r\n    //update mek_servo class table based on mek servo type\r\n    validators.create_class_table(_component.selected_servo_type.type);\r\n    //validate servo-class\r\n    validatedData=validators.servo_class(\"code\",_component.selected_servo_class);\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.selected_servo_class=validatedData.data;\r\n    //generate properly formatted kill-space-trade data\r\n    let trade_formatted=\r\n        {\r\n            kills:_component.kills_space_trade.kills_modifier,\r\n            space:_component.kills_space_trade.space_modifier,\r\n            cost:_component.kills_space_trade.cost\r\n        };\r\n    //validate servo-kills-space-trade\r\n    validatedData=validators.servo_trade(\r\n        trade_formatted,\r\n        _component.selected_servo_class.kills,\r\n        _component.selected_servo_class.space);\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.kills_space_trade=validatedData.data;\r\n    // update total kills and available_space\r\n    cleanedComponent.total_kills=cleanedComponent.selected_servo_class.kills + cleanedComponent.kills_space_trade.kills_modifier;\r\n    cleanedComponent.available_space=cleanedComponent.selected_servo_class.space + cleanedComponent.kills_space_trade.space_modifier;\r\n    //update armor based on servo class\r\n    validators.armor_filter(_component.selected_servo_class.code+2);\r\n    //validate armor\r\n    validatedData=validators.armor(\"code\",_component.selected_armor);\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.selected_armor=validatedData.data;\r\n\r\n    cleanedComponent=updateMultipliers(updateList,cleanedComponent);\r\n    //validate space efficiency\r\n    let cost_multiplier=Object.entries(cleanedComponent.cost_multipliers).reduce((_multi, _val)=>\r\n    {//calc new cost_mulitplier\r\n        return _multi*_val[1];\r\n    },1);\r\n    cleanedComponent.cost_multiplier.armor=round(cost_multiplier,2);\r\n    cleanedComponent.weight=(cleanedComponent.total_kills + cleanedComponent.selected_armor.stopping_power)/2;\r\n    cleanedComponent.cost=cleanedComponent.selected_servo_class.cost\r\n                          + (cleanedComponent.selected_armor.cost * cleanedComponent.cost_multiplier.armor)\r\n                          + cleanedComponent.kills_space_trade.cost;\r\n\r\n    return {data:cleanedComponent, alerts:alerts};\r\n};\r\n\r\nexport {validateComponent};"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/_object-to-array.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/entries.js","webpack:///./node_modules/core-js/library/modules/es7.object.entries.js","webpack:///./node_modules/core-js/library/fn/object/entries.js","webpack:///./src/store/modules/validators/mek_beam_validator.js"],"names":["getKeys","__webpack_require__","toIObject","isEnum","f","module","exports","isEntries","it","key","O","keys","length","i","result","call","push","$export","$entries","S","entries","Object","loopValidators","updateMultipliers","round","validators","e","then","bind","_module","accuracy","cleaned_feature","burst_value","damage","filter_feature","filter_data_table","feature","update_range_mod","create_range_mod_data_table","range_mod","update_shots","filter_shots_data_table","shots","warm_up","wide_angle","space_efficiency","validate_efficiency","derived","_component","validatedData","cleanedComponent","alerts","updateList","cost_multipliers","data","concat","cost_multiplier","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_object_entries__WEBPACK_IMPORTED_MODULE_0___default","reduce","_multi","_val","newDamageCapacity","selected_damage","damage_capacity","isFragile","feature_array","some","newWeight","weight","magFed","newCost","cost","efficiencies","space","validateComponent","loopAlerts","componentsToValidate","validator","pkey","component_prop","_loopValidators","range","selected_burst_value","_loopValidators2","base_cost"],"mappings":"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","file":"js/mek_beam_validator-legacy.34a25533.js","sourcesContent":["var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n","module.exports = require(\"core-js/library/fn/object/entries\");","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n","let validators={};\r\n\r\nimport(/* webpackChunkName: \"mek_beam-accuracy-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-accuracy-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.accuracy=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_beam-burst-value-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-burst-value-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.burst_value=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_beam-damage-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-damage-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.damage=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_beam-feature-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-feature-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.filter_feature=_module.filter_data_table;//filter based on burst_value\r\n    validators.feature=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_beam-range-mod-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-range-mod-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.update_range_mod=_module.create_range_mod_data_table;//filter based on base_range\r\n    validators.range_mod=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_beam-shots-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-shots-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.update_shots=_module.filter_shots_data_table;//update based on magfed feature\r\n    validators.shots=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_beam-warm-up-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-warm-up-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.warm_up=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_beam-wide-angle-data-module\" */\"@/data_table_modules/mek_beam/mek_beam-wide-angle-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.wide_angle=_module.cleaned_feature;\r\n});\r\n\r\nimport(/* webpackChunkName: \"mek_space-efficiency-data-module\" */\"@/data_table_modules/universal/mek_space-efficiency-data-module\")\r\n.then((_module)=>\r\n{\r\n    validators.space_efficiency=_module.validate_efficiency;\r\n});\r\n\r\nlet loopValidators, updateMultipliers, round;\r\nimport(/* webpackChunkName: \"validator_functions\" */\"./validator_functions\")\r\n.then((_module)=>\r\n{\r\n    ({loopValidators, updateMultipliers, round} = _module);\r\n});\r\n\r\nvalidators.derived=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let alerts=[];\r\n    let validatedData;\r\n    let updateList=[\"selected_burst_value\",\"selected_accuracy\",\"selected_warm_up_time\",\"selected_wide_angle\",\"selected_range_mod\",\"feature_array\",\"selected_shots\"];\r\n    //update cost_multipliers for components needing update\r\n    validatedData=updateMultipliers(updateList,cleanedComponent,\"Mek-Beam\");\r\n    cleanedComponent.cost_multipliers=validatedData.data;\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    //update cost_multiplier\r\n    let cost_multiplier=Object.entries(cleanedComponent.cost_multipliers).reduce((_multi, _val)=>\r\n    {//calc new cost_multiplier\r\n        return _multi*_val[1];\r\n    },1);\r\n    cost_multiplier=round(cost_multiplier,2);\r\n    if(cleanedComponent.cost_multiplier!=cost_multiplier)\r\n    {\r\n        alerts.push(\"Mek-Beam: cost_multiplier\");\r\n        alerts.push(\"**** Invalid Cost Multiplier. Correcting. ****\");\r\n        cleanedComponent.cost_multiplier=round(cost_multiplier,2);\r\n    }\r\n    let newDamageCapacity=cleanedComponent.selected_damage.damage;\r\n    if(cleanedComponent.damage_capacity!=newDamageCapacity)\r\n    {\r\n        alerts.push(\"Mek-Beam: damage_capacity\");\r\n        alerts.push(\"**** Invalid Damage Capacity. Correcting. ****\");\r\n        cleanedComponent.damage_capacity=newDamageCapacity;\r\n    }\r\n    let isFragile=cleanedComponent.feature_array.some((_val)=>\r\n    {\r\n        return _val.feature==\"Fragile\";\r\n    });\r\n    let newWeight=isFragile ? 1 : newDamageCapacity/2;\r\n    if(cleanedComponent.weight!=newWeight)\r\n    {\r\n        alerts.push(\"Mek-Beam: weight\");\r\n        alerts.push(\"**** Invalid Weight. Correcting. ****\");\r\n        cleanedComponent.weight=newWeight;\r\n    }\r\n    let magFed=cleanedComponent.feature_array.some((_val)=>\r\n    {\r\n        return _val.feature==\"Mag-Fed\";\r\n    });\r\n    magFed=magFed ? 1 : 0;\r\n    let newCost=(cleanedComponent.selected_damage.cost * cost_multiplier) + cleanedComponent.efficiencies.space.cost + magFed;\r\n    newCost=round(newCost,2);\r\n    if(cleanedComponent.cost!=newCost)\r\n    {\r\n        alerts.push(\"Mek-Beam: cost\");\r\n        alerts.push(\"**** Invalid Cost. Correcting. ****\");\r\n        cleanedComponent.cost=newCost;\r\n    }\r\n\r\n    return {data:cleanedComponent, alerts:alerts};\r\n};\r\n\r\nlet validateComponent=(_component)=>\r\n{\r\n    let cleanedComponent=_component;\r\n    let validatedData;\r\n    let loopAlerts;\r\n    let alerts=[];\r\n    //loop thru independent validations\r\n    let componentsToValidate=\r\n    [\r\n        {validator:validators.damage,pkey:\"damage\",component_prop:\"selected_damage\"},\r\n        {validator:validators.burst_value,pkey:\"burst_value\",component_prop:\"selected_burst_value\"},\r\n        {validator:validators.accuracy,pkey:\"accuracy\",component_prop:'selected_accuracy'},\r\n        {validator:validators.warm_up,pkey:\"time\",component_prop:'selected_warm_up_time'},\r\n        {validator:validators.wide_angle,pkey:\"angle\",component_prop:'selected_wide_angle'},\r\n    ];\r\n    ({cleanedComponent, loopAlerts} = loopValidators(componentsToValidate, cleanedComponent));\r\n    alerts=alerts.concat(loopAlerts)\r\n    //update range_mod table\r\n    validators.update_range_mod(cleanedComponent.selected_damage.range);\r\n    //update feature table\r\n    validators.filter_feature(cleanedComponent.selected_burst_value.burst_value);\r\n    //extract if Mag-Fed\r\n    let magFed=cleanedComponent.feature_array.some(_val=>_val.feature==\"Mag-Fed\");\r\n    //update shots table\r\n    validators.update_shots(magFed);\r\n    //loop thru dependent validations\r\n\r\n    componentsToValidate=\r\n    [\r\n        {validator:validators.range_mod,pkey:\"range_mod\",component_prop:\"selected_range_mod\"},\r\n        {validator:validators.feature,pkey:\"feature\",component_prop:\"feature_array\"},\r\n        {validator:validators.shots,pkey:\"shots\",component_prop:'selected_shots'},\r\n    ];\r\n    ({cleanedComponent, loopAlerts} = loopValidators(componentsToValidate, cleanedComponent));\r\n    alerts=alerts.concat(loopAlerts);\r\n\r\n    //update derived values, and cost_multi\r\n    validatedData=validators.derived(cleanedComponent);\r\n    cleanedComponent=validatedData.data;\r\n    alerts=alerts.concat(validatedData.alerts);   \r\n    let base_cost=cleanedComponent.selected_damage.cost * cleanedComponent.cost_multiplier;\r\n    //validate space efficiency\r\n    validatedData=validators.space_efficiency(cleanedComponent.efficiencies.space, base_cost, \"Mek-Beam\");\r\n    alerts=alerts.concat(validatedData.alerts);\r\n    cleanedComponent.efficiencies.space=validatedData.data;\r\n\r\n    return {data:cleanedComponent, alerts:alerts};\r\n};\r\n\r\nexport {validateComponent};"],"sourceRoot":""}
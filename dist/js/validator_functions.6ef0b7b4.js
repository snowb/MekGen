(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["validator_functions"],{"07de":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loopValidators", function() { return loopValidators; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateMultipliers", function() { return updateMultipliers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "round", function() { return round; });\n/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("ac6a");\n/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__);\n\n\nlet loopValidators = (_validators, _component) => {\n  let cleanedComponent = _component;\n  let alerts = [];\n\n  _validators.forEach(_val => {\n    let validatedData = runValidator(_val, cleanedComponent);\n    cleanedComponent[_val.component_prop] = _val.component_prop == "feature_array" ? validatedData.cleaned_array : _val.component_prop == "weakness_array" ? validatedData.cleaned_array : validatedData.data;\n    alerts = alerts.concat(validatedData.alerts);\n  });\n\n  return {\n    cleanedComponent: cleanedComponent,\n    loopAlerts: alerts\n  };\n};\n\nlet runValidator = (_validator_data, _component) => {\n  //let validatorInstance=validators[_validator_data.validator];\n  let validatorInstance = _validator_data.validator;\n  let pkeyInstance = _validator_data.pkey;\n  let propInstance = _component[_validator_data.component_prop];\n\n  if (["feature_array", "weakness_array"].includes(_validator_data.component_prop)) {\n    return validatorInstance(propInstance, pkeyInstance);\n  }\n\n  return validatorInstance(pkeyInstance, propInstance);\n};\n\nlet updateMultipliers = (_updateList, _component, _name) => {\n  let component = _component;\n  let alerts = []; //let data=_component.cost_multipliers;\n\n  component.cost_multipliers = component.cost_multipliers || {};\n\n  if (_component.component_type == "servo" && component.cost_multipliers.armor === undefined) {\n    component.cost_multipliers.armor = {};\n  }\n\n  let data = component.cost_multipliers.armor || component.cost_multipliers;\n  let rootPropName = component.cost_multipliers.armor ? "cost_multipliers.armor." : "cost_multipliers.";\n\n  if (_updateList.length == 0) {\n    return {\n      data: data,\n      alerts: alerts\n    };\n  }\n\n  _updateList.forEach(_component_prop => {\n    if (["feature_array", "weakness_array"].includes(_component_prop)) {\n      let feature_array_cost_multiplier = component[_component_prop].reduce((_cm, _feat) => {\n        return _cm * _feat.cost;\n      }, 1);\n\n      if (component.cost_multipliers[_component_prop] != feature_array_cost_multiplier) {\n        alerts.push(_name + ": " + rootPropName + _component_prop);\n        alerts.push("**** Invalid Cost Multiplier[" + _component_prop + "]. Correcting. ****");\n        data[_component_prop] = feature_array_cost_multiplier;\n      }\n    } else {\n      if (data[_component_prop] != component[_component_prop].cost) {\n        alerts.push(_name + ": " + rootPropName + _component_prop);\n        alerts.push("**** Invalid Cost Multiplier[" + _component_prop + "]. Correcting. ****");\n        data[_component_prop] = component[_component_prop].cost;\n      }\n    }\n  });\n\n  return {\n    data: data,\n    alerts: alerts\n  };\n};\n\nlet round = (_number, _decimals) => {\n  if (typeof _decimals === "undefined" || +_decimals == 0) {\n    return Math.round(+_number);\n  }\n\n  let multiplier = 10 ** +_decimals;\n  return Math.round(+_number * multiplier) / multiplier;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///07de\n')}}]);
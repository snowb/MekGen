{"version":3,"sources":["webpack:///./src/data_table_modules/mek_servo/mek_servo-class-data-module.js","webpack:///./src/data_table_modules/mek_servo/mek_servo-type-data-module.js","webpack:///./src/data_table_modules/universal/mek_partial-function-data-module.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/library/fn/json/stringify.js","webpack:///./src/data_table_modules/universal/servo_classes_data.js","webpack:///./src/data_table_modules/mek_servo/mek_servo-kills-space-trade-data-module.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js"],"names":["class_data_table","data_table_keys","create_class_data_table","_servo_type","type_cost_multiplier","type_space_multiplier","type_kills_multiplier","type_cost_modifier","type_space_modifier","type_kills_modifier","isArm","isLeg","servo_type","undefined","toLowerCase","new_class_table","servo_classes","map","_val","obj","code","id","name","cost","space","kills","damage_bonus","Math","ceil","throw_range","floor","servo_class_validate","partial_validate","has_feature","partial_has_feature","get_feature","partial_get_feature","default_data","cleaned_feature","partial_cleaned_feature","__webpack_require__","r","__webpack_exports__","d","servo_data_table","servo_type_validate","_data_table_modules_universal_mek_partial_function_data_module__WEBPACK_IMPORTED_MODULE_0__","type","_data_table","_validation_keys","_data","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_1___default","length","valid","some","every","_keys","_key","_has_feature","found_feature","_table_val","_this","_validator","_get_feature","_default_data","_name","_pkey","_feature","data","key_list","update","alerts","json_data","F_DEV_Projects_Mekton_Mek_Generator_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","JSON","parse","push","dP","f","FProto","Function","prototype","nameRE","NAME","configurable","get","this","match","e","core","$JSON","stringify","module","exports","it","apply","arguments","_kills_space_obj","_base_kills","_base_space","kills_modifier","space_modifier","new_kills","new_space"],"mappings":"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","file":"js/[request]-legacy.33f84989.js","sourcesContent":["//data table module, raw data output for re-use in non-vue-component formats\r\nimport servo_classes from \"@/data_table_modules/universal/servo_classes_data\";\r\nimport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature} \r\n    from \"@/data_table_modules/universal/mek_partial-function-data-module\";\r\n\r\nlet class_data_table=[];\r\nlet data_table_keys=[\"code\",\"id\",\"name\",\"cost\",\"kills\",\"damage_bonus\",\"throw_range\"];\r\n//create new class_data_table\r\nlet create_class_data_table=function(_servo_type)\r\n{//factory function to create class_data_table based on servo_type, otherwise creates a generic head-type servo\r\n    let type_cost_multiplier=1;\r\n    let type_space_multiplier=1;\r\n    let type_kills_multiplier=1;\r\n    let type_cost_modifier=0;\r\n    let type_space_modifier=0;\r\n    let type_kills_modifier=0;\r\n    let isArm=false;\r\n    let isLeg=false;\r\n    let servo_type=_servo_type!==undefined ? _servo_type.toLowerCase() : \"torso\";\r\n\r\n    switch(servo_type)\r\n    {\r\n        case \"torso\":\r\n            type_cost_multiplier=2;\r\n            type_space_multiplier=2;\r\n            type_kills_multiplier=2;\r\n            break;\r\n        case \"arm\":\r\n            isArm=true;\r\n            break;\r\n        case \"leg\":\r\n            isLeg=true;\r\n            break;\r\n        case \"pod\":\r\n            type_space_multiplier=2;\r\n            type_kills_multiplier=0;\r\n            break;\r\n        //case \"head\": //head, wing, tail are all just 1s\r\n        //case \"wing\":\r\n        //case \"tail\":\r\n        //  break;\r\n        //default:\r\n        //  assume head, x1 multipliers\r\n    }\r\n    let new_class_table = servo_classes.map((_val)=>\r\n    {\r\n        let obj={};\r\n        obj.code=_val.code;\r\n        obj.id=_val.id; \r\n        obj.name=_val.name; \r\n        obj.cost=(_val.code*type_cost_multiplier)+type_cost_modifier;\r\n        obj.space=(_val.code*type_space_multiplier)+type_space_modifier;\r\n        obj.kills=(_val.code*type_kills_multiplier)+type_kills_modifier;\r\n        if(isArm || isLeg)\r\n        {\r\n            obj.damage_bonus=isLeg ? Math.ceil(obj.code/2)-1 : Math.ceil(obj.code/3)-1;\r\n            if(isArm)\r\n            {\r\n                obj.throw_range=Math.floor(obj.code/2)+1;\r\n            }\r\n        }\r\n        return obj;\r\n    });\r\n    class_data_table=new_class_table;\r\n};\r\ncreate_class_data_table();//create default servo_class_table\r\n\r\n//data validator for class_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet servo_class_validate=partial_validate(class_data_table, data_table_keys);\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=partial_has_feature(class_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_feature=partial_get_feature(class_data_table, has_feature);\r\n\r\nlet default_data=get_feature(\"code\",1);\r\n\r\n//completed function for returning cleaed data\r\nlet cleaned_feature=\r\n    partial_cleaned_feature(servo_class_validate, has_feature, get_feature, default_data, \"Mek_Servo-Class\");\r\n\r\nexport {create_class_data_table, class_data_table, servo_class_validate, has_feature, get_feature, cleaned_feature};\r\n","//data table module, raw data output for re-use in non-vue-component formats\r\nimport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature} \r\n    from \"@/data_table_modules/universal/mek_partial-function-data-module\";\r\n\r\n//create new servo_data_table\r\nlet servo_data_table=\r\n[\r\n    {type:\"Torso\"},\r\n    {type:\"Head\"},\r\n    {type:\"Arm\"},\r\n    {type:\"Leg\"},\r\n    {type:\"Wing\"},\r\n    {type:\"Tail\"},\r\n    {type:\"Pod\"},\r\n];\r\nlet data_table_keys=[\"type\"];\r\nlet default_data={type:\"Torso\"};\r\n\r\n//data validator for servo_data_table\r\n//call partial_validate with appropriate data for full validate\r\nlet servo_type_validate=partial_validate(servo_data_table, data_table_keys);\r\n\r\n//completed function for checking if data has data\r\nlet has_feature=partial_has_feature(servo_data_table);\r\n\r\n//completed function for returning matching data\r\nlet get_feature=partial_get_feature(servo_data_table, has_feature);\r\n\r\n//completed function for returning cleaed data\r\nlet cleaned_feature=\r\n    partial_cleaned_feature(servo_type_validate, has_feature, get_feature, default_data, \"Mek_Servo-Type\");\r\n\r\nexport {servo_data_table, servo_type_validate, has_feature, get_feature, cleaned_feature};\r\n","//data table module, raw data output for re-use in non-vue-component formats\r\n\r\n//ATTEMPT: make validators and has_feat and get_feat and cleaned_feat functions \r\n//          neutral and reusable across all data modules\r\n\r\n//partial data validator\r\n//called with data_table and validation_keys in data-module\r\nlet partial_validate=(_data_table,_validation_keys)=>(_data)=>\r\n{//_data_table: Array, array of data to validate against\r\n    //_validation_keys: Array, keys to be compared between passed in data and data_table\r\n    //_data: Object, data to be compared to data table \r\n    if(typeof _data===\"undefined\" || !Array.isArray(_validation_keys) || _validation_keys.length==0)\r\n    {\r\n        return false;\r\n    }\r\n    let valid=_data_table.some((_val)=>\r\n    {\r\n        return _validation_keys.every((_keys)=>\r\n        {//return true if all validation_keys in _data match an element in _data_table\r\n            return _data[_keys]==_val[_keys];\r\n        });\r\n    });\r\n    return valid;\r\n}\r\n\r\n//partial_has_feature, determine if provided data table has matching element with provided key and val\r\n//called in data module to generate full function with local data\r\nlet partial_has_feature=(_data_table)=>(_key, _val)=>\r\n{\r\n    return _data_table.some((_data)=>\r\n    {\r\n        return _data[_key]!==undefined && _data[_key]==_val;\r\n    });\r\n};\r\n\r\n//partial get_feature, returns full function for data module\r\n//requires data_table (array) and module's has_feature function\r\n//returns full matching element in provided data table\r\n//has_feature must exist in data table module\r\nlet partial_get_feature=(_data_table, _has_feature)=>(_key, _val)=>\r\n{\r\n    let found_feature=null;\r\n    if(_has_feature(_key,_val))\r\n    {\r\n        _data_table.some((_table_val)=>\r\n        {\r\n            if(_table_val[_key]==_val)\r\n            {\r\n                found_feature=_table_val;\r\n                return true;\r\n            }\r\n        },this);\r\n    }\r\n    return found_feature;\r\n}\r\n\r\nlet partial_cleaned_feature=(_validator, _has_feature, _get_feature, _default_data, _name)=>(_pkey, _feature)=>\r\n{//input: primary key, selected feature, filtered data table\r\n    let data=undefined;\r\n    let key_list=[];\r\n    let update=false;\r\n    let alerts=[];\r\n    let json_data=JSON.stringify(_feature);\r\n\r\n    if(_feature===undefined || !_has_feature(_pkey,_feature[_pkey]))\r\n    {\r\n        data=_default_data;\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting to default. ****\");\r\n    }\r\n    else if(!_validator(_feature))\r\n    {\r\n        data=JSON.parse(JSON.stringify(_get_feature(_pkey,_feature[_pkey])));\r\n        key_list=[data[_pkey]];\r\n        update=true;\r\n        alerts.push(_name+\": \"+json_data);\r\n        alerts.push(\"**** Invalid data. Reseting. ****\");\r\n    }\r\n    else\r\n    {\r\n        data=JSON.parse(JSON.stringify(_feature));\r\n        key_list=[data[_pkey]];\r\n        update=false;\r\n    }\r\n    return {data:data, key_list:key_list, update:update, alerts:alerts};\r\n}\r\n\r\nexport {partial_validate, partial_has_feature, partial_get_feature, partial_cleaned_feature};\r\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","export default\r\n    [\r\n        {code:1,id:\"SL\",name:\"Superlight\"},\r\n        {code:2,id:\"LW\",name:\"Lightweight\"},\r\n        {code:3,id:\"STR\",name:\"Striker\"},\r\n        {code:4,id:\"MS\",name:\"Medium Striker\"},\r\n        {code:5,id:\"HS\",name:\"Heavy Striker\"},\r\n        {code:6,id:\"MW\",name:\"Mediumweight\"},\r\n        {code:7,id:\"LH\",name:\"Light Heavy\"},\r\n        {code:8,id:\"MH\",name:\"Medium Heavy\"},\r\n        {code:9,id:\"AH\",name:\"Armored Heavy\"},\r\n        {code:10,id:\"SH\",name:\"Super Heavy\"},\r\n        {code:11,id:\"MgH\",name:\"Mega Heavy\"}\r\n    ];\r\n\r\n","//create new check and return cleaned kills-space-trade\r\n\r\nlet cleaned_feature=function(_kills_space_obj, _base_kills, _base_space)\r\n{//input: _kills_space_obj with kills and space props\r\n    let data={};\r\n    data.kills_modifier=0;\r\n    data.space_modifier=0;\r\n    data.cost=0;\r\n    data.kills=_base_kills!==undefined?_base_kills:2;\r\n    data.space=_base_space!==undefined?_base_space:2;\r\n    let alerts=[];\r\n    let update=true;\r\n\r\n    if(_base_kills===undefined)\r\n    {\r\n        alerts.push(\"Mek_Servo-Kills-Space-Trade:\");\r\n        alerts.push(\"**** Missing Base Kills, reseting to 2.\");\r\n        update=true;\r\n    }\r\n    if(_base_space===undefined)\r\n    {\r\n        alerts.push(\"Mek_Servo-Kills-Space-Trade:\");\r\n        alerts.push(\"**** Missing Base Space, reseting to 2.\");\r\n        update=true;\r\n    }\r\n    if(_kills_space_obj.kills===undefined || _kills_space_obj.space===undefined || _kills_space_obj.cost===undefined)\r\n    {\r\n        alerts.push(\"Mek_Servo-Kills-Space-Trade:\");\r\n        alerts.push(\"**** Missing values, reseting to 0.\");\r\n        update=true;\r\n        return {data:data, update:update, alerts:alerts};\r\n    }\r\n\r\n    data.kills_modifier=_kills_space_obj.kills;\r\n    data.space_modifier=_kills_space_obj.space;\r\n    data.cost=_kills_space_obj;\r\n    let new_kills=_base_kills + data.kills_modifier;\r\n    let new_space=_base_space + data.space_modifier;\r\n\r\n    switch(true)\r\n    {\r\n        case new_kills<=0:\r\n        case new_space<0:\r\n        case ((data.kills_modifier*2) + data.space_modifier)!==0:\r\n            alerts.push(\"Mek_Servo-Kills-Space-Trade:\");\r\n            alerts.push(\"**** Invalid values, reseting to 0.\");\r\n            data.kills_modifier=0;\r\n            data.space_modifier=0;\r\n            data.cost=0;\r\n            update=true;\r\n            break;\r\n    }\r\n\r\n    data.cost=data.kills_modifier>0 ? data.kills_modifier*2 : 0;\r\n    data.kills=data.kills + data.kills_modifier;\r\n    data.space=data.space + data.space_modifier;\r\n\r\n    return {data:data, update:update, alerts:alerts};\r\n}\r\n\r\nexport {cleaned_feature};\r\n","module.exports = require(\"core-js/library/fn/json/stringify\");"],"sourceRoot":""}